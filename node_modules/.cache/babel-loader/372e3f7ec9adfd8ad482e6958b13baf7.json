{"ast":null,"code":"import _createClass from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";var List=/*#__PURE__*/_createClass(function List(){var _this=this;_classCallCheck(this,List);this.list=[];this.head=-1;this.tail=-1;this.currentIndex=0;this.push=function(item,array){array.push(item);_this.tail=_this.getSize()-1;_this.list=array;};this.pop=function(array){array.pop();_this.list=array;_this.head=0;_this.tail=_this.getSize()-1;};this.shift=function(array){array.shift();_this.list=array;_this.head=0;_this.tail=_this.getSize()-1;};this.unshift=function(item,array){array.unshift(item);_this.list=array;_this.head=0;_this.tail=_this.getSize()-1;};this.print=function(){return _this.list;};this.addInd=function(index,item,array){array.splice(index,0,item);_this.list=array;_this.head=0;_this.tail=_this.getSize()-1;};this.removeInd=function(index,array){array.splice(index,1);_this.list=array;_this.head=0;_this.tail=_this.getSize()-1;};this.getSize=function(){return _this.list.length;};});export var list=new List();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/list-page/List.tsx"],"names":["List","list","head","tail","currentIndex","push","item","array","getSize","pop","shift","unshift","print","addInd","index","splice","removeInd","length"],"mappings":"mOAWMA,CAAAA,I,0FACJC,I,CAAc,E,MACdC,I,CAAO,CAAC,C,MACRC,I,CAAO,CAAC,C,MACRC,Y,CAAe,C,MAEfC,I,CAAO,SAACC,IAAD,CAAeC,KAAf,CAAyC,CAC9CA,KAAK,CAACF,IAAN,CAAWC,IAAX,EACA,KAAI,CAACH,IAAL,CAAY,KAAI,CAACK,OAAL,GAAiB,CAA7B,CACA,KAAI,CAACP,IAAL,CAAYM,KAAZ,CACD,C,MAEDE,G,CAAM,SAACF,KAAD,CAA2B,CAC/BA,KAAK,CAACE,GAAN,GACA,KAAI,CAACR,IAAL,CAAYM,KAAZ,CACA,KAAI,CAACL,IAAL,CAAY,CAAZ,CACA,KAAI,CAACC,IAAL,CAAY,KAAI,CAACK,OAAL,GAAiB,CAA7B,CACD,C,MAEDE,K,CAAQ,SAACH,KAAD,CAAqB,CAC3BA,KAAK,CAACG,KAAN,GACA,KAAI,CAACT,IAAL,CAAYM,KAAZ,CACA,KAAI,CAACL,IAAL,CAAY,CAAZ,CACA,KAAI,CAACC,IAAL,CAAY,KAAI,CAACK,OAAL,GAAiB,CAA7B,CACD,C,MAEDG,O,CAAU,SAACL,IAAD,CAAeC,KAAf,CAAmC,CAC3CA,KAAK,CAACI,OAAN,CAAcL,IAAd,EACA,KAAI,CAACL,IAAL,CAAYM,KAAZ,CACA,KAAI,CAACL,IAAL,CAAY,CAAZ,CACA,KAAI,CAACC,IAAL,CAAY,KAAI,CAACK,OAAL,GAAiB,CAA7B,CACD,C,MAEDI,K,CAAQ,iBAAM,CAAA,KAAI,CAACX,IAAX,E,MAERY,M,CAAS,SAACC,KAAD,CAAgBR,IAAhB,CAA8BC,KAA9B,CAAkD,CACzDA,KAAK,CAACQ,MAAN,CAAaD,KAAb,CAAoB,CAApB,CAAuBR,IAAvB,EACA,KAAI,CAACL,IAAL,CAAYM,KAAZ,CACA,KAAI,CAACL,IAAL,CAAY,CAAZ,CACA,KAAI,CAACC,IAAL,CAAY,KAAI,CAACK,OAAL,GAAiB,CAA7B,CACD,C,MAEDQ,S,CAAY,SAACF,KAAD,CAAgBP,KAAhB,CAAoC,CAC9CA,KAAK,CAACQ,MAAN,CAAaD,KAAb,CAAoB,CAApB,EACA,KAAI,CAACb,IAAL,CAAYM,KAAZ,CACA,KAAI,CAACL,IAAL,CAAY,CAAZ,CACA,KAAI,CAACC,IAAL,CAAY,KAAI,CAACK,OAAL,GAAiB,CAA7B,CACD,C,MAEDA,O,CAAU,iBAAM,CAAA,KAAI,CAACP,IAAL,CAAUgB,MAAhB,E,IAEZ,MAAO,IAAMhB,CAAAA,IAAI,CAAG,GAAID,CAAAA,IAAJ,EAAb","sourcesContent":["interface IList<T> {\n  list: T[];\n  push: (item: T, array: T[]) => void;\n  pop: (array: T[]) => void;\n  shift: (array: T[]) => void;\n  unshift: (item: T, array: T[]) => void;\n  addInd: (index: number, item: T, array: T[]) => void;\n  removeInd: (index: number, array: T[]) => void;\n  getSize: () => number;\n}\n\nclass List<IArrEl> implements IList<IArrEl> {\n  list: any[] = [];\n  head = -1;\n  tail = -1;\n  currentIndex = 0;\n\n  push = (item: IArrEl, array: IArrEl[]): void => {\n    array.push(item);\n    this.tail = this.getSize() - 1;\n    this.list = array;\n  };\n\n  pop = (array: IArrEl[]): void => {\n    array.pop();\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  shift = (array: IArrEl[]) => {\n    array.shift();\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  unshift = (item: IArrEl, array: IArrEl[]) => {\n    array.unshift(item);\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  print = () => this.list;\n\n  addInd = (index: number, item: IArrEl, array: IArrEl[]) => {\n    array.splice(index, 0, item);\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  removeInd = (index: number, array: IArrEl[]) => {\n    array.splice(index, 1);\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  getSize = () => this.list.length;\n}\nexport const list = new List();\n"]},"metadata":{},"sourceType":"module"}