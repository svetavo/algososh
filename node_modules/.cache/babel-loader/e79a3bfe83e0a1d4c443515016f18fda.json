{"ast":null,"code":"import { ElementStates } from \"../types/element-states\";\nexport const circleColor = (index, currentIndex, arr) => {\n  let length = arr.length - 1;\n\n  if (currentIndex < index || currentIndex > length - index) {\n    return ElementStates.Modified;\n  }\n\n  if (currentIndex === index || currentIndex === length - index) {\n    return ElementStates.Changing;\n  }\n\n  return ElementStates.Default;\n};\n\nconst reverse = value => {\n  setIsLoader(true);\n  const newArr = value.split(\"\");\n  setArr(newArr);\n  arrReverse(newArr);\n  setIsOpen(true);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/string-utils.ts"],"names":["ElementStates","circleColor","index","currentIndex","arr","length","Modified","Changing","Default","reverse","value","setIsLoader","newArr","split","setArr","arrReverse","setIsOpen"],"mappings":"AAAA,SAASA,aAAT,QAA8B,yBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzBC,KADyB,EAEzBC,YAFyB,EAGzBC,GAHyB,KAItB;AACH,MAAIC,MAAM,GAAGD,GAAG,CAACC,MAAJ,GAAa,CAA1B;;AACA,MAAIF,YAAY,GAAGD,KAAf,IAAwBC,YAAY,GAAGE,MAAM,GAAGH,KAApD,EAA2D;AACzD,WAAOF,aAAa,CAACM,QAArB;AACD;;AACD,MAAIH,YAAY,KAAKD,KAAjB,IAA0BC,YAAY,KAAKE,MAAM,GAAGH,KAAxD,EAA+D;AAC7D,WAAOF,aAAa,CAACO,QAArB;AACD;;AACD,SAAOP,aAAa,CAACQ,OAArB;AACD,CAbM;;AAeP,MAAMC,OAAO,GAAIC,KAAD,IAAmB;AACjCC,EAAAA,WAAW,CAAC,IAAD,CAAX;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACG,KAAN,CAAY,EAAZ,CAAf;AACAC,EAAAA,MAAM,CAACF,MAAD,CAAN;AACAG,EAAAA,UAAU,CAACH,MAAD,CAAV;AACAI,EAAAA,SAAS,CAAC,IAAD,CAAT;AACD,CAND","sourcesContent":["import { ElementStates } from \"../types/element-states\";\n\nexport const circleColor = (\n  index: number,\n  currentIndex: number,\n  arr: Array<string | number>\n) => {\n  let length = arr.length - 1;\n  if (currentIndex < index || currentIndex > length - index) {\n    return ElementStates.Modified;\n  }\n  if (currentIndex === index || currentIndex === length - index) {\n    return ElementStates.Changing;\n  }\n  return ElementStates.Default;\n};\n\nconst reverse = (value: string) => {\n  setIsLoader(true);\n  const newArr = value.split(\"\");\n  setArr(newArr);\n  arrReverse(newArr);\n  setIsOpen(true);\n};\n\n\n"]},"metadata":{},"sourceType":"module"}