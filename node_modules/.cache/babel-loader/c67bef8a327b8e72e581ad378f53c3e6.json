{"ast":null,"code":"import { delay } from \"./utils\";\nimport { stack } from \"../components/stack-page/stack_class\";\nexport const pushStack = async _ref => {\n  let {\n    value,\n    setIsDisabled,\n    setIsLoaderAdd,\n    setArray,\n    setCurrentIndex,\n    currentIndex,\n    setValue\n  } = _ref;\n  setIsLoaderAdd(true);\n  setIsDisabled(true);\n  stack.push(value);\n  setArray(stack.printStack());\n  await delay(500);\n  setCurrentIndex(currentIndex + 1);\n  setValue(\"\");\n  setIsLoaderAdd(false);\n};\nexport const popStack = async _ref2 => {\n  let {\n    setIsDisabled,\n    setIsLoaderRemove,\n    setArray,\n    setCurrentIndex\n  } = _ref2;\n  setIsLoaderRemove(true);\n  setIsDisabled(true);\n  await delay(500);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex(stack.getSize() - 1);\n  setIsLoaderRemove(false);\n};\nexport const clearStack = async _ref3 => {\n  let {\n    setIsDisabled,\n    setIsLoaderClear,\n    setArray\n  } = _ref3;\n  setIsLoaderClear(true);\n  setIsDisabled(true);\n  await delay(500);\n  stack.clear();\n  setArray(stack.printStack());\n  setIsLoaderClear(false);\n  setIsDisabled(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/stack-utils.ts"],"names":["delay","stack","pushStack","value","setIsDisabled","setIsLoaderAdd","setArray","setCurrentIndex","currentIndex","setValue","push","printStack","popStack","setIsLoaderRemove","pop","getSize","clearStack","setIsLoaderClear","clear"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AAEA,SAASC,KAAT,QAAsB,sCAAtB;AAgBA,OAAO,MAAMC,SAAS,GAAG,cAQX;AAAA,MARkB;AAC9BC,IAAAA,KAD8B;AAE9BC,IAAAA,aAF8B;AAG9BC,IAAAA,cAH8B;AAI9BC,IAAAA,QAJ8B;AAK9BC,IAAAA,eAL8B;AAM9BC,IAAAA,YAN8B;AAO9BC,IAAAA;AAP8B,GAQlB;AACZJ,EAAAA,cAAc,CAAE,IAAF,CAAd;AACAD,EAAAA,aAAa,CAAC,IAAD,CAAb;AACAH,EAAAA,KAAK,CAACS,IAAN,CAAWP,KAAX;AACAG,EAAAA,QAAQ,CAACL,KAAK,CAACU,UAAN,EAAD,CAAR;AACA,QAAMX,KAAK,CAAC,GAAD,CAAX;AACAO,EAAAA,eAAe,CAAEC,YAAY,GAAI,CAAlB,CAAf;AACAC,EAAAA,QAAQ,CAAE,EAAF,CAAR;AACAJ,EAAAA,cAAc,CAAE,KAAF,CAAd;AACD,CAjBM;AAmBP,OAAO,MAAMO,QAAQ,GAAG,eAKV;AAAA,MALiB;AAC7BR,IAAAA,aAD6B;AAE7BS,IAAAA,iBAF6B;AAG7BP,IAAAA,QAH6B;AAI7BC,IAAAA;AAJ6B,GAKjB;AACZM,EAAAA,iBAAiB,CAAE,IAAF,CAAjB;AACAT,EAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMJ,KAAK,CAAC,GAAD,CAAX;AACAC,EAAAA,KAAK,CAACa,GAAN;AACAR,EAAAA,QAAQ,CAACL,KAAK,CAACU,UAAN,EAAD,CAAR;AACAJ,EAAAA,eAAe,CAAEN,KAAK,CAACc,OAAN,KAAkB,CAApB,CAAf;AACAF,EAAAA,iBAAiB,CAAE,KAAF,CAAjB;AAED,CAdM;AAgBP,OAAO,MAAMG,UAAU,GAAG,eAAiE;AAAA,MAA1D;AAAEZ,IAAAA,aAAF;AAAiBa,IAAAA,gBAAjB;AAAmCX,IAAAA;AAAnC,GAA0D;AACzFW,EAAAA,gBAAgB,CAAE,IAAF,CAAhB;AACAb,EAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMJ,KAAK,CAAC,GAAD,CAAX;AACAC,EAAAA,KAAK,CAACiB,KAAN;AACAZ,EAAAA,QAAQ,CAACL,KAAK,CAACU,UAAN,EAAD,CAAR;AACAM,EAAAA,gBAAgB,CAAE,KAAF,CAAhB;AACAb,EAAAA,aAAa,CAAC,KAAD,CAAb;AAED,CATM","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { stack } from \"../components/stack-page/stack_class\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value?: string;\n  currentIndex?: number;\n  setIsDisabled: Dispatcher<boolean>;\n  setIsLoaderAdd?: Dispatcher<boolean>;\n  setIsLoaderRemove?: Dispatcher<boolean>;\n  setIsLoaderClear?: Dispatcher<boolean>;\n  setValue?: Dispatcher<string>;\n  setArray: Dispatcher<string[]>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const pushStack = async ({\n  value,\n  setIsDisabled,\n  setIsLoaderAdd,\n  setArray,\n  setCurrentIndex,\n  currentIndex,\n  setValue,\n}: IProps) => {\n  setIsLoaderAdd!(true);\n  setIsDisabled(true)\n  stack.push(value!);\n  setArray(stack.printStack());\n  await delay(500);\n  setCurrentIndex!(currentIndex! + 1);\n  setValue!(\"\");\n  setIsLoaderAdd!(false);\n};\n\nexport const popStack = async ({\n  setIsDisabled,\n  setIsLoaderRemove,\n  setArray,\n  setCurrentIndex,\n}: IProps) => {\n  setIsLoaderRemove!(true);\n  setIsDisabled(true)\n  await delay(500);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex!(stack.getSize() - 1);\n  setIsLoaderRemove!(false);\n  \n};\n\nexport const clearStack = async ({ setIsDisabled, setIsLoaderClear, setArray }: IProps) => {\n  setIsLoaderClear!(true);\n  setIsDisabled(true)\n  await delay(500);\n  stack.clear();\n  setArray(stack.printStack());\n  setIsLoaderClear!(false);\n  setIsDisabled(false)\n\n};\n"]},"metadata":{},"sourceType":"module"}