{"ast":null,"code":"import { delay } from \"./utils\";\ni;\nexport const fibonacci = async (n, setResult, setIsLoader, setValue) => {\n  if (n >= 1 && n <= 19) {\n    let arr = [0, 1];\n\n    for (let i = 2; i <= n; i++) {\n      arr[i] = arr[i - 2] + arr[i - 1];\n      await delay(500);\n      setResult(arr.slice(0, i + 1));\n    }\n\n    setIsLoader(false);\n    setValue('');\n  } else {\n    setIsLoader(false);\n    return null;\n  }\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/fibonacci-utils.ts"],"names":["delay","i","fibonacci","n","setResult","setIsLoader","setValue","arr","slice"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AAGAC,CAAC;AAGD,OAAO,MAAMC,SAAS,GAAG,OAAOC,CAAP,EAAkBC,SAAlB,EAA6BC,WAA7B,EAA0CC,QAA1C,KAAuD;AAC5E,MAAIH,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,EAAnB,EAAuB;AACrB,QAAII,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAV;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIE,CAArB,EAAwBF,CAAC,EAAzB,EAA6B;AAC3BM,MAAAA,GAAG,CAACN,CAAD,CAAH,GAASM,GAAG,CAACN,CAAC,GAAG,CAAL,CAAH,GAAaM,GAAG,CAACN,CAAC,GAAG,CAAL,CAAzB;AACA,YAAMD,KAAK,CAAC,GAAD,CAAX;AACAI,MAAAA,SAAS,CAACG,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAaP,CAAC,GAAG,CAAjB,CAAD,CAAT;AACD;;AACDI,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD,MASO;AACLD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,WAAO,IAAP;AACD;AACF,CAdI","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\n\ni\n\n\nexport const fibonacci = async (n: number, setResult, setIsLoader, setValue) => {\n    if (n >= 1 && n <= 19) {\n      let arr = [0, 1];\n      for (let i = 2; i <= n; i++) {\n        arr[i] = arr[i - 2] + arr[i - 1];\n        await delay(500);\n        setResult(arr.slice(0, i + 1));\n      }\n      setIsLoader(false)\n      setValue('')\n    } else {\n      setIsLoader(false)\n      return null;\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}