{"ast":null,"code":"import { delay } from \"./utils\";\nimport { queue } from \"../components/queue-page/Queue\";\nimport { ElementStates } from \"../types/element-states\";\nexport const enqueue = async _ref => {\n  let {\n    value,\n    array,\n    currentIndex,\n    setArray,\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderEnqueue,\n    setTail,\n    setHead,\n    setCurrentIndex,\n    setValue\n  } = _ref;\n  setIsLoaderEnqueue(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: Number(value),\n    state: ElementStates.Default\n  };\n  queue.enqueue(currentIndex, newEl, array);\n  newEl.sta;\n  setArray(queue.queue);\n  await delay(500);\n  setHead(queue.head);\n  setTail(queue.tail);\n  setCurrentIndex(queue.currentIndex);\n  setValue(\"\");\n  setIsDisabled(false);\n  setIsDisabledClear(false);\n  setIsLoaderEnqueue(false);\n};\nexport const dequeue = async _ref2 => {\n  let {\n    array,\n    head,\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderDequeue,\n    setHead,\n    setTail,\n    setCurrentIndex,\n    setArray,\n    emptyElement\n  } = _ref2;\n  setIsLoaderDequeue(true);\n  setIsDisabled(true);\n  queue.dequeue(head, emptyElement, array);\n  setArray(queue.queue);\n  await delay(500);\n  setHead(queue.head);\n  setTail(queue.tail);\n  setCurrentIndex(queue.currentIndex);\n  setIsDisabled(false);\n  setIsLoaderDequeue(false);\n\n  if (queue.tail === -1 && queue.head === -1) {\n    setIsDisabledClear(true);\n  }\n};\nexport const clearQueue = async _ref3 => {\n  let {\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderClear,\n    setArray,\n    setTail,\n    setCurrentIndex,\n    setHead,\n    emptyArray\n  } = _ref3;\n  setIsLoaderClear(true);\n  setIsDisabled(true);\n  queue.clear();\n  await delay(500);\n  setArray(emptyArray);\n  setTail(queue.tail);\n  setCurrentIndex(queue.currentIndex);\n  setHead(queue.head);\n  setIsDisabled(false);\n  setIsLoaderClear(false);\n  setIsDisabledClear(true);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/queue-utils.ts"],"names":["delay","queue","ElementStates","enqueue","value","array","currentIndex","setArray","setIsDisabled","setIsDisabledClear","setIsLoaderEnqueue","setTail","setHead","setCurrentIndex","setValue","newEl","number","Number","state","Default","sta","head","tail","dequeue","setIsLoaderDequeue","emptyElement","clearQueue","setIsLoaderClear","emptyArray","clear"],"mappings":"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","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { queue } from \"../components/queue-page/Queue\";\nimport { ElementStates } from \"../types/element-states\";\nimport {IArrEl} from '../utils/utils'\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps<T> {\n  value?: string;\n  array?: T[];\n  tail?: number;\n  head?: number;\n  currentIndex?: number;\n  emptyElement?: string;\n  emptyArray?: string[];\n  setIsLoaderEnqueue?: Dispatcher<boolean>;\n  setIsLoaderDequeue?: Dispatcher<boolean>;\n  setIsLoaderClear?: Dispatcher<boolean>;\n  setIsDisabled?: Dispatcher<boolean>;\n  setIsDisabledClear?: Dispatcher<boolean>;\n  setValue?: Dispatcher<string>;\n  setArray?: Dispatcher<string[]>;\n  setTail?: Dispatcher<number>;\n  setHead?: Dispatch<number>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const enqueue = async ({\n  value,\n  array,\n  currentIndex,\n  setArray,\n  setIsDisabled,\n  setIsDisabledClear,\n  setIsLoaderEnqueue,\n  setTail,\n  setHead,\n  setCurrentIndex,\n  setValue,\n}: IProps<IArrEl>) => {\n  setIsLoaderEnqueue!(true);\n  setIsDisabled!(true);\n  const newEl = { number: Number(value), state: ElementStates.Default };\n  queue.enqueue(currentIndex!, newEl!, array!);\n  newEl.sta\n  setArray!(queue.queue);\n  await delay(500);\n  setHead!(queue.head);\n  setTail!(queue.tail);\n  setCurrentIndex!(queue.currentIndex);\n  setValue!(\"\");\n  setIsDisabled!(false);\n  setIsDisabledClear!(false);\n  setIsLoaderEnqueue!(false);\n};\n\nexport const dequeue = async ({\n  array,\n  head,\n  setIsDisabled,\n  setIsDisabledClear,\n  setIsLoaderDequeue,\n  setHead,\n  setTail,\n  setCurrentIndex,\n  setArray,\n  emptyElement,\n}: IProps<IArrEl>) => {\n  setIsLoaderDequeue!(true);\n  setIsDisabled!(true);\n  queue.dequeue(head!, emptyElement!, array!);\n  setArray!(queue.queue);\n  await delay(500);\n  setHead!(queue.head);\n  setTail!(queue.tail);\n  setCurrentIndex!(queue.currentIndex);\n  setIsDisabled!(false);\n  setIsLoaderDequeue!(false);\n  if (queue.tail === -1 && queue.head === -1) {\n    setIsDisabledClear!(true);\n  }\n};\n\nexport const clearQueue = async ({\n  setIsDisabled,\n  setIsDisabledClear,\n  setIsLoaderClear,\n  setArray,\n  setTail,\n  setCurrentIndex,\n  setHead,\n  emptyArray,\n}: IProps<IArrEl>) => {\n  setIsLoaderClear!(true);\n  setIsDisabled!(true);\n  queue.clear();\n  await delay(500);\n  setArray!(emptyArray!);\n  setTail!(queue.tail);\n  setCurrentIndex!(queue.currentIndex);\n  setHead!(queue.head);\n  setIsDisabled!(false);\n  setIsLoaderClear!(false);\n  setIsDisabledClear!(true);\n};\n"]},"metadata":{},"sourceType":"module"}