{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/list-page/list-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./list.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { randomArr } from \"../../utils/utils\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport { addHead } from \"../../utils/list-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListPage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [list, setList] = useState([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n  useEffect(() => {\n    setList(randomArr());\n    setTail(list.length);\n  }, []);\n\n  const onChangeValue = e => {\n    setValue(e.target.value);\n  };\n\n  const onChangeIndex = e => {\n    setIndex(e.target.value);\n  }; // const addHead = (item: string) => {\n  //   if (value) {\n  //     setIsLoader(true);\n  //     setHead(-1);\n  //     setIsChanging(true);\n  //     list.unshift(item);\n  //     setIsChanging(false);\n  //     setHead(0);\n  //     setTail(list.length - 1);\n  //   } else {\n  //     alert(\"введите значение в инпут\");\n  //   }\n  //   setIsLoader(false);\n  // };\n  // const addTail = (item: string) => {\n  //   if (value) {\n  //     setIsLoader(true);\n  //     list.push(item);\n  //     setTail(list.length - 1);\n  //   } else {\n  //     alert(\"введите значение в инпут\");\n  //   }\n  //   setIsLoader(false);\n  // };\n  // const removeHead = () => {\n  //   setIsLoader(true);\n  //   list.shift();\n  //   setHead(0);\n  //   setIsLoader(false);\n  // };\n  // const removeTail = () => {\n  //   setIsLoader(true);\n  //   list.pop();\n  //   setTail(list.length - 1);\n  //   setIsLoader(false);\n  // };\n  // const addIndex = (index: string, item: string) => {\n  //   if (value && index) {\n  //     list.splice(Number(index), 0, item);\n  //     setIsLoader(false);\n  //   } else {\n  //     alert(\"Введите индекс и число\");\n  //   }\n  // }; \n  // const removeIndex = (index: string) => {\n  //   if (index) {\n  //     setIsLoader(true);\n  //     list.splice(Number(index), 1);\n  //     setIsLoader(false);\n  //   } else {\n  //     alert(\"Введите индекс\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0432\\u044F\\u0437\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputs,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeValue,\n            value: value,\n            maxLength: 4,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 head\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: () => addHead(list, value, setIsLoader, setHead, setIsChanging, setTail),\n            disabled: list.length > 7 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 tail\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: () => addTail(value),\n            disabled: list.length > 7 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 head\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: removeHead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 tail\",\n            isLoader: isLoader,\n            onClick: removeTail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeIndex,\n            value: index,\n            maxLength: 4,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: () => addIndex(index, value),\n            disabled: list.length > 7 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n            isLoader: isLoader,\n            extraClass: \"mr-20\",\n            onClick: () => removeIndex(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.resultCell,\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              letter: item // key={index}\n              ,\n              index: index,\n              extraClass: styles.item,\n              state: tail === index ? ElementStates.Changing : ElementStates.Default,\n              head: isChanging ? /*#__PURE__*/_jsxDEV(Circle, {\n                isSmall: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this) : head === index ? \"head\" : null,\n              tail: tail === index ? \"tail\" : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), index === list.length - 1 ? null : /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 53\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPage, \"ciNbVK65aj3eENLetV6KnRnQJck=\");\n\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/list-page/list-page.tsx"],"names":["React","useState","useEffect","SolutionLayout","styles","Button","Input","Circle","ElementStates","randomArr","ArrowIcon","addHead","ListPage","value","setValue","index","setIndex","isLoader","setIsLoader","currentIndex","setCurrentIndex","list","setList","tail","setTail","head","setHead","isChanging","setIsChanging","length","onChangeValue","e","target","onChangeIndex","container","inputs","input","addTail","removeHead","removeTail","addIndex","removeIndex","result","map","item","resultCell","Changing","Default"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./list.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { randomArr } from \"../../utils/utils\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport { addHead, add } from \"../../utils/list-utils\";\n\nexport const ListPage: React.FC = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [index, setIndex] = useState<string>(\"\");\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [list, setList] = useState<string[]>([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState<number | null>(0);\n  const [isChanging, setIsChanging] = useState(false);\n\n  useEffect(() => {\n    setList(randomArr());\n    setTail(list.length);\n  }, []);\n  \n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onChangeIndex = (e: ChangeEvent<HTMLInputElement>) => {\n    setIndex(e.target.value);\n  };\n\n  // const addHead = (item: string) => {\n  //   if (value) {\n  //     setIsLoader(true);\n  //     setHead(-1);\n  //     setIsChanging(true);\n  //     list.unshift(item);\n  //     setIsChanging(false);\n  //     setHead(0);\n  //     setTail(list.length - 1);\n  //   } else {\n  //     alert(\"введите значение в инпут\");\n  //   }\n  //   setIsLoader(false);\n  // };\n\n  // const addTail = (item: string) => {\n  //   if (value) {\n  //     setIsLoader(true);\n  //     list.push(item);\n  //     setTail(list.length - 1);\n  //   } else {\n  //     alert(\"введите значение в инпут\");\n  //   }\n  //   setIsLoader(false);\n  // };\n\n  // const removeHead = () => {\n  //   setIsLoader(true);\n  //   list.shift();\n  //   setHead(0);\n  //   setIsLoader(false);\n  // };\n\n  // const removeTail = () => {\n  //   setIsLoader(true);\n  //   list.pop();\n  //   setTail(list.length - 1);\n  //   setIsLoader(false);\n  // };\n\n  // const addIndex = (index: string, item: string) => {\n  //   if (value && index) {\n  //     list.splice(Number(index), 0, item);\n  //     setIsLoader(false);\n  //   } else {\n  //     alert(\"Введите индекс и число\");\n  //   }\n  // }; \n\n  // const removeIndex = (index: string) => {\n  //   if (index) {\n  //     setIsLoader(true);\n  //     list.splice(Number(index), 1);\n  //     setIsLoader(false);\n  //   } else {\n  //     alert(\"Введите индекс\");\n  //   }\n  // };\n\n  return (\n    <SolutionLayout title=\"Связный список\">\n      <div className={styles.container}>\n        <div className={styles.inputs}>\n          <div className={styles.input}>\n            <Input\n              onChange={onChangeValue}\n              value={value}\n              maxLength={4}\n              placeholder=\"Введите значение\"\n            />\n            <Button\n              text=\"Добавить в head\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={() => addHead(list, value, setIsLoader, setHead, setIsChanging, setTail)}\n              disabled={list.length > 7 ? true : false}\n            />\n            <Button\n              text=\"Добавить в tail\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={() => addTail(value)}\n              disabled={list.length > 7 ? true : false}\n            />\n            <Button\n              text=\"Удалить из head\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={removeHead}\n            />\n            <Button\n              text=\"Удалить из tail\"\n              isLoader={isLoader}\n              onClick={removeTail}\n            />\n          </div>\n          <div className={styles.input}>\n            <Input\n              onChange={onChangeIndex}\n              value={index}\n              maxLength={4}\n              placeholder=\"Введите индекс\"\n            />\n            <Button\n              text=\"Добавить по индексу\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={() => addIndex(index, value)}\n              disabled={list.length > 7 ? true : false}\n            />\n\n            <Button\n              text=\"Удалить по индексу\"\n              isLoader={isLoader}\n              extraClass=\"mr-20\"\n              onClick={() => removeIndex(index)}\n            />\n          </div>\n        </div>\n        <div>\n          <div className={styles.result}>\n            {list.map((item, index) => (\n              <div className={styles.resultCell} key={index}>\n                <Circle\n                  letter={item}\n                  // key={index}\n                  index={index}\n                  extraClass={styles.item}\n                  state={\n                    tail === index\n                      ? ElementStates.Changing\n                      : ElementStates.Default\n                  }\n                  head={\n                    isChanging ? (\n                      <Circle isSmall={true} />\n                    ) : head === index ? (\n                      \"head\"\n                    ) : null\n                  }\n                  tail={tail === index ? \"tail\" : null}\n                />\n                {index === list.length - 1 ? null : <ArrowIcon />}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}