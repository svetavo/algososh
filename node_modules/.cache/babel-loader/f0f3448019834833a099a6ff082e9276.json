{"ast":null,"code":"import { delay } from \"./utils\";\nimport { queue } from \"../components/queue-page/queue_class\";\nexport const enqueue = async _ref => {\n  let {\n    value,\n    array,\n    currentIndex,\n    setArray,\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderEnqueue,\n    setTail,\n    setHead,\n    setCurrentIndex,\n    setValue\n  } = _ref;\n  setIsLoaderEnqueue(true);\n  setIsDisabled(true);\n  queue.enqueue(currentIndex, value, array);\n  setArray(queue.queue);\n  await delay(500);\n  setHead(queue.head);\n  setTail(queue.tail);\n  setCurrentIndex(queue.currentIndex);\n  setValue(\"\");\n  setIsDisabled(false);\n  setIsDisabledClear(false);\n  setIsLoaderEnqueue(false);\n};\nexport const dequeue = async _ref2 => {\n  let {\n    array,\n    head,\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderDequeue,\n    setHead,\n    setTail,\n    setArray,\n    emptyElement\n  } = _ref2;\n  setIsLoaderDequeue(true);\n  setIsDisabled(true);\n  queue.dequeue(head, emptyElement, array);\n  setArray(queue.queue);\n  await delay(500);\n  setHead(queue.head);\n  setTail(queue.tail);\n  setCur;\n  setIsDisabled(false);\n  setIsLoaderDequeue(false);\n\n  if (queue.tail === -1 && queue.head === -1) {\n    setIsDisabledClear(true);\n  }\n};\nexport const clearQueue = async _ref3 => {\n  let {\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderClear,\n    setArray,\n    setTail,\n    setCurrentIndex,\n    setHead,\n    emptyArray\n  } = _ref3;\n  setIsLoaderClear(true);\n  setIsDisabled(true);\n  queue.clear();\n  await delay(500);\n  setArray(emptyArray);\n  setTail(queue.tail);\n  setCurrentIndex(queue.currentIndex);\n  setHead(queue.head);\n  setIsDisabled(false);\n  setIsLoaderClear(false);\n  setIsDisabledClear(true);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/queue-utils.ts"],"names":["delay","queue","enqueue","value","array","currentIndex","setArray","setIsDisabled","setIsDisabledClear","setIsLoaderEnqueue","setTail","setHead","setCurrentIndex","setValue","head","tail","dequeue","setIsLoaderDequeue","emptyElement","setCur","clearQueue","setIsLoaderClear","emptyArray","clear"],"mappings":"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","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { queue } from \"../components/queue-page/queue_class\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value?: string;\n  array?: string[];\n  tail?: number;\n  head?: number;\n  currentIndex?: number;\n  emptyElement?: string;\n  emptyArray?: string[];\n  setIsLoaderEnqueue?: Dispatcher<boolean>;\n  setIsLoaderDequeue?: Dispatcher<boolean>;\n  setIsLoaderClear?: Dispatcher<boolean>;\n  setIsDisabled?: Dispatcher<boolean>;\n  setIsDisabledClear?: Dispatcher<boolean>\n  setValue?: Dispatcher<string>;\n  setArray?: Dispatcher<string[]>;\n  setTail?: Dispatcher<number>;\n  setHead?: Dispatch<number>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const enqueue = async ({\n  value,\n  array,\n  currentIndex,\n  setArray,\n  setIsDisabled,\n  setIsDisabledClear,\n  setIsLoaderEnqueue,\n  setTail,\n  setHead,\n  setCurrentIndex,\n  setValue,\n}: IProps) => {\n  setIsLoaderEnqueue!(true);\n  setIsDisabled!(true);\n  queue.enqueue(currentIndex!, value!, array!);\n  setArray!(queue.queue);\n  await delay(500);\n  setHead!(queue.head);\n  setTail!(queue.tail);\n  setCurrentIndex!(queue.currentIndex);\n  setValue!(\"\");\n  setIsDisabled!(false);\n  setIsDisabledClear!(false)\n  setIsLoaderEnqueue!(false);\n};\n\nexport const dequeue = async ({\n  array,\n  head,\n  setIsDisabled,\n  setIsDisabledClear,\n  setIsLoaderDequeue,\n  setHead,\n  setTail,\n  setArray,\n  emptyElement,\n}: IProps) => {\n  setIsLoaderDequeue!(true);\n  setIsDisabled!(true);\n  queue.dequeue(head!, emptyElement!, array!);\n  setArray!(queue.queue);\n  await delay(500);\n  setHead!(queue.head);\n  setTail!(queue.tail);\n  setCur\n  setIsDisabled!(false);\n  setIsLoaderDequeue!(false);\n  if (queue.tail === -1 && queue.head === -1) {\n    setIsDisabledClear!(true)\n  }\n};\n\nexport const clearQueue = async ({\n  setIsDisabled,\n  setIsDisabledClear,\n  setIsLoaderClear,\n  setArray,\n  setTail,\n  setCurrentIndex,\n  setHead,\n  emptyArray,\n}: IProps) => {\n  setIsLoaderClear!(true);\n  setIsDisabled!(true);\n  queue.clear();\n  await delay(500);\n  setArray!(emptyArray!);\n  setTail!(queue.tail);\n  setCurrentIndex!(queue.currentIndex);\n  setHead!(queue.head);\n  setIsDisabled!(false);\n  setIsLoaderClear!(false);\n  setIsDisabledClear!(true)\n};\n"]},"metadata":{},"sourceType":"module"}