{"ast":null,"code":"import { delay } from \"./utils\";\nimport { stack } from \"../components/stack-page/stack_class\";\nexport const pushStack = async _ref => {\n  let {\n    value,\n    setIsLoader,\n    setArray,\n    setCurrentIndex,\n    setValue\n  } = _ref;\n  setIsLoader(true);\n  stack.push(value);\n  setArray(stack.printStack());\n  await delay(500);\n  setCurrentIndex(!+1);\n  setValue(\"\");\n  setIsLoader(false);\n};\nexport const popStack = async _ref2 => {\n  let {\n    setIsLoader,\n    setArray,\n    setCurrentIndex\n  } = _ref2;\n  setIsLoader(true);\n  await delay(500);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex(stack.getSize() - 1);\n  setIsLoader(false);\n};\nexport const clearStack = async _ref3 => {\n  let {\n    setIsLoader,\n    setArray\n  } = _ref3;\n  setIsLoader(true);\n  await delay(500);\n  stack.clear();\n  setArray(stack.printStack());\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/stack-utils.ts"],"names":["delay","stack","pushStack","value","setIsLoader","setArray","setCurrentIndex","setValue","push","printStack","popStack","pop","getSize","clearStack","clear"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AAEA,SAASC,KAAT,QAAsB,sCAAtB;AAYA,OAAO,MAAMC,SAAS,GAAG,cAMX;AAAA,MANkB;AAC9BC,IAAAA,KAD8B;AAE9BC,IAAAA,WAF8B;AAG9BC,IAAAA,QAH8B;AAI9BC,IAAAA,eAJ8B;AAK9BC,IAAAA;AAL8B,GAMlB;AACZH,EAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,EAAAA,KAAK,CAACO,IAAN,CAAWL,KAAX;AACAE,EAAAA,QAAQ,CAACJ,KAAK,CAACQ,UAAN,EAAD,CAAR;AACA,QAAMT,KAAK,CAAC,GAAD,CAAX;AACAM,EAAAA,eAAe,CAAE,CAAE,CAAE,CAAN,CAAf;AACAC,EAAAA,QAAQ,CAAE,EAAF,CAAR;AACAH,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CAdM;AAgBP,OAAO,MAAMM,QAAQ,GAAG,eAIV;AAAA,MAJiB;AAC7BN,IAAAA,WAD6B;AAE7BC,IAAAA,QAF6B;AAG7BC,IAAAA;AAH6B,GAIjB;AACZF,EAAAA,WAAW,CAAC,IAAD,CAAX;AACA,QAAMJ,KAAK,CAAC,GAAD,CAAX;AACAC,EAAAA,KAAK,CAACU,GAAN;AACAN,EAAAA,QAAQ,CAACJ,KAAK,CAACQ,UAAN,EAAD,CAAR;AACAH,EAAAA,eAAe,CAAEL,KAAK,CAACW,OAAN,KAAkB,CAApB,CAAf;AACAR,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CAXM;AAaP,OAAO,MAAMS,UAAU,GAAG,eAA6C;AAAA,MAAtC;AAAET,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAsC;AACrED,EAAAA,WAAW,CAAC,IAAD,CAAX;AACA,QAAMJ,KAAK,CAAC,GAAD,CAAX;AACAC,EAAAA,KAAK,CAACa,KAAN;AACAT,EAAAA,QAAQ,CAACJ,KAAK,CAACQ,UAAN,EAAD,CAAR;AACAL,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CANM","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { stack } from \"../components/stack-page/stack_class\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value?: string;\n  setIsLoader: Dispatcher<boolean>;\n  setValue?: Dispatcher<string>;\n  setArray: Dispatcher<string[]>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const pushStack = async ({\n  value,\n  setIsLoader,\n  setArray,\n  setCurrentIndex,\n  setValue,\n}: IProps) => {\n  setIsLoader(true);\n  stack.push(value!);\n  setArray(stack.printStack());\n  await delay(500);\n  setCurrentIndex!(! + 1);\n  setValue!(\"\");\n  setIsLoader(false);\n};\n\nexport const popStack = async ({\n  setIsLoader,\n  setArray,\n  setCurrentIndex,\n}: IProps) => {\n  setIsLoader(true);\n  await delay(500);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex!(stack.getSize() - 1);\n  setIsLoader(false);\n};\n\nexport const clearStack = async ({ setIsLoader, setArray }: IProps) => {\n  setIsLoader(true);\n  await delay(500);\n  stack.clear();\n  setArray(stack.printStack());\n  setIsLoader(false);\n};\n"]},"metadata":{},"sourceType":"module"}