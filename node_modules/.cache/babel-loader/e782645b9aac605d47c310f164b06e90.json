{"ast":null,"code":"class Queue {\n  constructor() {\n    this.container = [];\n    this.tail = void 0;\n    this.head = void 0;\n    this.maxSize = 7;\n\n    this.enqueue = (index, item) => {\n      if (this.getSize() < this.maxSize) {\n        this.container.splice(index, 1, item);\n      }\n    };\n\n    this.dequeue = () => {\n      if (this.getSize()) {\n        this.container.pop();\n      }\n    };\n\n    this.peak = () => {\n      if (this.getSize()) {\n        return this.container[this.getSize() - 1];\n      }\n\n      return null;\n    };\n\n    this.clear = () => {\n      this.container = [];\n    };\n\n    this.getSize = () => this.container.length;\n\n    this.printStack = () => this.container;\n\n    this.isFull = () => {\n      if (this.getSize() < this.maxSize) {\n        return false;\n      }\n\n      return true;\n    };\n  }\n\n}\n\nexport const queue = new Queue();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/queue_class.tsx"],"names":["Queue","container","tail","head","maxSize","enqueue","index","item","getSize","splice","dequeue","pop","peak","clear","length","printStack","isFull","queue"],"mappings":"AAUE,MAAMA,KAAN,CAAoC;AAAA;AAAA,SAC1BC,SAD0B,GACT,EADS;AAAA,SAElCC,IAFkC;AAAA,SAGlCC,IAHkC;AAAA,SAIlCC,OAJkC,GAIxB,CAJwB;;AAAA,SAMlCC,OANkC,GAMxB,CAACC,KAAD,EAAgBC,IAAhB,KAA4B;AACpC,UAAI,KAAKC,OAAL,KAAiB,KAAKJ,OAA1B,EAAmC;AACjC,aAAKH,SAAL,CAAeQ,MAAf,CAAsBH,KAAtB,EAA6B,CAA7B,EAAgCC,IAAhC;AACD;AACF,KAViC;;AAAA,SAYlCG,OAZkC,GAYxB,MAAY;AACpB,UAAI,KAAKF,OAAL,EAAJ,EAAoB;AAClB,aAAKP,SAAL,CAAeU,GAAf;AACD;AACF,KAhBiC;;AAAA,SAkBlCC,IAlBkC,GAkB3B,MAAgB;AACrB,UAAI,KAAKJ,OAAL,EAAJ,EAAoB;AAClB,eAAO,KAAKP,SAAL,CAAe,KAAKO,OAAL,KAAiB,CAAhC,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KAvBiC;;AAAA,SAyBlCK,KAzBkC,GAyB1B,MAAY;AAClB,WAAKZ,SAAL,GAAiB,EAAjB;AACD,KA3BiC;;AAAA,SA6BlCO,OA7BkC,GA6BxB,MAAM,KAAKP,SAAL,CAAea,MA7BG;;AAAA,SA+BlCC,UA/BkC,GA+BrB,MAAM,KAAKd,SA/BU;;AAAA,SAiClCe,MAjCkC,GAiCzB,MAAM;AACb,UAAI,KAAKR,OAAL,KAAiB,KAAKJ,OAA1B,EAAmC;AACjC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAtCiC;AAAA;;AAAA;;AAyCpC,OAAO,MAAMa,KAAK,GAAG,IAAIjB,KAAJ,EAAd","sourcesContent":["interface IQueue<T> {\n    enqueue: (index: number, item: T) => void;\n    dequeue: () => void;\n    peak: () => T | null;\n    getSize: () => number;\n    printStack: () => T[];\n    clear: () => void;\n    isFull: () => boolean;\n  }\n  \n  class Queue<T> implements IQueue<T> {\n    private container: T[] = [];\n    tail: 0;\n    head: 0;\n    maxSize = 7;\n  \n    enqueue = (index: number, item: T) => {\n      if (this.getSize() < this.maxSize) {\n        this.container.splice(index, 1, item);\n      }\n    };\n  \n    dequeue = (): void => {\n      if (this.getSize()) {\n        this.container.pop();\n      }\n    };\n  \n    peak = (): T | null => {\n      if (this.getSize()) {\n        return this.container[this.getSize() - 1];\n      }\n      return null;\n    };\n  \n    clear = (): void => {\n      this.container = [];\n    };\n  \n    getSize = () => this.container.length;\n  \n    printStack = () => this.container;\n  \n    isFull = () => {\n      if (this.getSize() < this.maxSize) {\n        return false;\n      }\n      return true;\n    };\n  }\n  \n  export const queue = new Queue<string>();\n  "]},"metadata":{},"sourceType":"module"}