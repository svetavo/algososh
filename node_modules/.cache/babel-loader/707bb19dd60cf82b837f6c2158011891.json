{"ast":null,"code":"import { list } from \"../components/list-page/List\";\nimport { ElementStates } from \"../types/element-states\";\nexport const addHead = _ref => {\n  let {\n    array,\n    value,\n    setIsLoader,\n    setIsDisabled,\n    setHead,\n    setIsChanging,\n    setTail,\n    setArray\n  } = _ref;\n  setIsLoader(true);\n  setIsDisabled(true);\n  setHead(-1);\n  setIsChanging(true);\n  const newEl = {\n    number: Number(value),\n    state: ElementStates.Default\n  };\n  list.unshift(newEl, array);\n  setArray(list.print());\n  setIsChanging(false);\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n};\nexport const addTail = _ref2 => {\n  let {\n    array,\n    value,\n    setIsLoader,\n    setArray,\n    setHead,\n    setIsChanging,\n    setTail,\n    setIsDisabled\n  } = _ref2;\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: Number(value),\n    state: ElementStates.Default\n  };\n  list.push(newEl, array);\n  setArray(list.print());\n  setIsChanging(false);\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n};\nexport const removeHead = _ref3 => {\n  let {\n    list,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref3;\n  setIsLoader(true);\n  list.shift();\n  setHead(0);\n  setTail(list.length - 1);\n  setIsLoader(false);\n};\nexport const removeTail = _ref4 => {\n  let {\n    list,\n    setIsLoader,\n    setTail\n  } = _ref4;\n  setIsLoader(true);\n  list.pop();\n  setTail(list.length - 1);\n  setIsLoader(false);\n};\nexport const addIndex = _ref5 => {\n  let {\n    list,\n    value,\n    index,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref5;\n\n  if (value && index) {\n    list.splice(Number(index), 0, value);\n    setIsLoader(false);\n    setHead(0);\n    setTail(list.length - 1);\n  } else {\n    alert(\"Введите индекс и число\");\n  }\n};\nexport const removeIndex = _ref6 => {\n  let {\n    list,\n    index,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref6;\n\n  if (index) {\n    setIsLoader(true);\n    list.splice(Number(index), 1);\n    setIsLoader(false);\n    setHead(0);\n    setTail(list.length - 1);\n  } else {\n    alert(\"Введите индекс\");\n  }\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["list","ElementStates","addHead","array","value","setIsLoader","setIsDisabled","setHead","setIsChanging","setTail","setArray","newEl","number","Number","state","Default","unshift","print","head","tail","addTail","push","removeHead","shift","length","removeTail","pop","addIndex","index","splice","alert","removeIndex"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { list } from \"../components/list-page/List\";\nimport { IArrEl } from \"../utils/utils\";\nimport { ElementStates } from \"../types/element-states\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps<T> {\n  array?: T[];\n  value?: string;\n  index?: string;\n  setArray?: Dispatcher<T[]>;\n  setHead?: Dispatcher<number>;\n  setIsLoader?: Dispatcher<boolean>;\n  setIsDisabled?: Dispatcher<boolean>;\n  setIsChanging?: Dispatcher<boolean>;\n  setTail?: Dispatcher<number>;\n}\n\nexport const addHead = ({\n  array,\n  value,\n  setIsLoader,\n  setIsDisabled,\n  setHead,\n  setIsChanging,\n  setTail,\n  setArray,\n}: IProps<IArrEl>) => {\n  setIsLoader!(true);\n  setIsDisabled!(true);\n  setHead!(-1);\n  setIsChanging!(true);\n  const newEl = { number: Number(value), state: ElementStates.Default };\n  list.unshift(newEl, array!);\n  setArray!(list.print());\n  setIsChanging!(false);\n  setHead!(list.head);\n  setTail!(list.tail);\n  setIsLoader!(false);\n  setIsDisabled!(false);\n};\n\nexport const addTail = ({ array, value, setIsLoader, setArray, setHead, setIsChanging, setTail, setIsDisabled }: IProps) => {\n  setIsLoader!(true);\n  setIsDisabled!(true);\n  const newEl = { number: Number(value), state: ElementStates.Default };\n  list.push(newEl, array);\n  setArray!(list.print());\n  setIsChanging!(false);\n  setHead!(list.head);\n  setTail!(list.tail);\n  setIsLoader!(false);\n  setIsDisabled!(false);\n};\n\nexport const removeHead = ({ list, setIsLoader, setHead, setTail }: IProps) => {\n  setIsLoader!(true);\n  list!.shift();\n  setHead!(0);\n  setTail!(list!.length - 1);\n  setIsLoader!(false);\n};\n\nexport const removeTail = ({ list, setIsLoader, setTail }: IProps) => {\n  setIsLoader!(true);\n  list!.pop();\n  setTail!(list!.length - 1);\n  setIsLoader!(false);\n};\n\nexport const addIndex = ({\n  list,\n  value,\n  index,\n  setIsLoader,\n  setHead,\n  setTail,\n}: IProps) => {\n  if (value && index) {\n    list!.splice(Number(index), 0, value);\n    setIsLoader!(false);\n    setHead!(0);\n    setTail!(list!.length - 1);\n  } else {\n    alert(\"Введите индекс и число\");\n  }\n};\n\nexport const removeIndex = ({\n  list,\n  index,\n  setIsLoader,\n  setHead,\n  setTail,\n}: IProps) => {\n  if (index) {\n    setIsLoader!(true);\n    list!.splice(Number(index), 1);\n    setIsLoader!(false);\n    setHead!(0);\n    setTail!(list!.length - 1);\n  } else {\n    alert(\"Введите индекс\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}