{"ast":null,"code":"import { list } from \"../components/list-page/List\";\nimport { ElementStates } from \"../types/element-states\";\n// добавить в head\nexport const addHead = _ref => {\n  let {\n    array,\n    value,\n    setIsLoader,\n    setIsDisabled,\n    setHead,\n    setIsChanging,\n    setTail,\n    setArray\n  } = _ref;\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  setIsChanging(true);\n  list.unshift(newEl, array);\n  setArray(list.print());\n  newE;\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n}; // добавить в tail\n\nexport const addTail = _ref2 => {\n  let {\n    array,\n    value,\n    setIsLoader,\n    setArray,\n    setHead,\n    setIsChanging,\n    setTail,\n    setIsDisabled\n  } = _ref2;\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  list.push(newEl, array);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n}; // удалить из head\n\nexport const removeHead = _ref3 => {\n  let {\n    array,\n    setIsLoader,\n    setArray,\n    setIsDisabled,\n    setHead,\n    setTail\n  } = _ref3;\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.shift(array);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n}; // удалить из tail\n\nexport const removeTail = _ref4 => {\n  let {\n    array,\n    setIsLoader,\n    setArray,\n    setIsDisabled,\n    setHead,\n    setTail\n  } = _ref4;\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.pop(array);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n}; //добавить по индексу\n\nexport const addIndex = _ref5 => {\n  let {\n    array,\n    value,\n    index,\n    setIsLoader,\n    setIsDisabled,\n    setHead,\n    setTail,\n    setArray\n  } = _ref5;\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  list.addInd(index, newEl, array);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n}; //удалить по индексу\n\nexport const removeIndex = _ref6 => {\n  let {\n    array,\n    index,\n    setIsLoader,\n    setIsDisabled,\n    setHead,\n    setTail,\n    setArray\n  } = _ref6;\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.removeInd(index, array);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["list","ElementStates","addHead","array","value","setIsLoader","setIsDisabled","setHead","setIsChanging","setTail","setArray","newEl","number","state","Default","unshift","print","newE","head","tail","addTail","push","removeHead","shift","removeTail","pop","addIndex","index","addInd","removeIndex","removeInd"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { delay } from \"../utils/utils\";\nimport { list } from \"../components/list-page/List\";\nimport { IArrEl } from \"../utils/utils\";\nimport { ElementStates } from \"../types/element-states\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps<T> {\n  array?: T[];\n  value?: number;\n  index?: number;\n  setArray: Dispatcher<T[]>;\n  setHead: Dispatcher<number>;\n  setIsLoader: Dispatcher<boolean>;\n  setIsDisabled: Dispatcher<boolean>;\n  setIsChanging?: Dispatcher<boolean>;\n  setTail: Dispatcher<number>;\n}\n\n// добавить в head\nexport const addHead = ({\n  array,\n  value,\n  setIsLoader,\n  setIsDisabled,\n  setHead,\n  setIsChanging,\n  setTail,\n  setArray,\n}: IProps<IArrEl>) => {\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = { number: value, state: ElementStates.Default };\n  setIsChanging!(true)\n\n  list.unshift(newEl, array!);\n  setArray(list.print());\n  newE\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n};\n\n// добавить в tail\nexport const addTail = ({\n  array,\n  value,\n  setIsLoader,\n  setArray,\n  setHead,\n  setIsChanging,\n  setTail,\n  setIsDisabled,\n}: IProps<IArrEl>) => {\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = { number: value, state: ElementStates.Default };\n  list.push(newEl, array!);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n};\n\n// удалить из head\nexport const removeHead = ({\n  array,\n  setIsLoader,\n  setArray,\n  setIsDisabled,\n  setHead,\n  setTail,\n}: IProps<IArrEl>) => {\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.shift(array!);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled!(false);\n  setIsLoader!(false);\n};\n\n// удалить из tail\nexport const removeTail = ({\n  array,\n  setIsLoader,\n  setArray,\n  setIsDisabled,\n  setHead,\n  setTail,\n}: IProps<IArrEl>) => {\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.pop(array!);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n};\n\n//добавить по индексу\nexport const addIndex = ({\n  array,\n  value,\n  index,\n  setIsLoader,\n  setIsDisabled,\n  setHead,\n  setTail,\n  setArray,\n}: IProps<IArrEl>) => {\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = { number: value, state: ElementStates.Default };\n  list.addInd(index!, newEl!, array!);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n};\n\n//удалить по индексу\nexport const removeIndex = ({\n  array,\n  index,\n  setIsLoader,\n  setIsDisabled,\n  setHead,\n  setTail,\n  setArray,\n}: IProps<IArrEl>) => {\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.removeInd(index!, array!);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n};\n"]},"metadata":{},"sourceType":"module"}