{"ast":null,"code":"import { delay } from \"./utils\";\nimport { stack } from \"../components/stack-page/stack_class\";\nexport const pushStack = async _ref => {\n  let {\n    value,\n    setIsLoader,\n    setArray,\n    setCurrentIndex,\n    currentIndex,\n    setValue\n  } = _ref;\n  setIsLoader(true);\n  stack.push(value);\n  setArray(stack.printStack());\n  await delay(500);\n  setCurrentIndex(currentIndex + 1);\n  setValue(\"\");\n  setIsLoader(false);\n};\nexport const popStack = _ref2 => {\n  let {\n    setIsLoader,\n    setArray,\n    setCurrentIndex,\n    currentIndex\n  } = _ref2;\n  setIsLoader(true);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex(curr - 1);\n  setIsLoader(false);\n};\nexport const clearStack = _ref3 => {\n  let {\n    setIsLoader,\n    setArray\n  } = _ref3;\n  setIsLoader(true);\n  stack.clear();\n  setArray(stack.printStack());\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/stack-utils.ts"],"names":["delay","stack","pushStack","value","setIsLoader","setArray","setCurrentIndex","currentIndex","setValue","push","printStack","popStack","pop","curr","clearStack","clear"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AAEA,SAASC,KAAT,QAAsB,sCAAtB;AAaA,OAAO,MAAMC,SAAS,GAAG,cAOX;AAAA,MAPiB;AAC7BC,IAAAA,KAD6B;AAE7BC,IAAAA,WAF6B;AAG7BC,IAAAA,QAH6B;AAI7BC,IAAAA,eAJ6B;AAK7BC,IAAAA,YAL6B;AAM7BC,IAAAA;AAN6B,GAOjB;AACZJ,EAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,EAAAA,KAAK,CAACQ,IAAN,CAAWN,KAAX;AACAE,EAAAA,QAAQ,CAACJ,KAAK,CAACS,UAAN,EAAD,CAAR;AACA,QAAMV,KAAK,CAAC,GAAD,CAAX;AACAM,EAAAA,eAAe,CAAEC,YAAY,GAAI,CAAlB,CAAf;AACAC,EAAAA,QAAQ,CAAE,EAAF,CAAR;AACAJ,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CAfM;AAiBP,OAAO,MAAMO,QAAQ,GAAG,SAKV;AAAA,MALW;AACvBP,IAAAA,WADuB;AAEvBC,IAAAA,QAFuB;AAGvBC,IAAAA,eAHuB;AAIvBC,IAAAA;AAJuB,GAKX;AACZH,EAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,EAAAA,KAAK,CAACW,GAAN;AACAP,EAAAA,QAAQ,CAACJ,KAAK,CAACS,UAAN,EAAD,CAAR;AACAJ,EAAAA,eAAe,CAAEO,IAAI,GAAG,CAAT,CAAf;AACAT,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CAXM;AAaP,OAAO,MAAMU,UAAU,GAAG,SAA6C;AAAA,MAA5C;AAAEV,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAA4C;AACrED,EAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,EAAAA,KAAK,CAACc,KAAN;AACAV,EAAAA,QAAQ,CAACJ,KAAK,CAACS,UAAN,EAAD,CAAR;AACAN,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CALM","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { stack } from \"../components/stack-page/stack_class\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value?: string;\n  currentIndex?: number;\n  setIsLoader: Dispatcher<boolean>;\n  setValue?: Dispatcher<string>;\n  setArray: Dispatcher<string[]>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const pushStack = async({\n  value,\n  setIsLoader,\n  setArray,\n  setCurrentIndex,\n  currentIndex,\n  setValue,\n}: IProps) => {\n  setIsLoader(true);\n  stack.push(value!);\n  setArray(stack.printStack());\n  await delay(500)\n  setCurrentIndex!(currentIndex! + 1);\n  setValue!(\"\");\n  setIsLoader(false);\n};\n\nexport const popStack = ({\n  setIsLoader,\n  setArray,\n  setCurrentIndex,\n  currentIndex,\n}: IProps) => {\n  setIsLoader(true);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex!(curr - 1);\n  setIsLoader(false);\n};\n\nexport const clearStack = ({ setIsLoader, setArray }: IProps): void => {\n  setIsLoader(true);\n  stack.clear()\n  setArray(stack.printStack());\n  setIsLoader(false);\n};\n"]},"metadata":{},"sourceType":"module"}