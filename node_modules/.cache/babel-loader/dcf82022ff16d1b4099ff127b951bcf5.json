{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/sorting-page/sorting-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"../ui/button/button\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./sorting.module.css\";\nimport { bubbleSort, selectionSort } from \"../../utils/sorting-utils\";\nimport { UP, DOWN } from \"../../constants/directions\";\nimport { Column } from \"../ui/column/column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SortingPage = () => {\n  _s();\n\n  const [method, setMethod] = useState(undefined);\n  const [randomArray, setRandomArray] = useState([]);\n  const [result, setResult] = useState([]); //random count\n\n  const getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }; //random array\n\n\n  const randomArr = () => {\n    const array = [];\n    const max = 100;\n    const count = getRandomInt(3, 17);\n\n    while (array.length < count) {\n      const r = Math.floor(Math.random() * max);\n\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n\n    setRandomArray(array);\n  };\n\n  const selection = (array, direction) => {\n    selectionSort(array, direction);\n    setResult(array);\n  };\n\n  const bubble = (array, direction) => {\n    bubbleSort(array, direction);\n    setResult(array);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\\u0430\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.navigation,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.navigation,\n          children: [/*#__PURE__*/_jsxDEV(RadioInput, {\n            label: \"\\u0412\\u044B\\u0431\\u043E\\u0440\",\n            extraClass: styles.navigationItem,\n            onClick: () => setMethod(\"selection\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioInput, {\n            label: \"\\u041F\\u0443\\u0437\\u044B\\u0440\\u0451\\u043A\",\n            extraClass: styles.navigationItem,\n            onClick: () => setMethod(\"bubble\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u041F\\u043E \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430\\u043D\\u0438\\u044E\",\n            extraClass: styles.navigationItem,\n            onClick: method === \"selection\" ? () => selection(randomArray, UP) : () => bubble(randomArray, UP)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u041F\\u043E \\u0443\\u0431\\u044B\\u0432\\u0430\\u043D\\u0438\\u044E\",\n            extraClass: styles.navigationItem,\n            onClick: method === \"selection\" ? () => selection(randomArray, DOWN) : () => bubble(randomArray, DOWN)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\",\n          onClick: () => randomArr()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), result !== null && result !== void 0 && result.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.result,\n        children: result.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.resultItem,\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            index: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SortingPage, \"tJxy7cR+i4MyBTqLecSkT0QLCZU=\");\n\n_c = SortingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/sorting-page/sorting-page.tsx"],"names":["React","useState","Button","RadioInput","SolutionLayout","styles","bubbleSort","selectionSort","UP","DOWN","Column","SortingPage","method","setMethod","undefined","randomArray","setRandomArray","result","setResult","getRandomInt","min","max","Math","floor","random","randomArr","array","count","length","r","indexOf","push","selection","direction","bubble","container","navigation","navigationItem","map","el","index","resultItem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"../ui/button/button\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./sorting.module.css\";\nimport { bubbleSort, selectionSort } from \"../../utils/sorting-utils\";\nimport { UP, DOWN } from \"../../constants/directions\";\nimport { Column } from \"../ui/column/column\";\n\n\nexport const SortingPage: React.FC = (): JSX.Element => {\n  const [method, setMethod] = useState<string | undefined>(undefined);\n  const [randomArray, setRandomArray] = useState<number[]>([]);\n  const [result, setResult] = useState<number[]>([]);\n\n  \n  //random count\n  const getRandomInt = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  //random array\n  const randomArr = (): void => {\n    const array = [];\n    const max = 100;\n    const count: number = getRandomInt(3, 17);\n    while (array.length < count) {\n      const r: number = Math.floor(Math.random() * max);\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n    setRandomArray(array);\n  };\n\n  const selection = (array: number[], direction: string) => {\n    selectionSort(array, direction);\n    setResult(array);\n  };\n\n  const bubble = (array: number[], direction: string) => {\n    bubbleSort(array, direction);\n    setResult(array);\n  };\n\n  return (\n    <SolutionLayout title=\"Сортировка массива\">\n      <div className={styles.container}>\n        <div className={styles.navigation}>\n          <div className={styles.navigation}>\n            <RadioInput\n              label=\"Выбор\"\n              extraClass={styles.navigationItem}\n              onClick={() => setMethod(\"selection\")}\n            />\n            <RadioInput\n              label=\"Пузырёк\"\n              extraClass={styles.navigationItem}\n              onClick={() => setMethod(\"bubble\")}\n            />\n            <Button\n              text=\"По возрастанию\"\n              extraClass={styles.navigationItem}\n              onClick={\n                method === \"selection\"\n                  ? () => selection(randomArray, UP)\n                  : () => bubble(randomArray, UP)\n              }\n            />\n            <Button\n              text=\"По убыванию\"\n              extraClass={styles.navigationItem}\n              onClick={\n                method === \"selection\"\n                  ? () => selection(randomArray, DOWN)\n                  : () => bubble(randomArray, DOWN)\n              }\n            />\n          </div>\n          <Button text=\"Новый массив\" onClick={() => randomArr()} />\n        </div>\n        {result?.length ? (\n          <div className={styles.result}>\n            {result.map((el, index) => (\n              <div key={index} className={styles.resultItem}>\n                <Column index={el}/>\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}