{"ast":null,"code":"import { delay } from \"./utils\";\nimport { stack } from \"../components/stack-page/Stack\";\nexport const pushStack = async _ref => {\n  let {\n    value,\n    setIsDisabled,\n    setIsLoaderAdd,\n    setArray,\n    setCurrentIndex,\n    currentIndex,\n    setValue\n  } = _ref;\n  setIsLoaderAdd(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: value,\n    state: Ele\n  };\n  stack.push(value);\n  setArray(stack.printStack());\n  await delay(500);\n  setCurrentIndex(currentIndex + 1);\n  setValue(\"\");\n  setIsLoaderAdd(false);\n  setIsDisabled(false);\n};\nexport const popStack = async _ref2 => {\n  let {\n    setIsDisabled,\n    setIsLoaderRemove,\n    setArray,\n    setCurrentIndex\n  } = _ref2;\n  setIsLoaderRemove(true);\n  setIsDisabled(true);\n  await delay(500);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex(stack.getSize() - 1);\n  setIsLoaderRemove(false);\n  setIsDisabled(false);\n};\nexport const clearStack = async _ref3 => {\n  let {\n    setIsDisabled,\n    setIsLoaderClear,\n    setArray\n  } = _ref3;\n  setIsLoaderClear(true);\n  setIsDisabled(true);\n  await delay(500);\n  stack.clear();\n  setArray(stack.printStack());\n  setIsLoaderClear(false);\n  setIsDisabled(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/stack-utils.ts"],"names":["delay","stack","pushStack","value","setIsDisabled","setIsLoaderAdd","setArray","setCurrentIndex","currentIndex","setValue","newEl","number","state","Ele","push","printStack","popStack","setIsLoaderRemove","pop","getSize","clearStack","setIsLoaderClear","clear"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AAEA,SAASC,KAAT,QAAsB,gCAAtB;AAiBA,OAAO,MAAMC,SAAS,GAAG,cAQX;AAAA,MARkB;AAC9BC,IAAAA,KAD8B;AAE9BC,IAAAA,aAF8B;AAG9BC,IAAAA,cAH8B;AAI9BC,IAAAA,QAJ8B;AAK9BC,IAAAA,eAL8B;AAM9BC,IAAAA,YAN8B;AAO9BC,IAAAA;AAP8B,GAQlB;AACZJ,EAAAA,cAAc,CAAE,IAAF,CAAd;AACAD,EAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMM,KAAa,GAAG;AAACC,IAAAA,MAAM,EAAER,KAAT;AAAgBS,IAAAA,KAAK,EAAEC;AAAvB,GAAtB;AACAZ,EAAAA,KAAK,CAACa,IAAN,CAAWX,KAAX;AACAG,EAAAA,QAAQ,CAACL,KAAK,CAACc,UAAN,EAAD,CAAR;AACA,QAAMf,KAAK,CAAC,GAAD,CAAX;AACAO,EAAAA,eAAe,CAAEC,YAAY,GAAI,CAAlB,CAAf;AACAC,EAAAA,QAAQ,CAAE,EAAF,CAAR;AACAJ,EAAAA,cAAc,CAAE,KAAF,CAAd;AACAD,EAAAA,aAAa,CAAC,KAAD,CAAb;AACD,CAnBM;AAqBP,OAAO,MAAMY,QAAQ,GAAG,eAKV;AAAA,MALiB;AAC7BZ,IAAAA,aAD6B;AAE7Ba,IAAAA,iBAF6B;AAG7BX,IAAAA,QAH6B;AAI7BC,IAAAA;AAJ6B,GAKjB;AACZU,EAAAA,iBAAiB,CAAE,IAAF,CAAjB;AACAb,EAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMJ,KAAK,CAAC,GAAD,CAAX;AACAC,EAAAA,KAAK,CAACiB,GAAN;AACAZ,EAAAA,QAAQ,CAACL,KAAK,CAACc,UAAN,EAAD,CAAR;AACAR,EAAAA,eAAe,CAAEN,KAAK,CAACkB,OAAN,KAAkB,CAApB,CAAf;AACAF,EAAAA,iBAAiB,CAAE,KAAF,CAAjB;AACAb,EAAAA,aAAa,CAAC,KAAD,CAAb;AACD,CAdM;AAgBP,OAAO,MAAMgB,UAAU,GAAG,eAIZ;AAAA,MAJmB;AAC/BhB,IAAAA,aAD+B;AAE/BiB,IAAAA,gBAF+B;AAG/Bf,IAAAA;AAH+B,GAInB;AACZe,EAAAA,gBAAgB,CAAE,IAAF,CAAhB;AACAjB,EAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMJ,KAAK,CAAC,GAAD,CAAX;AACAC,EAAAA,KAAK,CAACqB,KAAN;AACAhB,EAAAA,QAAQ,CAACL,KAAK,CAACc,UAAN,EAAD,CAAR;AACAM,EAAAA,gBAAgB,CAAE,KAAF,CAAhB;AACAjB,EAAAA,aAAa,CAAC,KAAD,CAAb;AACD,CAZM","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { stack } from \"../components/stack-page/Stack\";\nimport {IArrEl} from '../utils/utils'\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value?: string;\n  currentIndex?: number;\n  setIsDisabled: Dispatcher<boolean>;\n  setIsLoaderAdd?: Dispatcher<boolean>;\n  setIsLoaderRemove?: Dispatcher<boolean>;\n  setIsLoaderClear?: Dispatcher<boolean>;\n  setValue?: Dispatcher<string>;\n  setArray: Dispatcher<string[]>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const pushStack = async ({\n  value,\n  setIsDisabled,\n  setIsLoaderAdd,\n  setArray,\n  setCurrentIndex,\n  currentIndex,\n  setValue,\n}: IProps) => {\n  setIsLoaderAdd!(true);\n  setIsDisabled(true);\n  const newEl: IArrEl = {number: value, state: Ele}\n  stack.push(value!);\n  setArray(stack.printStack());\n  await delay(500);\n  setCurrentIndex!(currentIndex! + 1);\n  setValue!(\"\");\n  setIsLoaderAdd!(false);\n  setIsDisabled(false);\n};\n\nexport const popStack = async ({\n  setIsDisabled,\n  setIsLoaderRemove,\n  setArray,\n  setCurrentIndex,\n}: IProps) => {\n  setIsLoaderRemove!(true);\n  setIsDisabled(true);\n  await delay(500);\n  stack.pop();\n  setArray(stack.printStack());\n  setCurrentIndex!(stack.getSize() - 1);\n  setIsLoaderRemove!(false);\n  setIsDisabled(false);\n};\n\nexport const clearStack = async ({\n  setIsDisabled,\n  setIsLoaderClear,\n  setArray,\n}: IProps) => {\n  setIsLoaderClear!(true);\n  setIsDisabled(true);\n  await delay(500);\n  stack.clear();\n  setArray(stack.printStack());\n  setIsLoaderClear!(false);\n  setIsDisabled(false);\n};\n"]},"metadata":{},"sourceType":"module"}