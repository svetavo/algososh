{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/list-page/list-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./list.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListPage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [list, setList] = useState([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0);\n  const emptyArr = Array.apply(null, Array(4)).map(() => emptyElement); //random count\n\n  const getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }; //random array\n\n\n  const randomArr = () => {\n    const array = [];\n    const max = 100;\n    const count = getRandomInt(3, 17);\n\n    while (array.length < count) {\n      const r = Math.floor(Math.random() * max);\n\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n\n    setAr(array);\n    return array;\n  };\n\n  useEffect(() => {\n    setList(emptyArr);\n  }, []);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0432\\u044F\\u0437\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputs,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChange,\n            value: value,\n            maxLength: 4,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 head\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            disabled: list.length > maxLength ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 tail\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            disabled: list.length > maxLength ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 head\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 tail\",\n            isLoader: isLoader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChange,\n            value: value,\n            maxLength: 4,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            disabled: list.length > maxLength ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n            isLoader: isLoader,\n            extraClass: \"mr-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: list.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            index: index,\n            extraClass: styles.item,\n            state: tail === index ? ElementStates.Changing : ElementStates.Default,\n            head: head === index ? \"head\" : null,\n            tail: tail === index ? \"tail\" : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPage, \"6e/xYQVRI+kXLDmmRdp3NqEcwVI=\");\n\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/list-page/list-page.tsx"],"names":["React","useState","useEffect","SolutionLayout","styles","Button","Input","Circle","ElementStates","ListPage","value","setValue","isLoader","setIsLoader","currentIndex","setCurrentIndex","list","setList","tail","setTail","head","setHead","emptyArr","Array","apply","map","emptyElement","getRandomInt","min","max","Math","floor","random","randomArr","array","count","length","r","indexOf","push","setAr","onChange","e","target","container","inputs","input","maxLength","result","item","index","Changing","Default"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./list.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\n\nexport const ListPage: React.FC = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [list, setList] = useState<string[]>([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0);\n\n  const emptyArr: string[] = Array.apply(null, Array(4)).map(\n    () => emptyElement\n  );\n\n  //random count\n  const getRandomInt = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  //random array\n  const randomArr = () => {\n    const array = [];\n    const max = 100;\n    const count: number = getRandomInt(3, 17);\n    while (array.length < count) {\n      const r: number = Math.floor(Math.random() * max);\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n    setAr(array);\n    return array;\n  };\n\n  useEffect(() => {\n    setList(emptyArr);\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <SolutionLayout title=\"Связный список\">\n      <div className={styles.container}>\n        <div className={styles.inputs}>\n          <div className={styles.input}>\n            <Input\n              onChange={onChange}\n              value={value}\n              maxLength={4}\n              placeholder=\"Введите значение\"\n            />\n            <Button\n              text=\"Добавить в head\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              disabled={list.length > maxLength ? true : false}\n            />\n            <Button\n              text=\"Добавить в tail\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              disabled={list.length > maxLength ? true : false}\n            />\n            <Button\n              text=\"Удалить из head\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n            />\n            <Button text=\"Удалить из tail\" isLoader={isLoader} />\n          </div>\n          <div className={styles.input}>\n            <Input\n              onChange={onChange}\n              value={value}\n              maxLength={4}\n              placeholder=\"Введите индекс\"\n            />\n            <Button\n              text=\"Добавить по индексу\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              disabled={list.length > maxLength ? true : false}\n            />\n\n            <Button\n              text=\"Удалить по индексу\"\n              isLoader={isLoader}\n              extraClass=\"mr-20\"\n            />\n          </div>\n        </div>\n        <div>\n          <div className={styles.result}>\n            {list.map((item, index) => (\n              <Circle\n                letter={item}\n                key={index}\n                index={index}\n                extraClass={styles.item}\n                state={\n                  tail === index\n                    ? ElementStates.Changing\n                    : ElementStates.Default\n                }\n                head={head === index ? \"head\" : null}\n                tail={tail === index ? \"tail\" : null}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}