{"ast":null,"code":"import _createClass from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";var Stack=/*#__PURE__*/_createClass(function Stack(){var _this=this;_classCallCheck(this,Stack);this.stack=[];this.top=-1;this.maxSize=7;this.push=function(item){if(_this.getSize()<_this.maxSize){_this.stack.push(item);_this.top++;}};this.pop=function(){if(_this.getSize()){_this.stack.pop();_this.top--;}};this.peak=function(){if(_this.getSize()){return _this.stack[_this.getSize()-1];}return null;};this.clear=function(){_this.stack=[];_this.top=-1;};this.getSize=function(){return _this.stack.length;};this.printStack=function(){return _this.stack;};this.isFull=function(){if(_this.getSize()<_this.maxSize){return false;}return true;};});export var stack=new Stack();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/stack-page/Stack.tsx"],"names":["Stack","stack","top","maxSize","push","item","getSize","pop","peak","clear","length","printStack","isFull"],"mappings":"mOAUMA,CAAAA,K,4FACJC,K,CAAe,E,MACfC,G,CAAc,CAAC,C,MACPC,O,CAAU,C,MAElBC,I,CAAO,SAACC,IAAD,CAAmB,CACxB,GAAI,KAAI,CAACC,OAAL,GAAiB,KAAI,CAACH,OAA1B,CAAmC,CACjC,KAAI,CAACF,KAAL,CAAWG,IAAX,CAAgBC,IAAhB,EACA,KAAI,CAACH,GAAL,GACD,CACF,C,MAEDK,G,CAAM,UAAY,CAChB,GAAI,KAAI,CAACD,OAAL,EAAJ,CAAoB,CAClB,KAAI,CAACL,KAAL,CAAWM,GAAX,GACA,KAAI,CAACL,GAAL,GACD,CACF,C,MAEDM,I,CAAO,UAAgB,CACrB,GAAI,KAAI,CAACF,OAAL,EAAJ,CAAoB,CAClB,MAAO,CAAA,KAAI,CAACL,KAAL,CAAW,KAAI,CAACK,OAAL,GAAiB,CAA5B,CAAP,CACD,CACD,MAAO,KAAP,CACD,C,MAEDG,K,CAAQ,UAAY,CAClB,KAAI,CAACR,KAAL,CAAa,EAAb,CACA,KAAI,CAACC,GAAL,CAAW,CAAC,CAAZ,CACD,C,MAEDI,O,CAAU,iBAAM,CAAA,KAAI,CAACL,KAAL,CAAWS,MAAjB,E,MAEVC,U,CAAa,iBAAM,CAAA,KAAI,CAACV,KAAX,E,MAEbW,M,CAAS,UAAM,CACb,GAAI,KAAI,CAACN,OAAL,GAAiB,KAAI,CAACH,OAA1B,CAAmC,CACjC,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,C,IAGH,MAAO,IAAMF,CAAAA,KAAK,CAAG,GAAID,CAAAA,KAAJ,EAAd","sourcesContent":["interface IStack<T> {\n  push: (item: T) => void;\n  pop: () => void;\n  peak: () => T | null;\n  getSize: () => number;\n  printStack: () => T[];\n  clear: () => void;\n  isFull: () => boolean;\n}\n \nclass Stack<T> implements IStack<T> {\n  stack: any[] = [];\n  top: number = -1\n  private maxSize = 7;\n\n  push = (item: T): void => {\n    if (this.getSize() < this.maxSize) {\n      this.stack.push(item);\n      this.top++\n    }\n  };\n\n  pop = (): void => {\n    if (this.getSize()) {\n      this.stack.pop();\n      this.top--\n    }\n  };\n\n  peak = (): T | null => {\n    if (this.getSize()) {\n      return this.stack[this.getSize() - 1];\n    }\n    return null;\n  };\n\n  clear = (): void => {\n    this.stack = [];\n    this.top = -1\n  };\n\n  getSize = () => this.stack.length;\n\n  printStack = () => this.stack;\n\n  isFull = () => {\n    if (this.getSize() < this.maxSize) {\n      return false;\n    }\n    return true;\n  };\n}\n\nexport const stack = new Stack();\n"]},"metadata":{},"sourceType":"module"}