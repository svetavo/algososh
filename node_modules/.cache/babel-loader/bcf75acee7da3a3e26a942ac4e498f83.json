{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/stack-page/stack-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./stack.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { pushStack, popStack, clearStack } from \"../../utils/stack-utils\";\nimport { stack } from \"./stack_class\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StackPage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [array, setArray] = useState([]);\n  const pushProps = {\n    value,\n    setIsLoader,\n    setArray,\n    setCurrentIndex,\n    currentIndex,\n    setValue\n  };\n  const popProps = {\n    setIsLoader,\n    setArray,\n    setCurrentIndex,\n    currentIndex\n  };\n  const clearProps = {\n    setIsLoader,\n    setArray\n  };\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0435\\u043A\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setValue(e.currentTarget.value),\n          value: value,\n          maxLength: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-5\",\n          onClick: () => pushStack(pushProps),\n          disabled: value || stack.isFull() ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-20\",\n          onClick: () => popStack(popProps),\n          disabled: array.length ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          onClick: () => clearStack(clearProps),\n          disabled: array.length ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: array === null || array === void 0 ? void 0 : array.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            index: index,\n            extraClass: styles.item,\n            state: currentIndex === index ? ElementStates.Changing : ElementStates.Default,\n            head: currentIndex === index ? \"top\" : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StackPage, \"ZHMseJv/fYVQmWmqufCvzUeRDa8=\");\n\n_c = StackPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/stack-page/stack-page.tsx"],"names":["React","useState","SolutionLayout","styles","Button","Input","Circle","ElementStates","pushStack","popStack","clearStack","stack","StackPage","value","setValue","isLoader","setIsLoader","currentIndex","setCurrentIndex","array","setArray","pushProps","popProps","clearProps","container","input","e","currentTarget","isFull","length","result","map","item","index","Changing","Default"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./stack.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { pushStack, popStack, clearStack } from \"../../utils/stack-utils\";\nimport { stack } from \"./stack_class\";\n\nexport const StackPage: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [array, setArray] = useState<string[]>([]);\n  const pushProps = {\n    value,\n    setIsLoader,\n    setArray,\n    setCurrentIndex,\n    currentIndex,\n    setValue,\n  };\n  const popProps = {\n    setIsLoader,\n    setArray,\n    setCurrentIndex,\n    currentIndex,\n  };\n  const clearProps = {\n    setIsLoader,\n    setArray,\n  };\n\n  return (\n    <SolutionLayout title=\"Стек\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input\n            onChange={(e) => setValue(e.currentTarget.value)}\n            value={value}\n            maxLength={4}\n          />\n          <Button\n            text=\"Добавить\"\n            isLoader={isLoader}\n            extraClass=\"mr-5\"\n            onClick={() => pushStack(pushProps)}\n            disabled={value || stack.isFull() ? false : true}\n          />\n          <Button\n            text=\"Удалить\"\n            isLoader={isLoader}\n            extraClass=\"mr-20\"\n            onClick={() => popStack(popProps)}\n            disabled={array.length ? false : true}\n          />\n          <Button\n            text=\"Очистить\"\n            isLoader={isLoader}\n            onClick={() => clearStack(clearProps)}\n            disabled={array.length ? false : true}\n          />\n        </div>\n        <div>\n          <div className={styles.result}>\n            {array?.map((item, index) => (\n              <Circle\n                letter={item}\n                key={index}\n                index={index}\n                extraClass={styles.item}\n                state={\n                  currentIndex === index\n                    ? ElementStates.Changing\n                    : ElementStates.Default\n                }\n                head={currentIndex === index ? \"top\" : null}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}