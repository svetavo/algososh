{"ast":null,"code":"export const addHead = _ref => {\n  let {\n    list,\n    value,\n    setIsLoader,\n    setHead,\n    setIsChanging,\n    setTail\n  } = _ref;\n\n  if (value) {\n    setIsLoader(true);\n    setHead(-1);\n    setIsChanging(true);\n    list.unshift(value);\n    setIsChanging(false);\n    setHead(0);\n    setTail(list.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n\n  setIsLoader(false);\n};\nexport const addTail = _ref2 => {\n  let {\n    list,\n    value,\n    setIsLoader,\n    setTail\n  } = _ref2;\n\n  if (value) {\n    setIsLoader(true);\n    list.push(value);\n    setTail(list.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n\n  setIsLoader(false);\n};\nexport const removeHead = _ref3 => {\n  let {\n    list,\n    setIsLoader,\n    setHead\n  } = _ref3;\n  setIsLoader(true);\n  list.shift();\n  setHead(0);\n  setIsLoader(false);\n};\nexport const removeTail = _ref4 => {\n  let {\n    list,\n    setIsLoader,\n    setTail\n  } = _ref4;\n  setIsLoader(true);\n  list.pop();\n  setTail(list.length - 1);\n  setIsLoader(false);\n};\nexport const addIndex = _ref5 => {\n  let {\n    list,\n    value,\n    index,\n    setIsLoader\n  } = _ref5;\n\n  if (value && index) {\n    list.splice(Number(index), 0, value);\n    setIsLoader(false);\n    console.log(list);\n  } else {\n    alert(\"Введите индекс и число\");\n  }\n};\nexport const removeIndex = _ref6 => {\n  let {\n    list,\n    index,\n    setIsLoader\n  } = _ref6;\n\n  if (index) {\n    setIsLoader(true);\n    list.splice(Number(index), 1);\n    setIsLoader(false);\n    se;\n    console.log(list);\n  } else {\n    alert(\"Введите индекс\");\n  }\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["addHead","list","value","setIsLoader","setHead","setIsChanging","setTail","unshift","length","alert","addTail","push","removeHead","shift","removeTail","pop","addIndex","index","splice","Number","console","log","removeIndex","se"],"mappings":"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","sourcesContent":["import { sensitiveHeaders } from \"http2\";\nimport { Dispatch, SetStateAction } from \"react\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  list?: string[];\n  value?: string;\n  index?: string;\n  setHead?: Dispatcher<number>;\n  setIsLoader?: Dispatcher<boolean>;\n  setIsChanging?: Dispatcher<boolean>;\n  setTail?: Dispatcher<number>;\n}\n\nexport const addHead = ({\n  list,\n  value,\n  setIsLoader,\n  setHead,\n  setIsChanging,\n  setTail,\n}: IProps) => {\n  if (value) {\n    setIsLoader!(true);\n    setHead!(-1);\n    setIsChanging!(true);\n    list!.unshift(value);\n    setIsChanging!(false);\n    setHead!(0);\n    setTail!(list!.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n  setIsLoader!(false);\n};\n\nexport const addTail = ({ list, value, setIsLoader, setTail }: IProps) => {\n  if (value) {\n    setIsLoader!(true);\n    list!.push(value);\n    setTail!(list!.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n  setIsLoader!(false);\n};\n\nexport const removeHead = ({ list, setIsLoader, setHead }: IProps) => {\n  setIsLoader!(true);\n  list!.shift();\n  setHead!(0);\n  setIsLoader!(false);\n};\n\nexport const removeTail = ({ list, setIsLoader, setTail }: IProps) => {\n  setIsLoader!(true);\n  list!.pop();\n  setTail!(list!.length - 1);\n  setIsLoader!(false);\n};\n\nexport const addIndex = ({ list, value, index, setIsLoader }: IProps) => {\n  if (value && index) {\n    list!.splice(Number(index), 0, value);\n    setIsLoader!(false);\n    console.log(list);\n  } else {\n    alert(\"Введите индекс и число\");\n  }\n};\n\nexport const removeIndex = ({ list, index, setIsLoader, }: IProps) => {\n  if (index) {\n    setIsLoader!(true);\n    list!.splice(Number(index), 1);\n    setIsLoader!(false);\n    se\n    console.log(list);\n  } else {\n    alert(\"Введите индекс\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}