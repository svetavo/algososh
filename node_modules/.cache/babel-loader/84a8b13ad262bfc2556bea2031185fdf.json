{"ast":null,"code":"import { ElementStates } from \"../types/element-states\";\nexport const circleColor = (index, currentIndex, arr) => {\n  let length = arr.length - 1;\n\n  if (currentIndex < index || currentIndex > length - index) {\n    return ElementStates.Modified;\n  }\n\n  if (currentIndex === index || currentIndex === length - index) {\n    return ElementStates.Changing;\n  }\n\n  return ElementStates.Default;\n};\n\nconst arrReverse = async (arr, setCurrentIndex) => {\n  const end = arr.length - 1;\n  const mid = Math.floor(arr.length / 2);\n  setCurrentIndex(0);\n\n  for (let i = 0; i < mid; i++) {\n    await delay(1000);\n    [arr[i], arr[end - i]] = [arr[end - i], arr[i]];\n    setCurrentIndex(i => i + 1);\n    setArr(arr);\n  }\n\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/string-utils.ts"],"names":["ElementStates","circleColor","index","currentIndex","arr","length","Modified","Changing","Default","arrReverse","setCurrentIndex","end","mid","Math","floor","i","delay","setArr","setIsLoader"],"mappings":"AAAA,SAASA,aAAT,QAA8B,yBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzBC,KADyB,EAEzBC,YAFyB,EAGzBC,GAHyB,KAItB;AACH,MAAIC,MAAM,GAAGD,GAAG,CAACC,MAAJ,GAAa,CAA1B;;AACA,MAAIF,YAAY,GAAGD,KAAf,IAAwBC,YAAY,GAAGE,MAAM,GAAGH,KAApD,EAA2D;AACzD,WAAOF,aAAa,CAACM,QAArB;AACD;;AACD,MAAIH,YAAY,KAAKD,KAAjB,IAA0BC,YAAY,KAAKE,MAAM,GAAGH,KAAxD,EAA+D;AAC7D,WAAOF,aAAa,CAACO,QAArB;AACD;;AACD,SAAOP,aAAa,CAACQ,OAArB;AACD,CAbM;;AAeP,MAAMC,UAAU,GAAG,OAAOL,GAAP,EAAsBM,eAAtB,KAA0C;AAC3D,QAAMC,GAAG,GAAGP,GAAG,CAACC,MAAJ,GAAa,CAAzB;AACA,QAAMO,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWV,GAAG,CAACC,MAAJ,GAAa,CAAxB,CAAZ;AACAK,EAAAA,eAAe,CAAC,CAAD,CAAf;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;AAC5B,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,KAACZ,GAAG,CAACW,CAAD,CAAJ,EAASX,GAAG,CAACO,GAAG,GAAGI,CAAP,CAAZ,IAAyB,CAACX,GAAG,CAACO,GAAG,GAAGI,CAAP,CAAJ,EAAeX,GAAG,CAACW,CAAD,CAAlB,CAAzB;AACAL,IAAAA,eAAe,CAAEK,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAf;AACAE,IAAAA,MAAM,CAACb,GAAD,CAAN;AACD;;AACDc,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CAXD","sourcesContent":["import { ElementStates } from \"../types/element-states\";\n\nexport const circleColor = (\n  index: number,\n  currentIndex: number,\n  arr: Array<string | number>\n) => {\n  let length = arr.length - 1;\n  if (currentIndex < index || currentIndex > length - index) {\n    return ElementStates.Modified;\n  }\n  if (currentIndex === index || currentIndex === length - index) {\n    return ElementStates.Changing;\n  }\n  return ElementStates.Default;\n};\n\nconst arrReverse = async (arr: string[], setCurrentIndex) => {\n  const end = arr.length - 1;\n  const mid = Math.floor(arr.length / 2);\n  setCurrentIndex(0);\n  for (let i = 0; i < mid; i++) {\n    await delay(1000);\n    [arr[i], arr[end - i]] = [arr[end - i], arr[i]];\n    setCurrentIndex((i) => i + 1);\n    setArr(arr);\n  }\n  setIsLoader(false);\n};\n\n\n"]},"metadata":{},"sourceType":"module"}