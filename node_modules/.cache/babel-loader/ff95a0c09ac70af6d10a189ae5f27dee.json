{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/queue-page/queue-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./queue.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { enqueue, dequeue, clearQueue } from \"../../utils/queue-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QueuePage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isLoaderEnqueue, setIsLoaderEnqueue] = useState(false);\n  const [isLoaderDequeue, setIsLoaderDequeue] = useState(false);\n  const [isLoaderClear, setIsLoaderClear] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isDisabledClear, setIsDisabledClear] = useState(true);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(-1); //начальный массив пустых элементов\n\n  const emptyElement = {\n    number\n  };\n  const emptyArray = Array.apply(null, Array(7)).map(() => emptyElement);\n  const maxLength = 7;\n  const [array, setArray] = useState(emptyArray); //пропсы добавление\n\n  const enqueProps = {\n    value,\n    array,\n    tail,\n    currentIndex,\n    setArray,\n    setIsDisabled,\n    setIsLoaderEnqueue,\n    setIsDisabledClear,\n    setTail,\n    setHead,\n    setCurrentIndex,\n    setValue,\n    maxLength\n  }; //пропсы удаление\n\n  const dequeueProps = {\n    array,\n    head,\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderDequeue,\n    setArray,\n    setTail,\n    setHead,\n    setCurrentIndex,\n    emptyElement\n  }; //пропсы очистить\n\n  const clearQueueProps = {\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderClear,\n    setArray,\n    setTail,\n    setCurrentIndex,\n    setHead,\n    emptyArray\n  };\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u041E\\u0447\\u0435\\u0440\\u0435\\u0434\\u044C\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setValue(e.currentTarget.value),\n          value: value,\n          maxLength: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          isLoader: isLoaderEnqueue,\n          extraClass: \"mr-5\",\n          onClick: () => enqueue(enqueProps),\n          disabled: tail === 7 || isDisabled ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n          isLoader: isLoaderDequeue,\n          extraClass: \"mr-20\",\n          onClick: () => dequeue(dequeueProps),\n          disabled: head > tail || isDisabled ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n          isLoader: isLoaderClear,\n          onClick: () => clearQueue(clearQueueProps),\n          disabled: isDisabledClear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: array.map((value, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: value,\n            index: index,\n            extraClass: styles.item,\n            state: tail === index ? ElementStates.Changing : ElementStates.Default,\n            head: head === index ? \"head\" : null,\n            tail: tail === index ? \"tail\" : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QueuePage, \"KKHAw+PhzdDZi1fCYbGzXICaaLM=\");\n\n_c = QueuePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueuePage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/queue-page.tsx"],"names":["React","useState","SolutionLayout","styles","Button","Input","Circle","ElementStates","enqueue","dequeue","clearQueue","QueuePage","value","setValue","isLoaderEnqueue","setIsLoaderEnqueue","isLoaderDequeue","setIsLoaderDequeue","isLoaderClear","setIsLoaderClear","isDisabled","setIsDisabled","isDisabledClear","setIsDisabledClear","currentIndex","setCurrentIndex","tail","setTail","head","setHead","emptyElement","number","emptyArray","Array","apply","map","maxLength","array","setArray","enqueProps","dequeueProps","clearQueueProps","container","input","e","currentTarget","result","index","item","Changing","Default"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./queue.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { enqueue, dequeue, clearQueue } from \"../../utils/queue-utils\";\n\nexport const QueuePage: React.FC = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [isLoaderEnqueue, setIsLoaderEnqueue] = useState(false);\n  const [isLoaderDequeue, setIsLoaderDequeue] = useState(false);\n  const [isLoaderClear, setIsLoaderClear] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isDisabledClear, setIsDisabledClear] = useState(true);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(-1);\n\n  //начальный массив пустых элементов\n  const emptyElement = {number};\n  const emptyArray: string[] = Array.apply(null, Array(7)).map(\n    () => emptyElement\n  );\n  const maxLength = 7;\n  const [array, setArray] = useState<string[]>(emptyArray);\n\n\n  //пропсы добавление\n  const enqueProps = {\n    value,\n    array,\n    tail,\n    currentIndex,\n    setArray,\n    setIsDisabled,\n    setIsLoaderEnqueue,\n    setIsDisabledClear,\n    setTail,\n    setHead,\n    setCurrentIndex,\n    setValue,\n    maxLength,\n  };\n\n  //пропсы удаление\n  const dequeueProps = {\n    array,\n    head,\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderDequeue,\n    setArray,\n    setTail,\n    setHead,\n    setCurrentIndex,\n    emptyElement,\n  };\n\n  //пропсы очистить\n  const clearQueueProps = {\n    setIsDisabled,\n    setIsDisabledClear,\n    setIsLoaderClear,\n    setArray,\n    setTail,\n    setCurrentIndex,\n    setHead,\n    emptyArray,\n  };\n\n  return (\n    <SolutionLayout title=\"Очередь\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input\n            onChange={(e) => setValue(e.currentTarget.value)}\n            value={value}\n            maxLength={4}\n          />\n          <Button\n            text=\"Добавить\"\n            isLoader={isLoaderEnqueue}\n            extraClass=\"mr-5\"\n            onClick={() => enqueue(enqueProps)}\n            disabled={tail === 7 || isDisabled ? true : false}\n          />\n          <Button\n            text=\"Удалить\"\n            isLoader={isLoaderDequeue}\n            extraClass=\"mr-20\"\n            onClick={() => dequeue(dequeueProps)}\n            disabled={head > tail || isDisabled ? true : false}\n          />\n          <Button\n            text=\"Очистить\"\n            isLoader={isLoaderClear}\n            onClick={() => clearQueue(clearQueueProps)}\n            disabled={isDisabledClear}\n          />\n        </div>\n        <div>\n          <div className={styles.result}>\n            {array.map((value, index) => (\n              <Circle\n                letter={value}\n                key={index}\n                index={index}\n                extraClass={styles.item}\n                state={\n                  tail === index\n                    ? ElementStates.Changing\n                    : ElementStates.Default\n                }\n                head={head === index ? \"head\" : null}\n                tail={tail === index ? \"tail\" : null}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}