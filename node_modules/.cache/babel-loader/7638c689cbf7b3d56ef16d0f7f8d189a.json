{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/stack-page/stack-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./stack.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { circleColor } from \"../../utils/string-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StackPage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [stack, set] = [];\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onAdd = item => {\n    stack.push(item);\n    console.log(stack);\n  };\n\n  const onDelete = () => {};\n\n  const onClear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0435\\u043A\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-5\",\n          onClick: () => onAdd(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-20\",\n          onClick: onDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n          isLoader: isLoader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: stack === null || stack === void 0 ? void 0 : stack.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            extraClass: styles.item,\n            state: circleColor(currentIndex, index, stack)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StackPage, \"ER6TFRgw2t/9AAByc2perCAlg78=\");\n\n_c = StackPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/stack-page/stack-page.tsx"],"names":["React","useState","SolutionLayout","styles","Button","Input","Circle","circleColor","StackPage","value","setValue","isOpen","setIsOpen","isLoader","setIsLoader","currentIndex","setCurrentIndex","stack","set","onChange","e","target","onAdd","item","push","console","log","onDelete","onClear","container","input","result","map","index"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./stack.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { circleColor } from \"../../utils/string-utils\";\n\nexport const StackPage: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const [stack, set] = [];\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onAdd = (item) => {\n      stack.push(item);\n\n      console.log(stack)\n  };\n\n  const onDelete = () => {\n  };\n\n  const onClear = () => {};\n\n  return (\n    <SolutionLayout title=\"Стек\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} value={value} />\n          <Button\n            text=\"Добавить\"\n            isLoader={isLoader}\n            extraClass=\"mr-5\"\n            onClick={() => onAdd(value)}\n          />\n          <Button\n            text=\"Удалить\"\n            isLoader={isLoader}\n            extraClass=\"mr-20\"\n            onClick={onDelete}\n          />\n          <Button text=\"Очистить\" isLoader={isLoader} />\n        </div>\n        <div>\n          {isOpen ? (\n            <div className={styles.result}>\n              {stack?.map((item, index) => (\n                <Circle\n                  letter={item}\n                  key={index}\n                  extraClass={styles.item}\n                  state={circleColor(currentIndex, index, stack)}\n                />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}