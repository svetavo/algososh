{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/stack-page/stack-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from './stack.module.css';\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { circleColor } from \"../../utils/string-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StackPage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [arr, setArr] = useState(null);\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0435\\u043A\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange,\n          value: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n          isLoader: isLoader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: arr === null || arr === void 0 ? void 0 : arr.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            extraClass: styles.item,\n            state: circleColor(currentIndex, index, arr)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StackPage, \"uMJTFrJkxPj/bK5i6oupqrw3RIY=\");\n\n_c = StackPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/stack-page/stack-page.tsx"],"names":["React","useState","SolutionLayout","styles","Button","Input","Circle","circleColor","StackPage","value","setValue","isOpen","setIsOpen","arr","setArr","isLoader","setIsLoader","currentIndex","setCurrentIndex","onChange","e","target","container","input","result","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAkB,IAAlB,CAA9B;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMkB,QAAQ,GAAIC,CAAD,IAAsC;AACrDV,IAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAR;AACD,GAFD;;AAKA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,0BAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACmB,SAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEnB,MAAM,CAACoB,KAAvB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAEJ,QAAjB;AAA2B,UAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,kDADP;AAEE,UAAA,QAAQ,EAAEJ,QAFZ;AAGE,UAAA,UAAU,EAAC;AAHb;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,4CADP;AAEE,UAAA,QAAQ,EAAEA,QAFZ;AAGE,UAAA,UAAU,EAAC;AAHb;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYG,QAAC,MAAD;AACC,UAAA,IAAI,EAAC,kDADN;AAEC,UAAA,QAAQ,EAAEA;AAFX;AAAA;AAAA;AAAA;AAAA,gBAZH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAA,kBACGJ,MAAM,gBACL;AAAK,UAAA,SAAS,EAAER,MAAM,CAACqB,MAAvB;AAAA,oBACGX,GADH,aACGA,GADH,uBACGA,GAAG,CAAEY,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,MAAD;AACE,YAAA,MAAM,EAAED,IADV;AAGE,YAAA,UAAU,EAAEvB,MAAM,CAACuB,IAHrB;AAIE,YAAA,KAAK,EAAEnB,WAAW,CAACU,YAAD,EAAeU,KAAf,EAAsBd,GAAtB;AAJpB,aAEOc,KAFP;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADK,GAWH;AAZN;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAjDM;;GAAMnB,S;;KAAAA,S","sourcesContent":["import React, {useState, ChangeEvent} from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from './stack.module.css'\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { circleColor } from \"../../utils/string-utils\";\n\nexport const StackPage: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [arr, setArr] = useState<null | string[]>(null);\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n\n  return (\n    <SolutionLayout title=\"Стек\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} value/>\n          <Button\n            text=\"Добавить\"\n            isLoader={isLoader}\n            extraClass='mr-5'\n          />\n          <Button\n            text=\"Удалить\"\n            isLoader={isLoader}\n            extraClass='mr-20'\n          />\n           <Button\n            text=\"Очистить\"\n            isLoader={isLoader}\n          />\n        </div>\n        <div>\n          {isOpen ? (\n            <div className={styles.result}>\n              {arr?.map((item, index) => (\n                <Circle\n                  letter={item}\n                  key={index}\n                  extraClass={styles.item}\n                  state={circleColor(currentIndex, index, arr)}\n                />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}