{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/queue-page/queue-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./queue.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QueuePage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [queue, setQueue] = useState([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0); // const emptyElement = \"\";\n  // const emptyArr: string[] = Array.apply(null, Array(7)).map(\n  //   () => emptyElement\n  // );\n  // const maxLength = 7;\n\n  useEffect(() => {\n    setQueue(emptyArr);\n  }, []);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  }; // const enqueue = (item: string): void => {\n  //   if (value) {\n  //     setIsLoader(true);\n  //     queue.splice(currentIndex, 1, item);\n  //     if (queue.length <= maxLength) {\n  //       setTail(tail + 1);\n  //       setCurrentIndex(currentIndex + 1);\n  //     } else {\n  //       setTail(0);\n  //       setCurrentIndex(0);\n  //     }\n  //     setValue(\"\");\n  //     setIsLoader(false);\n  //   } else {\n  //     alert(\"введите значение в инпут\");\n  //   }\n  // };\n  // const dequeue = () => {\n  //   setIsLoader(true);\n  //   queue.splice(head, 1, emptyElement);\n  //   if (queue.length <= maxLength) {\n  //     setHead(head + 1);\n  //   } else {\n  //     setHead(0);\n  //   }\n  //   setIsLoader(false);\n  // };\n  // const clearQueue = () => {\n  //   setIsLoader(true);\n  //   setQueue(emptyArr);\n  //   setTail(0);\n  //   setCurrentIndex(0);\n  //   setHead(0);\n  //   setIsLoader(false);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u041E\\u0447\\u0435\\u0440\\u0435\\u0434\\u044C\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange,\n          value: value,\n          maxLength: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-5\",\n          onClick: () => enqueue(value),\n          disabled: queue.length > maxLength ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-20\",\n          onClick: dequeue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          onClick: clearQueue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: queue.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            index: index,\n            extraClass: styles.item,\n            state: tail === index ? ElementStates.Changing : ElementStates.Default,\n            head: head === index ? \"head\" : null,\n            tail: tail === index ? \"tail\" : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QueuePage, \"BtdnQ1RAej/pkLxnPVLm4SDmg3I=\");\n\n_c = QueuePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueuePage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/queue-page.tsx"],"names":["React","useState","useEffect","SolutionLayout","styles","Button","Input","Circle","ElementStates","QueuePage","value","setValue","isLoader","setIsLoader","currentIndex","setCurrentIndex","queue","setQueue","tail","setTail","head","setHead","emptyArr","onChange","e","target","container","input","enqueue","length","maxLength","dequeue","clearQueue","result","map","item","index","Changing","Default"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./queue.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\n\nexport const QueuePage: React.FC = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [queue, setQueue] = useState<string[]>([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0);\n  // const emptyElement = \"\";\n  // const emptyArr: string[] = Array.apply(null, Array(7)).map(\n  //   () => emptyElement\n  // );\n \n\n  // const maxLength = 7;\n\n  useEffect(() => {\n    setQueue(emptyArr);\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  // const enqueue = (item: string): void => {\n  //   if (value) {\n  //     setIsLoader(true);\n  //     queue.splice(currentIndex, 1, item);\n  //     if (queue.length <= maxLength) {\n  //       setTail(tail + 1);\n  //       setCurrentIndex(currentIndex + 1);\n  //     } else {\n  //       setTail(0);\n  //       setCurrentIndex(0);\n  //     }\n  //     setValue(\"\");\n  //     setIsLoader(false);\n  //   } else {\n  //     alert(\"введите значение в инпут\");\n  //   }\n  // };\n\n  // const dequeue = () => {\n  //   setIsLoader(true);\n  //   queue.splice(head, 1, emptyElement);\n  //   if (queue.length <= maxLength) {\n  //     setHead(head + 1);\n  //   } else {\n  //     setHead(0);\n  //   }\n  //   setIsLoader(false);\n  // };\n\n  // const clearQueue = () => {\n  //   setIsLoader(true);\n  //   setQueue(emptyArr);\n  //   setTail(0);\n  //   setCurrentIndex(0);\n  //   setHead(0);\n  //   setIsLoader(false);\n  // };\n\n  return (\n    <SolutionLayout title=\"Очередь\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} value={value} maxLength={4} />\n          <Button\n            text=\"Добавить\"\n            isLoader={isLoader}\n            extraClass=\"mr-5\"\n            onClick={() => enqueue(value)}\n            disabled={queue.length > maxLength ? true : false}\n          />\n          <Button\n            text=\"Удалить\"\n            isLoader={isLoader}\n            extraClass=\"mr-20\"\n            onClick={dequeue}\n          />\n          <Button text=\"Очистить\" isLoader={isLoader} onClick={clearQueue} />\n        </div>\n        <div>\n          <div className={styles.result}>\n            {queue.map((item, index) => (\n              <Circle\n                letter={item}\n                key={index}\n                index={index}\n                extraClass={styles.item}\n                state={\n                  tail === index\n                    ? ElementStates.Changing\n                    : ElementStates.Default\n                }\n                head={head === index ? \"head\" : null}\n                tail={tail === index ? \"tail\" : null}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}