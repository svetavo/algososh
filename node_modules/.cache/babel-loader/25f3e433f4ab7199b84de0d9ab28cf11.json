{"ast":null,"code":"export const addHead = _ref => {\n  let {\n    array,\n    item,\n    setIsLoader,\n    setHead,\n    setIsChanging,\n    setTail\n  } = _ref;\n\n  if (item) {\n    setIsLoader(true);\n    setHead(-1);\n    setIsChanging(true);\n    array.unshift(item);\n    setIsChanging(false);\n    setHead(0);\n    setTail(array.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n\n  setIsLoader(false);\n};\nexport const addTail = (array, item, setIsLoader, setTail) => {\n  if (item) {\n    setIsLoader(true);\n    array.push(item);\n    setTail(array.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n\n  setIsLoader(false);\n};\n\nconst removeHead = () => {\n  setIsLoader(true);\n  list.shift();\n  setHead(0);\n  setIsLoader(false);\n};\n\nconst removeTail = () => {\n  setIsLoader(true);\n  list.pop();\n  setTail(list.length - 1);\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["addHead","array","item","setIsLoader","setHead","setIsChanging","setTail","unshift","length","alert","addTail","push","removeHead","list","shift","removeTail","pop"],"mappings":"AAgBA,OAAO,MAAMA,OAAO,GAAG,QAOT;AAAA,MAPU;AACtBC,IAAAA,KADsB;AAEtBC,IAAAA,IAFsB;AAGtBC,IAAAA,WAHsB;AAItBC,IAAAA,OAJsB;AAKtBC,IAAAA,aALsB;AAMtBC,IAAAA;AANsB,GAOV;;AACZ,MAAIJ,IAAJ,EAAU;AACRC,IAAAA,WAAW,CAAE,IAAF,CAAX;AACAC,IAAAA,OAAO,CAAE,CAAC,CAAH,CAAP;AACAC,IAAAA,aAAa,CAAE,IAAF,CAAb;AACAJ,IAAAA,KAAK,CAACM,OAAN,CAAcL,IAAd;AACAG,IAAAA,aAAa,CAAE,KAAF,CAAb;AACAD,IAAAA,OAAO,CAAE,CAAF,CAAP;AACAE,IAAAA,OAAO,CAAEL,KAAK,CAACO,MAAN,GAAe,CAAjB,CAAP;AACD,GARD,MAQO;AACLC,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AACDN,EAAAA,WAAW,CAAE,KAAF,CAAX;AACD,CApBM;AAsBP,OAAO,MAAMO,OAAO,GAAG,CAACT,KAAD,EAAQC,IAAR,EAAcC,WAAd,EAA2BG,OAA3B,KAAuC;AAC5D,MAAIJ,IAAJ,EAAU;AACRC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,IAAAA,KAAK,CAACU,IAAN,CAAWT,IAAX;AACAI,IAAAA,OAAO,CAACL,KAAK,CAACO,MAAN,GAAe,CAAhB,CAAP;AACD,GAJD,MAIO;AACLC,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AACDN,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CATM;;AAWP,MAAMS,UAAU,GAAG,MAAM;AACvBT,EAAAA,WAAW,CAAC,IAAD,CAAX;AACAU,EAAAA,IAAI,CAACC,KAAL;AACAV,EAAAA,OAAO,CAAC,CAAD,CAAP;AACAD,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CALD;;AAOA,MAAMY,UAAU,GAAG,MAAM;AACvBZ,EAAAA,WAAW,CAAC,IAAD,CAAX;AACAU,EAAAA,IAAI,CAACG,GAAL;AACAV,EAAAA,OAAO,CAACO,IAAI,CAACL,MAAL,GAAc,CAAf,CAAP;AACAL,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CALD","sourcesContent":["import {\n  Dispatch,\n  SetStateAction,\n} from \"react\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  array: any[];\n  item: string;\n  setHead?: Dispatcher<number | null>;\n  setIsLoader?: Dispatcher<boolean>;\n  setIsChanging?: Dispatcher<boolean>;\n  setTail?: Dispatcher<number>;\n}\n\nexport const addHead = ({\n  array,\n  item,\n  setIsLoader,\n  setHead,\n  setIsChanging,\n  setTail,\n}: IProps) => {\n  if (item) {\n    setIsLoader!(true);\n    setHead!(-1);\n    setIsChanging!(true);\n    array.unshift(item);\n    setIsChanging!(false);\n    setHead!(0);\n    setTail!(array.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n  setIsLoader!(false);\n};\n\nexport const addTail = (array, item, setIsLoader, setTail) => {\n  if (item) {\n    setIsLoader(true);\n    array.push(item);\n    setTail(array.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n  setIsLoader(false);\n};\n\nconst removeHead = () => {\n  setIsLoader(true);\n  list.shift();\n  setHead(0);\n  setIsLoader(false);\n};\n\nconst removeTail = () => {\n  setIsLoader(true);\n  list.pop();\n  setTail(list.length - 1);\n  setIsLoader(false);\n};\n"]},"metadata":{},"sourceType":"module"}