{"ast":null,"code":"import { queue } from '../components/queue-page/queue_class';\nexport const enqueue = _ref => {\n  let {\n    value,\n    array,\n    tail,\n    currentIndex,\n    setArray,\n    setIsLoader,\n    setTail,\n    setCurrentIndex,\n    setValue\n  } = _ref;\n\n  if (value) {\n    setIsLoader(true);\n    queue.enqueue(currentIndex, value, array);\n    setArray(queue.queue);\n    setTail(queue.tail);\n    console.log(queue.queue);\n    setValue(\"\");\n    setIsLoader(false);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n};\nexport const dequeue = _ref2 => {\n  let {\n    queue,\n    head,\n    setIsLoader,\n    setHead,\n    emptyElement,\n    maxLength\n  } = _ref2;\n  setIsLoader(true);\n  queue.splice(head, 1, emptyElement);\n\n  if (queue.length <= maxLength) {\n    setHead(head + 1);\n  } else {\n    setHead(0);\n  }\n\n  setIsLoader(false);\n};\nexport const clearQueue = _ref3 => {\n  let {\n    setIsLoader,\n    setQueue,\n    setTail,\n    setCurrentIndex,\n    setHead,\n    emptyArray\n  } = _ref3;\n  setIsLoader(true);\n  setQueue(emptyArray);\n  setTail(0);\n  setCurrentIndex(0);\n  setHead(0);\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/queue-utils.ts"],"names":["queue","enqueue","value","array","tail","currentIndex","setArray","setIsLoader","setTail","setCurrentIndex","setValue","console","log","alert","dequeue","head","setHead","emptyElement","maxLength","splice","length","clearQueue","setQueue","emptyArray"],"mappings":"AAEA,SAAQA,KAAR,QAAoB,sCAApB;AAqBA,OAAO,MAAMC,OAAO,GAAG,QAUH;AAAA,MAVI;AACtBC,IAAAA,KADsB;AAEtBC,IAAAA,KAFsB;AAGtBC,IAAAA,IAHsB;AAItBC,IAAAA,YAJsB;AAKtBC,IAAAA,QALsB;AAMtBC,IAAAA,WANsB;AAOtBC,IAAAA,OAPsB;AAQtBC,IAAAA,eARsB;AAStBC,IAAAA;AATsB,GAUJ;;AAClB,MAAIR,KAAJ,EAAW;AACTK,IAAAA,WAAW,CAAE,IAAF,CAAX;AACAP,IAAAA,KAAK,CAACC,OAAN,CAAcI,YAAd,EAA6BH,KAA7B,EAAoCC,KAApC;AACAG,IAAAA,QAAQ,CAAEN,KAAK,CAACA,KAAR,CAAR;AACAQ,IAAAA,OAAO,CAAER,KAAK,CAACI,IAAR,CAAP;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACA,KAAlB;AACAU,IAAAA,QAAQ,CAAE,EAAF,CAAR;AACAH,IAAAA,WAAW,CAAE,KAAF,CAAX;AACD,GARD,MAQO;AACLM,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;AACF,CAtBM;AAwBP,OAAO,MAAMC,OAAO,GAAG,SAOH;AAAA,MAPI;AACtBd,IAAAA,KADsB;AAEtBe,IAAAA,IAFsB;AAGtBR,IAAAA,WAHsB;AAItBS,IAAAA,OAJsB;AAKtBC,IAAAA,YALsB;AAMtBC,IAAAA;AANsB,GAOJ;AAClBX,EAAAA,WAAW,CAAE,IAAF,CAAX;AACAP,EAAAA,KAAK,CAAEmB,MAAP,CAAcJ,IAAd,EAAqB,CAArB,EAAwBE,YAAxB;;AACA,MAAIjB,KAAK,CAAEoB,MAAP,IAAiBF,SAArB,EAAiC;AAC/BF,IAAAA,OAAO,CAAED,IAAI,GAAI,CAAV,CAAP;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAAE,CAAF,CAAP;AACD;;AACDT,EAAAA,WAAW,CAAE,KAAF,CAAX;AACD,CAhBM;AAkBP,OAAO,MAAMc,UAAU,GAAG,SAON;AAAA,MAPO;AACzBd,IAAAA,WADyB;AAEzBe,IAAAA,QAFyB;AAGzBd,IAAAA,OAHyB;AAIzBC,IAAAA,eAJyB;AAKzBO,IAAAA,OALyB;AAMzBO,IAAAA;AANyB,GAOP;AAClBhB,EAAAA,WAAW,CAAE,IAAF,CAAX;AACAe,EAAAA,QAAQ,CAAEC,UAAF,CAAR;AACAf,EAAAA,OAAO,CAAE,CAAF,CAAP;AACAC,EAAAA,eAAe,CAAE,CAAF,CAAf;AACAO,EAAAA,OAAO,CAAE,CAAF,CAAP;AACAT,EAAAA,WAAW,CAAE,KAAF,CAAX;AACD,CAdM","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport {queue} from '../components/queue-page/queue_class'\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value?: string;\n  array: string[];\n  tail?: number;\n  head?: number;\n  currentIndex?: number;\n  emptyElement?: string;\n  emptyArray?: string[];\n  maxLength?: number;\n  setIsLoader: Dispatcher<boolean>;\n  setValue?: Dispatcher<string>;\n  setArray?: Dispatcher<string[]>;\n  setTail?: Dispatcher<number>;\n  setHead?: Dispatch<number>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const enqueue = ({\n  value,\n  array,\n  tail,\n  currentIndex,\n  setArray,\n  setIsLoader,\n  setTail,\n  setCurrentIndex,\n  setValue,\n}: IProps): void => {\n  if (value) {\n    setIsLoader!(true);\n    queue.enqueue(currentIndex!, value, array);\n    setArray!(queue.queue)\n    setTail!(queue.tail)\n    console.log(queue.queue)\n    setValue!(\"\");\n    setIsLoader!(false);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n};\n\nexport const dequeue = ({\n  queue,\n  head,\n  setIsLoader,\n  setHead,\n  emptyElement,\n  maxLength,\n}: IProps): void => {\n  setIsLoader!(true);\n  queue!.splice(head!, 1, emptyElement!);\n  if (queue!.length <= maxLength!) {\n    setHead!(head! + 1);\n  } else {\n    setHead!(0);\n  }\n  setIsLoader!(false);\n};\n\nexport const clearQueue = ({\n  setIsLoader,\n  setQueue,\n  setTail,\n  setCurrentIndex,\n  setHead,\n  emptyArray,\n}: IProps): void => {\n  setIsLoader!(true);\n  setQueue!(emptyArray!);\n  setTail!(0);\n  setCurrentIndex!(0);\n  setHead!(0);\n  setIsLoader!(false);\n};\n"]},"metadata":{},"sourceType":"module"}