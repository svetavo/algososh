{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/fibonacci-page/fibonacci-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./fibonacci.module.css\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FibonacciPage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onClick = () => {\n    setResult(fibonacci(value));\n    setIsOpen(true);\n  };\n\n  const fibonacci = value => {\n    let numbers = [0, 1];\n\n    for (let i = 2; i <= value; i++) {\n      numbers[i] = numbers[i - 2] + numbers[i - 1];\n    }\n\n    return numbers[value - 1];\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u0424\\u0438\\u0431\\u043E\\u043D\\u0430\\u0447\\u0447\\u0438\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\",\n          onClick: () => fibonacci(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FibonacciPage, \"saCHQGGR/BpTM5IbGjyaj+uPgsM=\");\n\n_c = FibonacciPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FibonacciPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/fibonacci-page/fibonacci-page.tsx"],"names":["React","useState","SolutionLayout","styles","Input","Button","FibonacciPage","value","setValue","isOpen","setIsOpen","result","setResult","onChange","e","target","onClick","fibonacci","numbers","i","container","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAGA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAkB,IAAlB,CAApC;;AAEA,QAAMY,QAAQ,GAAIC,CAAD,IAAY;AAC3BN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMS,OAAO,GAAG,MAAM;AACpBJ,IAAAA,SAAS,CAACK,SAAS,CAACV,KAAD,CAAV,CAAT;AACAG,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAKA,QAAMO,SAAS,GAAIV,KAAD,IAAqB;AACrC,QAAIW,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIZ,KAArB,EAA4BY,CAAC,EAA7B,EAAiC;AAC/BD,MAAAA,OAAO,CAACC,CAAD,CAAP,GAAaD,OAAO,CAACC,CAAC,GAAG,CAAL,CAAP,GAAiBD,OAAO,CAACC,CAAC,GAAG,CAAL,CAArC;AACD;;AACD,WAAOD,OAAO,CAACX,KAAK,GAAG,CAAT,CAAd;AACD,GAND;;AAQA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,qKAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACiB,SAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACkB,KAAvB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAER;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,8DAAb;AAA0B,UAAA,OAAO,EAAE,MAAMI,SAAS,CAACV,KAAD;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBACGE,MAAM,gBACL;AAAK,UAAA,SAAS,EAAEN,MAAM,CAACQ;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADK,GAMH;AAPN;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzCM;;GAAML,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./fibonacci.module.css\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\n\nexport const FibonacciPage: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false)\n  const [result, setResult] = useState<null | number[]>(null)\n\n  const onChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  const onClick = () => {\n    setResult(fibonacci(value))\n    setIsOpen(true)\n  }\n\n  const fibonacci = (value) : number[]=> {\n    let numbers = [0, 1];\n    for (let i = 2; i <= value; i++) {\n      numbers[i] = numbers[i - 2] + numbers[i - 1];\n    }\n    return numbers[value - 1];\n  };\n\n  return (\n    <SolutionLayout title=\"Последовательность Фибоначчи\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} />\n          <Button text=\"Рассчитать\" onClick={() => fibonacci(value)} />\n        </div>\n        <div>\n          {isOpen ? (\n            <div className={styles.result}>\n              {/* {arr?.map((item, index) => (\n                <Circle letter={item} key={index} />\n              ))} */}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}