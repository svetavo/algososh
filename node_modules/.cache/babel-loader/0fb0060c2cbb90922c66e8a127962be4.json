{"ast":null,"code":"// случайная длина массива\nconst getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n\nconst randomArr = () => {\n  const array = [];\n  const max = 100;\n  const count = getRandomInt(3, 17);\n\n  while (array.length < count) {\n    const r = Math.floor(Math.random() * max);\n\n    if (array.indexOf(r) === -1) {\n      array.push(r);\n    }\n  }\n\n  randomArray = array;\n  return array;\n};\n\nconst swap = (arr, a, b) => {\n  const temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n}; // по возрастанию\n\n\nexport const bubbleSort = arr => {\n  for (let j = arr.length - 1; j > 0; j--) {\n    for (let i = 0; i < j; i++) {\n      if (arr[i] > arr[i + 1]) {\n        swap(arr, i, i + 1);\n      }\n    }\n  }\n\n  console.log(arr);\n  return arr;\n}; // по убыванию\n\nexport const selectionSort = arr => {\n  const {\n    length\n  } = arr;\n\n  for (let i = 0; i < length - 1; i++) {\n    let maxInd = i;\n\n    for (let j = i; j < length; j++) {\n      if (arr[maxInd] < arr[j]) {\n        maxInd = j;\n      }\n    }\n\n    if (i !== maxInd) {\n      swap(arr, i, maxInd);\n    }\n  }\n\n  console.log(arr);\n  return arr;\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/sorting-page/utils.tsx"],"names":["getRandomInt","min","max","Math","floor","random","randomArr","array","count","length","r","indexOf","push","randomArray","swap","arr","a","b","temp","bubbleSort","j","i","console","log","selectionSort","maxInd"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,CAACC,GAAD,EAAcC,GAAd,KAAsC;AACvD,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACD,CAFH;;AAIG,MAAMK,SAAS,GAAG,MAAgB;AACjC,QAAMC,KAAK,GAAG,EAAd;AACA,QAAML,GAAG,GAAG,GAAZ;AACA,QAAMM,KAAK,GAAGR,YAAY,CAAC,CAAD,EAAI,EAAJ,CAA1B;;AACA,SAAOO,KAAK,CAACE,MAAN,GAAeD,KAAtB,EAA6B;AAC3B,UAAME,CAAC,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAV;;AACA,QAAIK,KAAK,CAACI,OAAN,CAAcD,CAAd,MAAqB,CAAC,CAA1B,EAA6B;AAC3BH,MAAAA,KAAK,CAACK,IAAN,CAAWF,CAAX;AACD;AACF;;AACDG,EAAAA,WAAW,GAAGN,KAAd;AACA,SAAOA,KAAP;AACD,CAZA;;AAgBH,MAAMO,IAAI,GAAG,CAACC,GAAD,EAAgBC,CAAhB,EAA2BC,CAA3B,KAA+C;AAC1D,QAAMC,IAAI,GAAGH,GAAG,CAACC,CAAD,CAAhB;AACAD,EAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACE,CAAD,CAAZ;AACAF,EAAAA,GAAG,CAACE,CAAD,CAAH,GAASC,IAAT;AACD,CAJD,C,CAMA;;;AACA,OAAO,MAAMC,UAAU,GAAIJ,GAAD,IAAmB;AAC3C,OAAK,IAAIK,CAAC,GAAGL,GAAG,CAACN,MAAJ,GAAa,CAA1B,EAA6BW,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACvC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;AAC1B,UAAIN,GAAG,CAACM,CAAD,CAAH,GAASN,GAAG,CAACM,CAAC,GAAG,CAAL,CAAhB,EAAyB;AACvBP,QAAAA,IAAI,CAACC,GAAD,EAAMM,CAAN,EAASA,CAAC,GAAG,CAAb,CAAJ;AACD;AACF;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,SAAOA,GAAP;AACD,CAVM,C,CAYP;;AACA,OAAO,MAAMS,aAAa,GAAIT,GAAD,IAAmB;AAC9C,QAAM;AAAEN,IAAAA;AAAF,MAAaM,GAAnB;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,GAAG,CAA7B,EAAgCY,CAAC,EAAjC,EAAqC;AACnC,QAAII,MAAM,GAAGJ,CAAb;;AACA,SAAK,IAAID,CAAC,GAAGC,CAAb,EAAgBD,CAAC,GAAGX,MAApB,EAA4BW,CAAC,EAA7B,EAAiC;AAC/B,UAAIL,GAAG,CAACU,MAAD,CAAH,GAAcV,GAAG,CAACK,CAAD,CAArB,EAA0B;AACxBK,QAAAA,MAAM,GAAGL,CAAT;AACD;AACF;;AACD,QAAIC,CAAC,KAAKI,MAAV,EAAkB;AAChBX,MAAAA,IAAI,CAACC,GAAD,EAAMM,CAAN,EAASI,MAAT,CAAJ;AACD;AACF;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,SAAOA,GAAP;AACD,CAfM","sourcesContent":["// случайная длина массива\nconst getRandomInt = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n   const randomArr = (): number[] => {\n    const array = [];\n    const max = 100;\n    const count = getRandomInt(3, 17);\n    while (array.length < count) {\n      const r = Math.floor(Math.random() * max);\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n    randomArray = array;\n    return array;\n  };\n\n\n\nconst swap = (arr: number[], a: number, b: number): void => {\n  const temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n};\n\n// по возрастанию\nexport const bubbleSort = (arr: number[]) => {\n  for (let j = arr.length - 1; j > 0; j--) {\n    for (let i = 0; i < j; i++) {\n      if (arr[i] > arr[i + 1]) {\n        swap(arr, i, i + 1);\n      }\n    }\n  }\n  console.log(arr);\n  return arr;\n};\n\n// по убыванию\nexport const selectionSort = (arr: number[]) => {\n  const { length } = arr;\n  for (let i = 0; i < length - 1; i++) {\n    let maxInd = i;\n    for (let j = i; j < length; j++) {\n      if (arr[maxInd] < arr[j]) {\n        maxInd = j;\n      }\n    }\n    if (i !== maxInd) {\n      swap(arr, i, maxInd);\n    }\n  }\n  console.log(arr)\n  return arr;\n};\n"]},"metadata":{},"sourceType":"module"}