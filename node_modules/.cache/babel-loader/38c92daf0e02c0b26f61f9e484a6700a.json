{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/sorting-page/sorting-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"../ui/button/button\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./sorting.module.css\";\nimport { bubbleSort, selectionSort } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SortingPage = () => {\n  _s();\n\n  const [method, setMethod] = useState(undefined);\n  let randomArray = [];\n\n  const getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  const randomArr = () => {\n    const array = [];\n    const max = 100;\n    const count = getRandomInt(3, 17);\n\n    while (array.length < count) {\n      const r = Math.floor(Math.random() * max);\n\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n\n    randomArray = array;\n    console.log(randomArray);\n    return array;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\\u0430\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.navigation,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.navigation,\n          children: [/*#__PURE__*/_jsxDEV(RadioInput, {\n            label: \"\\u0412\\u044B\\u0431\\u043E\\u0440\",\n            extraClass: styles.navigationItem,\n            onClick: () => setMethod('Selection')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioInput, {\n            label: \"\\u041F\\u0443\\u0437\\u044B\\u0440\\u0451\\u043A\",\n            extraClass: styles.navigationItem,\n            onClick: () => setMethod('Bubb')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u041F\\u043E \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430\\u043D\\u0438\\u044E\",\n            extraClass: styles.navigationItem,\n            onClick: () => bubbleSort(randomArray)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u041F\\u043E \\u0443\\u0431\\u044B\\u0432\\u0430\\u043D\\u0438\\u044E\",\n            extraClass: styles.navigationItem,\n            onClick: () => selectionSort(randomArray)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\",\n          onClick: () => randomArr()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SortingPage, \"4mTvlk1+YvkxylNCEEMWDCtb3tc=\");\n\n_c = SortingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/sorting-page/sorting-page.tsx"],"names":["React","useState","Button","RadioInput","SolutionLayout","styles","bubbleSort","selectionSort","SortingPage","method","setMethod","undefined","randomArray","getRandomInt","min","max","Math","floor","random","randomArr","array","count","length","r","indexOf","push","console","log","container","navigation","navigationItem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"../ui/button/button\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./sorting.module.css\";\nimport { bubbleSort, selectionSort } from \"./utils\";\n\nexport const SortingPage: React.FC = () => {\n\n  const [method, setMethod] = useState<string | undefined>(undefined)\n\n  let randomArray: number[] = [];\n\n  const getRandomInt = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  const randomArr = (): number[] => {\n    const array = [];\n    const max = 100;\n    const count = getRandomInt(3, 17);\n    while (array.length < count) {\n      const r = Math.floor(Math.random() * max);\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n    randomArray = array;\n    console.log(randomArray)\n    return array;\n  };\n\n  return (\n    <SolutionLayout title=\"Сортировка массива\">\n      <div className={styles.container}>\n        <div className={styles.navigation}>\n          <div className={styles.navigation}>\n            <RadioInput label=\"Выбор\" extraClass={styles.navigationItem} onClick={()=>setMethod('Selection')}/>\n            <RadioInput label=\"Пузырёк\" extraClass={styles.navigationItem} onClick={()=>setMethod('Bubb')}/>\n            <Button\n              text=\"По возрастанию\"\n              extraClass={styles.navigationItem}\n              onClick={() => bubbleSort(randomArray)}\n            />\n            <Button text=\"По убыванию\" extraClass={styles.navigationItem} \n            onClick={() => selectionSort(randomArray)}/>\n          </div>\n          <Button text=\"Новый массив\" onClick={() => randomArr()} />\n        </div>\n        <div>result</div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}