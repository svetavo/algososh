{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/fibonacci-page/fibonacci-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from './fibonacci.module.css';\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FibonacciPage = () => {\n  _s();\n\n  var _arr;\n\n  const [value, setValue] = useState();\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u0424\\u0438\\u0431\\u043E\\u043D\\u0430\\u0447\\u0447\\u0438\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\",\n          onClick: () => fibonacci(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: (_arr = arr) === null || _arr === void 0 ? void 0 : _arr.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FibonacciPage, \"hWRfrSP8yP0Yit5gONTVsURNXRY=\");\n\n_c = FibonacciPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FibonacciPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/fibonacci-page/fibonacci-page.tsx"],"names":["React","useState","SolutionLayout","styles","Input","Button","Circle","FibonacciPage","value","setValue","onChange","e","target","container","input","fibonacci","isOpen","result","arr","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAEA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBR,QAAQ,EAAnC;;AAEA,QAAMS,QAAQ,GAAIC,CAAD,IAAY;AAC3BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAFD;;AAGA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,qKAAtB;AAAA,2BACC;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACU,SAAvB;AAAA,8BACG;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACW,KAAvB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,8DAAb;AAA0B,UAAA,OAAO,EAAE,MAAMK,SAAS,CAACP,KAAD;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAKG;AAAA,kBACGQ,MAAM,gBACL;AAAK,UAAA,SAAS,EAAEb,MAAM,CAACc,MAAvB;AAAA,4BACGC,GADH,yCACG,KAAKC,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAED;AAAhB,aAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADK,GAMH;AAPN;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzBM;;GAAMd,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from './fibonacci.module.css'\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\n\nexport const FibonacciPage: React.FC = () => {\n  const [value, setValue] =  useState()\n\n  const onChange = (e: any) => {\n    setValue(e.target.value);\n  };\n  return (\n    <SolutionLayout title=\"Последовательность Фибоначчи\">\n     <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} />\n          <Button text=\"Рассчитать\" onClick={() => fibonacci(value)} />\n        </div>\n        <div>\n          {isOpen ? (\n            <div className={styles.result}>\n              {arr?.map((item, index) => (\n                <Circle letter={item} key={index} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}