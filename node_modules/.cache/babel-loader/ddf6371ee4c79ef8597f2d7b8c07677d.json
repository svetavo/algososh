{"ast":null,"code":"import { queue } from '../components/queue-page/queue_class';\nexport const enqueue = _ref => {\n  let {\n    value,\n    array,\n    currentIndex,\n    setArray,\n    setIsLoader,\n    setTail,\n    setCurrentIndex,\n    setValue\n  } = _ref;\n\n  if (value) {\n    setIsLoader(true);\n    queue.enqueue(currentIndex, value, array);\n    setArray(queue.queue);\n    setTail(queue.tail);\n    setCurrentIndex(queue.currentIndex);\n    console.log(queue.queue);\n    setValue(\"\");\n    setIsLoader(false);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n};\nexport const dequeue = _ref2 => {\n  let {\n    array,\n    head,\n    setIsLoader,\n    emptyElement\n  } = _ref2;\n  setIsLoader(true);\n  queue.dequeue(head, emptyElement, array);\n  setArray(queue.queue);\n  set(queue.tail);\n  setIsLoader(false);\n};\nexport const clearQueue = _ref3 => {\n  let {\n    setIsLoader,\n    setQueue,\n    setTail,\n    setCurrentIndex,\n    setHead,\n    emptyArray\n  } = _ref3;\n  setIsLoader(true);\n  setQueue(emptyArray);\n  setTail(0);\n  setCurrentIndex(0);\n  setHead(0);\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/queue-utils.ts"],"names":["queue","enqueue","value","array","currentIndex","setArray","setIsLoader","setTail","setCurrentIndex","setValue","tail","console","log","alert","dequeue","head","emptyElement","set","clearQueue","setQueue","setHead","emptyArray"],"mappings":"AAEA,SAAQA,KAAR,QAAoB,sCAApB;AAqBA,OAAO,MAAMC,OAAO,GAAG,QASH;AAAA,MATI;AACtBC,IAAAA,KADsB;AAEtBC,IAAAA,KAFsB;AAGtBC,IAAAA,YAHsB;AAItBC,IAAAA,QAJsB;AAKtBC,IAAAA,WALsB;AAMtBC,IAAAA,OANsB;AAOtBC,IAAAA,eAPsB;AAQtBC,IAAAA;AARsB,GASJ;;AAClB,MAAIP,KAAJ,EAAW;AACTI,IAAAA,WAAW,CAAE,IAAF,CAAX;AACAN,IAAAA,KAAK,CAACC,OAAN,CAAcG,YAAd,EAA6BF,KAA7B,EAAoCC,KAApC;AACAE,IAAAA,QAAQ,CAAEL,KAAK,CAACA,KAAR,CAAR;AACAO,IAAAA,OAAO,CAAEP,KAAK,CAACU,IAAR,CAAP;AACAF,IAAAA,eAAe,CAAER,KAAK,CAACI,YAAR,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACA,KAAlB;AACAS,IAAAA,QAAQ,CAAE,EAAF,CAAR;AACAH,IAAAA,WAAW,CAAE,KAAF,CAAX;AACD,GATD,MASO;AACLO,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;AACF,CAtBM;AAwBP,OAAO,MAAMC,OAAO,GAAG,SAKH;AAAA,MALI;AACtBX,IAAAA,KADsB;AAEtBY,IAAAA,IAFsB;AAGtBT,IAAAA,WAHsB;AAItBU,IAAAA;AAJsB,GAKJ;AAClBV,EAAAA,WAAW,CAAE,IAAF,CAAX;AACAN,EAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,EAAqBC,YAArB,EAAoCb,KAApC;AACAE,EAAAA,QAAQ,CAAEL,KAAK,CAACA,KAAR,CAAR;AACAiB,EAAAA,GAAG,CAAEjB,KAAK,CAACU,IAAR,CAAH;AAEAJ,EAAAA,WAAW,CAAE,KAAF,CAAX;AACD,CAZM;AAcP,OAAO,MAAMY,UAAU,GAAG,SAON;AAAA,MAPO;AACzBZ,IAAAA,WADyB;AAEzBa,IAAAA,QAFyB;AAGzBZ,IAAAA,OAHyB;AAIzBC,IAAAA,eAJyB;AAKzBY,IAAAA,OALyB;AAMzBC,IAAAA;AANyB,GAOP;AAClBf,EAAAA,WAAW,CAAE,IAAF,CAAX;AACAa,EAAAA,QAAQ,CAAEE,UAAF,CAAR;AACAd,EAAAA,OAAO,CAAE,CAAF,CAAP;AACAC,EAAAA,eAAe,CAAE,CAAF,CAAf;AACAY,EAAAA,OAAO,CAAE,CAAF,CAAP;AACAd,EAAAA,WAAW,CAAE,KAAF,CAAX;AACD,CAdM","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport {queue} from '../components/queue-page/queue_class'\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value?: string;\n  array: string[];\n  tail?: number;\n  head?: number;\n  currentIndex?: number;\n  emptyElement?: string;\n  emptyArray?: string[];\n  maxLength?: number;\n  setIsLoader: Dispatcher<boolean>;\n  setValue?: Dispatcher<string>;\n  setArray?: Dispatcher<string[]>;\n  setTail?: Dispatcher<number>;\n  setHead?: Dispatch<number>;\n  setCurrentIndex?: Dispatcher<number>;\n}\n\nexport const enqueue = ({\n  value,\n  array,\n  currentIndex,\n  setArray,\n  setIsLoader,\n  setTail,\n  setCurrentIndex,\n  setValue,\n}: IProps): void => {\n  if (value) {\n    setIsLoader!(true);\n    queue.enqueue(currentIndex!, value, array);\n    setArray!(queue.queue)\n    setTail!(queue.tail)\n    setCurrentIndex!(queue.currentIndex)\n    console.log(queue.queue)\n    setValue!(\"\");\n    setIsLoader!(false);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n};\n\nexport const dequeue = ({\n  array,\n  head,\n  setIsLoader,\n  emptyElement,\n}: IProps): void => {\n  setIsLoader!(true);\n  queue.dequeue(head!, emptyElement!, array);\n  setArray!(queue.queue)\n  set!(queue.tail)\n\n  setIsLoader!(false);\n};\n\nexport const clearQueue = ({\n  setIsLoader,\n  setQueue,\n  setTail,\n  setCurrentIndex,\n  setHead,\n  emptyArray,\n}: IProps): void => {\n  setIsLoader!(true);\n  setQueue!(emptyArray!);\n  setTail!(0);\n  setCurrentIndex!(0);\n  setHead!(0);\n  setIsLoader!(false);\n};\n"]},"metadata":{},"sourceType":"module"}