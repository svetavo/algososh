{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/string/string.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { Button } from \"../ui/button/button\";\nimport styles from \"./string.module.css\";\nimport { circleColor } from \"../../utils/string-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StringComponent = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [arr, setArr] = useState(null);\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const props = {\n    value,\n    setIsLoader,\n    setArr,\n    setIsOpen\n  }; // const reverse = (value: string) => {\n  //   setIsLoader(true);\n  //   const newArr = value.split(\"\");\n  //   setArr(newArr);\n  //   arrReverse(newArr);\n  //   setIsOpen(true);\n  // };\n\n  const onChange = e => {\n    setValue(e.target.value);\n  }; // const arrReverse = async (arr: string[]) => {\n  //   const end = arr.length - 1;\n  //   const mid = Math.floor(arr.length / 2);\n  //   setCurrentIndex(0);\n  //   for (let i = 0; i < mid; i++) {\n  //     [arr[i], arr[end - i]] = [arr[end - i], arr[i]];\n  //     setCurrentIndex((i) => i + 1);\n  //     await delay(1000);\n  //     setArr(arr);\n  //   }\n  //   setIsLoader(false);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0440\\u043E\\u043A\\u0430\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\",\n          onClick: () => reverse(value),\n          isLoader: isLoader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: arr === null || arr === void 0 ? void 0 : arr.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            extraClass: styles.item,\n            state: circleColor(currentIndex, index, arr)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StringComponent, \"uMJTFrJkxPj/bK5i6oupqrw3RIY=\");\n\n_c = StringComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StringComponent\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/string/string.tsx"],"names":["React","useState","SolutionLayout","Input","Circle","Button","styles","circleColor","StringComponent","value","setValue","isOpen","setIsOpen","arr","setArr","isLoader","setIsLoader","currentIndex","setCurrentIndex","props","onChange","e","target","container","input","reverse","result","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAkB,IAAlB,CAA9B;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMkB,KAAK,GAAG;AAAGV,IAAAA,KAAH;AACZO,IAAAA,WADY;AAEZF,IAAAA,MAFY;AAGZF,IAAAA;AAHY,GAAd,CAN6C,CAW7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,QAAQ,GAAIC,CAAD,IAAsC;AACrDX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASb,KAAV,CAAR;AACD,GAFD,CAnB6C,CAuB7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,sCAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACiB,SAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACkB,KAAvB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,8DADP;AAEE,UAAA,OAAO,EAAE,MAAMK,OAAO,CAAChB,KAAD,CAFxB;AAGE,UAAA,QAAQ,EAAEM;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGJ,MAAM,gBACL;AAAK,UAAA,SAAS,EAAEL,MAAM,CAACoB,MAAvB;AAAA,oBACGb,GADH,aACGA,GADH,uBACGA,GAAG,CAAEc,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,MAAD;AACE,YAAA,MAAM,EAAED,IADV;AAGE,YAAA,UAAU,EAAEtB,MAAM,CAACsB,IAHrB;AAIE,YAAA,KAAK,EAAErB,WAAW,CAACU,YAAD,EAAeY,KAAf,EAAsBhB,GAAtB;AAJpB,aAEOgB,KAFP;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADK,GAWH;AAZN;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAhEM;;GAAMrB,e;;KAAAA,e","sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { Button } from \"../ui/button/button\";\nimport styles from \"./string.module.css\";\nimport { delay } from \"../../utils/utils\";\nimport { circleColor } from \"../../utils/string-utils\";\n\nexport const StringComponent: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [arr, setArr] = useState<null | string[]>(null);\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const props = {  value,\n    setIsLoader,\n    setArr,\n    setIsOpen,\n  }\n  // const reverse = (value: string) => {\n  //   setIsLoader(true);\n  //   const newArr = value.split(\"\");\n  //   setArr(newArr);\n  //   arrReverse(newArr);\n  //   setIsOpen(true);\n  // };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  // const arrReverse = async (arr: string[]) => {\n  //   const end = arr.length - 1;\n  //   const mid = Math.floor(arr.length / 2);\n  //   setCurrentIndex(0);\n  //   for (let i = 0; i < mid; i++) {\n  //     [arr[i], arr[end - i]] = [arr[end - i], arr[i]];\n  //     setCurrentIndex((i) => i + 1);\n  //     await delay(1000);\n  //     setArr(arr);\n  //   }\n  //   setIsLoader(false);\n  // };\n\n  return (\n    <SolutionLayout title=\"Строка\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} />\n          <Button\n            text=\"Развернуть\"\n            onClick={() => reverse(value)}\n            isLoader={isLoader}\n          />\n        </div>\n        <div>\n          {isOpen ? (\n            <div className={styles.result}>\n              {arr?.map((item, index) => (\n                <Circle\n                  letter={item}\n                  key={index}\n                  extraClass={styles.item}\n                  state={circleColor(currentIndex, index, arr)}\n                />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}