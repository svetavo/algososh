{"ast":null,"code":"import { delay } from \"../utils/utils\";\nimport { list } from \"../components/list-page/List\";\nimport { ElementStates } from \"../types/element-states\";\n// добавить в head\nexport const addHead = async _ref => {\n  let {\n    array,\n    value,\n    setValue,\n    setIsDisabled,\n    setHead,\n    setTail,\n    setArray,\n    setIsChanging,\n    setIsLoaderAddHead\n  } = _ref;\n  setIsLoaderAddHead(true);\n  setIsDisabled(true);\n  setIsChanging(\"headAdd\");\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  newEl.state = ElementStates.Changing;\n  await delay(500);\n  list.unshift(newEl, array);\n  await delay(500);\n  setArray(list.print());\n  newEl.state = ElementStates.Modified;\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging(\"\");\n  await delay(500);\n  newEl.state = ElementStates.Default;\n  setValue(undefined);\n  setIsLoaderAddHead(false);\n  setIsDisabled(false);\n}; // добавить в tail\n\nexport const addTail = async _ref2 => {\n  let {\n    array,\n    value,\n    setValue,\n    setArray,\n    setHead,\n    setTail,\n    setIsDisabled,\n    setIsChanging,\n    setIsLoaderAddTail\n  } = _ref2;\n  setIsLoaderAddTail(true);\n  setIsDisabled(true);\n  setIsChanging(\"tailAdd\");\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  newEl.state = ElementStates.Changing;\n  await delay(500);\n  list.push(newEl, array);\n  await delay(500);\n  setArray(list.print());\n  newEl.state = ElementStates.Modified;\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging(\"\");\n  await delay(500);\n  newEl.state = ElementStates.Default;\n  setValue(undefined);\n  setIsLoaderAddTail(false);\n  setIsDisabled(false);\n}; // удалить из head\n\nexport const removeHead = async _ref3 => {\n  let {\n    array,\n    setArray,\n    setIsDisabled,\n    setHead,\n    setTail,\n    setIsChanging,\n    setIsLoaderRemoveHead\n  } = _ref3;\n  setIsLoaderRemoveHead(true);\n  setIsDisabled(true);\n  setIsChanging(\"headRemove\");\n  await delay(500);\n  list.shift(array);\n  await delay(500);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging(\"\");\n  await delay(500);\n  setIsDisabled(false);\n  setIsLoaderRemoveHead(false);\n}; // удалить из tail\n\nexport const removeTail = async _ref4 => {\n  let {\n    array,\n    setArray,\n    setIsDisabled,\n    setHead,\n    setTail,\n    setIsChanging,\n    setIsLoaderRemoveTail\n  } = _ref4;\n  setIsLoaderRemoveTail(true);\n  setIsDisabled(true);\n  setIsChanging(\"tailRemove\");\n  await delay(500);\n  list.pop(array);\n  await delay(500);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging(\"\");\n  await delay(500);\n  setIsDisabled(false);\n  setIsLoaderRemoveTail(false);\n}; //добавить по индексу\n\nexport const addIndex = async _ref5 => {\n  let {\n    array,\n    value,\n    setValue,\n    setIndex,\n    index,\n    setIsDisabled,\n    setHead,\n    setTail,\n    setArray,\n    setIsChanging,\n    setCurrentIndex,\n    setIsLoaderAddInd\n  } = _ref5;\n  setIsLoaderAddInd(true);\n  setIsDisabled(true);\n  setIsChanging(\"indexAdd\");\n  setCurrentIndex(index);\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  newEl.state = ElementStates.Changing;\n  await delay(500);\n  list.addInd(index, newEl, array);\n  await delay(500);\n  setArray(list.print());\n  newEl.state = ElementStates.Modified;\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging(\"\");\n  await delay(500);\n  newEl.state = ElementStates.Default;\n  setValue(undefined);\n  setIndex(undefined);\n  setIsDisabled(false);\n  setIsLoaderAddInd(false);\n}; //удалить по индексу\n\nexport const removeIndex = async _ref6 => {\n  let {\n    array,\n    index,\n    setIsDisabled,\n    setHead,\n    setTail,\n    setArray,\n    setCurrentIndex,\n    setIsChanging,\n    setValue,\n    setIndex,\n    setIsLoaderRemoveInd\n  } = _ref6;\n  setIsLoaderRemoveInd(true);\n  setIsDisabled(true);\n  colorSelection({\n    array,\n    index\n  });\n  await delay(1000);\n  setCurrentIndex(index);\n  await delay(1000);\n  setIsChanging(\"indexRemove\");\n  list.removeInd(index, array);\n  await delay(500);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging(\"\");\n  array === null || array === void 0 ? void 0 : array.forEach(el => el.state = ElementStates.Default);\n  await delay(500);\n  setIsDisabled(false);\n  setIsLoaderRemoveInd(false);\n  setValue(undefined);\n  setIndex(undefined);\n};\n\nconst colorSelection = async _ref7 => {\n  let {\n    array,\n    index\n  } = _ref7;\n\n  for (let i = 0; i < index; i++) {\n    array[i].state = ElementStates.Changing;\n    await delay(1000);\n  }\n};\n\nexport const letterChanger = _ref8 => {\n  let {\n    index,\n    item,\n    isChanging,\n    head,\n    tail,\n    currentIndex\n  } = _ref8;\n\n  if (isChanging === \"headRemove\" && index === head) {\n    return \"\";\n  } else if (isChanging === \"tailRemove\" && index === tail) {\n    return \"\";\n  } else if (isChanging === \"indexRemove\" && index === currentIndex) {\n    return \"\";\n  } else {\n    return String(item.number);\n  }\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["delay","list","ElementStates","addHead","array","value","setValue","setIsDisabled","setHead","setTail","setArray","setIsChanging","setIsLoaderAddHead","newEl","number","state","Default","Changing","unshift","print","Modified","head","tail","undefined","addTail","setIsLoaderAddTail","push","removeHead","setIsLoaderRemoveHead","shift","removeTail","setIsLoaderRemoveTail","pop","addIndex","setIndex","index","setCurrentIndex","setIsLoaderAddInd","addInd","removeIndex","setIsLoaderRemoveInd","colorSelection","removeInd","forEach","el","i","letterChanger","item","isChanging","currentIndex","String"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { delay } from \"../utils/utils\";\nimport { list } from \"../components/list-page/List\";\nimport { IArrEl } from \"../utils/utils\";\nimport { ElementStates } from \"../types/element-states\";\nimport { Circle } from \"../components/ui/circle/circle\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps<T> {\n  array?: T[];\n  value?: number;\n  index?: number;\n  setArray: Dispatcher<T[]>;\n  setValue?: Dispatcher<number | undefined>;\n  setIndex?: Dispatcher<number | undefined>;\n  setHead: Dispatcher<number>;\n  setIsDisabled: Dispatcher<boolean>;\n  setIsChanging?: Dispatcher<string>;\n  setTail: Dispatcher<number>;\n  setCurrentIndex?: Dispatcher<number>;\n  setIsLoaderAddInd?: Dispatcher<boolean>;\n  setIsLoaderRemoveInd?: Dispatcher<boolean>;\n  setIsLoaderRemoveHead?:Dispatcher<boolean>\n  setIsLoaderRemoveTail?: Dispatcher<boolean>\n  setIsLoaderAddHead?:Dispatcher<boolean>\n  setIsLoaderAddTail?: Dispatcher<boolean>\n}\n\ninterface ISel<T> {\n  array: T[] | undefined;\n  index: number | undefined;\n}\n\n// добавить в head\nexport const addHead = async ({\n  array,\n  value,\n  setValue,\n  setIsDisabled,\n  setHead,\n  setTail,\n  setArray,\n  setIsChanging,\n  setIsLoaderAddHead,\n}: IProps<IArrEl>) => {\n  setIsLoaderAddHead!(true);\n  setIsDisabled(true);\n  setIsChanging!(\"headAdd\");\n  const newEl = { number: value, state: ElementStates.Default };\n  newEl.state = ElementStates.Changing;\n  await delay(500);\n  list.unshift(newEl, array!);\n  await delay(500);\n  setArray(list.print());\n  newEl.state = ElementStates.Modified;\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging!(\"\");\n  await delay(500);\n  newEl.state = ElementStates.Default;\n  setValue!(undefined);\n  setIsLoaderAddHead!(false);\n  setIsDisabled(false);\n};\n\n// добавить в tail\nexport const addTail = async ({\n  array,\n  value,\n  setValue,\n  setArray,\n  setHead,\n  setTail,\n  setIsDisabled,\n  setIsChanging,\n  setIsLoaderAddTail\n}: IProps<IArrEl>) => {\n  setIsLoaderAddTail!(true);\n  setIsDisabled(true);\n  setIsChanging!(\"tailAdd\");\n  const newEl = { number: value, state: ElementStates.Default };\n  newEl.state = ElementStates.Changing;\n  await delay(500);\n  list.push(newEl, array!);\n  await delay(500);\n  setArray(list.print());\n  newEl.state = ElementStates.Modified;\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging!(\"\");\n  await delay(500);\n  newEl.state = ElementStates.Default;\n  setValue!(undefined);\n  setIsLoaderAddTail!(false);\n  setIsDisabled(false);\n};\n\n// удалить из head\nexport const removeHead = async ({\n  array,\n  setArray,\n  setIsDisabled,\n  setHead,\n  setTail,\n  setIsChanging,\n  setIsLoaderRemoveHead\n}: IProps<IArrEl>) => {\n  setIsLoaderRemoveHead!(true);\n  setIsDisabled(true);\n  setIsChanging!(\"headRemove\");\n  await delay(500);\n  list.shift(array!);\n  await delay(500);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging!(\"\");\n  await delay(500);\n  setIsDisabled!(false);\n  setIsLoaderRemoveHead!(false);\n};\n\n// удалить из tail\nexport const removeTail = async ({\n  array,\n  setArray,\n  setIsDisabled,\n  setHead,\n  setTail,\n  setIsChanging,\n  setIsLoaderRemoveTail\n}: IProps<IArrEl>) => {\n  setIsLoaderRemoveTail!(true);\n  setIsDisabled(true);\n  setIsChanging!(\"tailRemove\");\n  await delay(500);\n  list.pop(array!);\n  await delay(500);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging!(\"\");\n  await delay(500);\n  setIsDisabled(false);\n  setIsLoaderRemoveTail!(false);\n};\n\n//добавить по индексу\nexport const addIndex = async ({\n  array,\n  value,\n  setValue,\n  setIndex,\n  index,\n  setIsDisabled,\n  setHead,\n  setTail,\n  setArray,\n  setIsChanging,\n  setCurrentIndex,\n  setIsLoaderAddInd\n}: IProps<IArrEl>) => {\n  setIsLoaderAddInd!(true);\n  setIsDisabled(true);\n  setIsChanging!(\"indexAdd\");\n  setCurrentIndex!(index!);\n  const newEl = { number: value, state: ElementStates.Default };\n  newEl.state = ElementStates.Changing;\n  await delay(500);\n  list.addInd(index!, newEl!, array!);\n  await delay(500);\n  setArray(list.print());\n  newEl.state = ElementStates.Modified;\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging!(\"\");\n  await delay(500);\n  newEl.state = ElementStates.Default;\n  setValue!(undefined);\n  setIndex!(undefined)\n  setIsDisabled(false);\n  setIsLoaderAddInd!(false);\n};\n\n//удалить по индексу\nexport const removeIndex = async ({\n  array,\n  index,\n  setIsDisabled,\n  setHead,\n  setTail,\n  setArray,\n  setCurrentIndex,\n  setIsChanging,\n  setValue,\n  setIndex,\n  setIsLoaderRemoveInd\n}: IProps<IArrEl>) => {\n  setIsLoaderRemoveInd!(true);\n  setIsDisabled(true);\n  colorSelection({ array, index });\n  await delay(1000);\n  setCurrentIndex!(index!);\n  await delay(1000);\n  setIsChanging!(\"indexRemove\");\n  list.removeInd(index!, array!);\n  await delay(500);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsChanging!(\"\");\n  array?.forEach((el) => (el.state = ElementStates.Default));\n  await delay(500);\n  setIsDisabled(false);\n  setIsLoaderRemoveInd!(false);\n  setValue!(undefined);\n  setIndex!(undefined)\n};\n\nconst colorSelection = async ({ array, index }: ISel<IArrEl>) => {\n  for (let i = 0; i < index!; i++) {\n    array![i].state = ElementStates.Changing;\n    await delay(1000);\n  }\n};\n\ninterface ILetterChanger {\n  index: number,\n  item: IArrEl,\n  isChanging: string,\n  head: number;\n  tail: number;\n  currentIndex: number\n}\n\nexport const letterChanger = ({index, item, isChanging, head, tail, currentIndex}: ILetterChanger) => {\n  if (isChanging === \"headRemove\" && index === head) {\n    return \"\";\n  } else if (isChanging === \"tailRemove\" && index === tail) {\n    return \"\";\n  } else if (isChanging === \"indexRemove\" && index === currentIndex) {\n    return \"\";\n  } else {\n    return String(item.number);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}