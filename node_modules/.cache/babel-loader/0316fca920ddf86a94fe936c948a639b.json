{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/ui/input/input.tsx\";\nimport React from \"react\";\nimport styles from \"./input.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = _ref => {\n  let {\n    placeholder = \"Введите текст\",\n    extraClass = \"\",\n    type = \"text\",\n    maxLength,\n    max,\n    isLimitText = false,\n    onChange,\n    ...rest\n  } = _ref;\n\n  const limitText = (maxLength, max) => {\n    if (type === \"text\" && maxLength >= 5) {\n      return `Максимум — ${maxLength} символов`;\n    } else if (type === \"text\" && maxLength < 5) {\n      return `Максимум — ${maxLength} символа`;\n    } else {\n      return `Максимальное число — ${max}`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.content} ${extraClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: `${styles.input} text text_type_input text_color_input`,\n      placeholder: placeholder,\n      type: type,\n      maxLength: maxLength,\n      max: max,\n      onChange: onChange,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isLimitText && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `text text_type_input-lim text_color_input mt-2 ml-8 ${styles.limit}`,\n      children: limitText(maxLength, max)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/ui/input/input.tsx"],"names":["React","styles","Input","placeholder","extraClass","type","maxLength","max","isLimitText","onChange","rest","limitText","content","input","limit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAUA,OAAO,MAAMC,KAA2B,GAAG,QASrC;AAAA,MATsC;AAC1CC,IAAAA,WAAW,GAAG,eAD4B;AAE1CC,IAAAA,UAAU,GAAG,EAF6B;AAG1CC,IAAAA,IAAI,GAAG,MAHmC;AAI1CC,IAAAA,SAJ0C;AAK1CC,IAAAA,GAL0C;AAM1CC,IAAAA,WAAW,GAAG,KAN4B;AAO1CC,IAAAA,QAP0C;AAQ1C,OAAGC;AARuC,GAStC;;AACJ,QAAMC,SAAS,GAAG,CAACL,SAAD,EAAoBC,GAApB,KAAoC;AACpD,QAAIF,IAAI,KAAK,MAAT,IAAmBC,SAAS,IAAI,CAApC,EAAuC;AACrC,aAAQ,cAAaA,SAAU,WAA/B;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,MAAT,IAAmBC,SAAS,GAAG,CAAnC,EAAsC;AAC3C,aAAQ,cAAaA,SAAU,UAA/B;AACD,KAFM,MAEA;AACL,aAAQ,wBAAuBC,GAAI,EAAnC;AACD;AACF,GARD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEN,MAAM,CAACW,OAAQ,IAAGR,UAAW,EAAhD;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,GAAEH,MAAM,CAACY,KAAM,wCAD7B;AAEE,MAAA,WAAW,EAAEV,WAFf;AAGE,MAAA,IAAI,EAAEE,IAHR;AAIE,MAAA,SAAS,EAAEC,SAJb;AAKE,MAAA,GAAG,EAAEC,GALP;AAME,MAAA,QAAQ,EAAEE,QANZ;AAAA,SAOMC;AAPN;AAAA;AAAA;AAAA;AAAA,YADF,EAUGF,WAAW,iBACV;AACE,MAAA,SAAS,EAAG,uDAAsDP,MAAM,CAACa,KAAM,EADjF;AAAA,gBAGGH,SAAS,CAACL,SAAD,EAAaC,GAAb;AAHZ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvCM;KAAML,K","sourcesContent":["import React from \"react\";\nimport styles from \"./input.module.css\";\n\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\n  placeholder?: string;\n  extraClass?: string;\n  isLimitText?: boolean;\n  max: number\n  max\n}\n\nexport const Input: React.FC<InputProps> = ({\n  placeholder = \"Введите текст\",\n  extraClass = \"\",\n  type = \"text\",\n  maxLength,\n  max,\n  isLimitText = false,\n  onChange,\n  ...rest\n}) => {\n  const limitText = (maxLength: number, max: number) => {\n    if (type === \"text\" && maxLength >= 5) {\n      return `Максимум — ${maxLength} символов`;\n    } else if (type === \"text\" && maxLength < 5) {\n      return `Максимум — ${maxLength} символа`;\n    } else {\n      return `Максимальное число — ${max}`;\n    }\n  };\n  return (\n    <div className={`${styles.content} ${extraClass}`}>\n      <input\n        className={`${styles.input} text text_type_input text_color_input`}\n        placeholder={placeholder}\n        type={type}\n        maxLength={maxLength}\n        max={max}\n        onChange={onChange}\n        {...rest}\n      />\n      {isLimitText && (\n        <span\n          className={`text text_type_input-lim text_color_input mt-2 ml-8 ${styles.limit}`}\n        >\n          {limitText(maxLength!, max)}\n        </span>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}