{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/queue-page/queue-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./queue.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QueuePage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [queue, setQueue] = useState([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0);\n  q.length = 4;\n  const emptyElement = '';\n  useEffect(() => {\n    const emptyArr = Array.apply(null, Array(7)).map(function () {});\n    setQueue(emptyArr);\n  }, []);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onAdd = () => {// value ? add(value) : alert(\"Введите значение в инпут\");\n  };\n\n  const onDelete = () => {//   array.length ? dequeue() : alert(\"стек пуст\");\n  };\n\n  const onClear = () => {// stack.length ? clearStack() : alert(\"стек пуст\");\n  }; // const enqueue = (array) => {\n  //   for (let i = 0; i < array.length; i++) {\n  //     array.push(item);\n  //   }\n  // };\n\n\n  const enqueue = item => {\n    // if (queue.length > 7) {\n    //   alert(\"this is too much :(\");\n    // } else {\n    queue.splice(currentIndex, 1, item);\n    setCurrentIndex(currentIndex + 1);\n    setTail(tail + 1); // }\n  };\n\n  const dequeue = () => {\n    console.log('hi'); // queue.shift()\n\n    queue.splice(head, 1, emptyElement);\n    setHead(head + 1);\n    console.log(queue);\n  }; // const add = (item: string) => {\n  //   setIsLoader(true);\n  //   array.push(item);\n  //   setArray(array);\n  //   setCurrentIndex(currentIndex + 1);\n  //   setValue(\"\");\n  //   setIsLoader(false);\n  // };\n  // const dequeue = () => {\n  //   setIsLoader(true);\n  //   array.shift()\n  //   // stack.pop();\n  //   // setStack([...stack]);\n  //   setCurrentIndex(currentIndex - 1);\n  //   setIsLoader(false);\n  // };\n\n\n  const clearStack = () => {// setIsLoader(true);\n    // while (stack.length > 0) {\n    //   stack.pop();\n    // }\n    // setStack([...stack]);\n    // setIsLoader(false);\n  };\n\n  console.log(queue);\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u041E\\u0447\\u0435\\u0440\\u0435\\u0434\\u044C\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange,\n          value: value,\n          maxLength: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-5\",\n          onClick: () => enqueue(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          extraClass: \"mr-20\",\n          onClick: dequeue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n          isLoader: isLoader,\n          onClick: onClear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: queue.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            index: index,\n            extraClass: styles.item,\n            state: tail === index ? ElementStates.Changing : ElementStates.Default,\n            head: head === index ? \"head\" : null,\n            tail: tail === index ? \"tail\" : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QueuePage, \"BtdnQ1RAej/pkLxnPVLm4SDmg3I=\");\n\n_c = QueuePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueuePage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/queue-page.tsx"],"names":["React","useState","useEffect","SolutionLayout","styles","Button","Input","Circle","ElementStates","QueuePage","value","setValue","isLoader","setIsLoader","currentIndex","setCurrentIndex","queue","setQueue","tail","setTail","head","setHead","q","length","emptyElement","emptyArr","Array","apply","map","onChange","e","target","onAdd","onDelete","onClear","enqueue","item","splice","dequeue","console","log","clearStack","container","input","result","index","Changing","Default"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useRef, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./queue.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\n\nexport const QueuePage: React.FC = () => {\n  const [value, setValue] = useState<string | number>(\"\");\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [queue, setQueue] = useState([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0);\n  q.length = 4;\n  const emptyElement = ''\n\n  useEffect(() => {\n    const emptyArr: any = Array.apply(null, Array(7)).map(function () {});\n    setQueue(emptyArr);\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onAdd = () => {\n    // value ? add(value) : alert(\"Введите значение в инпут\");\n  };\n\n  const onDelete = () => {\n    //   array.length ? dequeue() : alert(\"стек пуст\");\n  };\n\n  const onClear = () => {\n    // stack.length ? clearStack() : alert(\"стек пуст\");\n  };\n\n  // const enqueue = (array) => {\n  //   for (let i = 0; i < array.length; i++) {\n  //     array.push(item);\n  //   }\n  // };\n\n  const enqueue = (item: number): void => {\n    // if (queue.length > 7) {\n    //   alert(\"this is too much :(\");\n    // } else {\n      queue.splice(currentIndex, 1, item);\n      setCurrentIndex(currentIndex + 1);\n      setTail(tail + 1);\n    // }\n  };\n\n  const dequeue = () => {\n    console.log('hi')\n    // queue.shift()\n    queue.splice(head, 1, emptyElement);\n    setHead(head+1)\n    console.log(queue);\n\n  }\n\n  // const add = (item: string) => {\n  //   setIsLoader(true);\n  //   array.push(item);\n  //   setArray(array);\n  //   setCurrentIndex(currentIndex + 1);\n  //   setValue(\"\");\n  //   setIsLoader(false);\n  // };\n\n  // const dequeue = () => {\n  //   setIsLoader(true);\n  //   array.shift()\n  //   // stack.pop();\n  //   // setStack([...stack]);\n  //   setCurrentIndex(currentIndex - 1);\n  //   setIsLoader(false);\n  // };\n\n  const clearStack = () => {\n    // setIsLoader(true);\n    // while (stack.length > 0) {\n    //   stack.pop();\n    // }\n    // setStack([...stack]);\n    // setIsLoader(false);\n  };\n\n  console.log(queue);\n\n  return (\n    <SolutionLayout title=\"Очередь\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} value={value} maxLength={4} />\n          <Button\n            text=\"Добавить\"\n            isLoader={isLoader}\n            extraClass=\"mr-5\"\n            onClick={() => enqueue(value)}\n          />\n          <Button\n            text=\"Удалить\"\n            isLoader={isLoader}\n            extraClass=\"mr-20\"\n            onClick={dequeue}\n          />\n          <Button text=\"Очистить\" isLoader={isLoader} onClick={onClear} />\n        </div>\n        <div>\n          <div className={styles.result}>\n            {queue.map((item, index) => (\n              <Circle\n                letter={item}\n                key={index}\n                index={index}\n                extraClass={styles.item}\n                state={\n                  tail === index\n                    ? ElementStates.Changing\n                    : ElementStates.Default\n                }\n                head={head === index ? \"head\" : null}\n                tail={tail === index ? \"tail\" : null}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}