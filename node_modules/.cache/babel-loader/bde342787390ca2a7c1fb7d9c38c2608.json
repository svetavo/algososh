{"ast":null,"code":"class Queue {\n  constructor() {\n    this.queue = [];\n    this.head = -1;\n    this.tail = -1;\n    this.currentIndex = 0;\n    this.maxSize = 8;\n\n    this.enqueue = (index, item, array) => {\n      if (this.getSize() < this.maxSize) {\n        array.splice(index, 1, item);\n\n        if (this.head === -1) {\n          this.head++;\n        }\n\n        this.tail++;\n        this.currentIndex++;\n        this.queue = array;\n      } else {\n        throw new Error(\"Слишком много элементов\");\n      }\n    };\n\n    this.dequeue = (index, item, array) => {\n      if (this.tail > this.head) {\n        array.splice(index, 1, item);\n        this.head++;\n      } else if (this.tail === this.head) {\n        array.splice(index, 1, item);\n        this.clear();\n      }\n\n      this.queue = array;\n    };\n\n    this.clear = () => {\n      this.queue = [];\n      this.head = -1;\n      this.tail = -1;\n      this.currentIndex = 0;\n    };\n\n    this.getSize = () => this.queue.length;\n  }\n\n}\n\nexport const queue = new Queue();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/Queue.tsx"],"names":["Queue","queue","head","tail","currentIndex","maxSize","enqueue","index","item","array","getSize","splice","Error","dequeue","clear","length"],"mappings":"AAOA,MAAMA,KAAN,CAAiC;AAAA;AAAA,SAC/BC,KAD+B,GAChB,EADgB;AAAA,SAE/BC,IAF+B,GAExB,CAAC,CAFuB;AAAA,SAG/BC,IAH+B,GAGxB,CAAC,CAHuB;AAAA,SAI/BC,YAJ+B,GAIhB,CAJgB;AAAA,SAKvBC,OALuB,GAKb,CALa;;AAAA,SAO/BC,OAP+B,GAOrB,CAACC,KAAD,EAAgBC,IAAhB,EAA8BC,KAA9B,KAAkD;AAC1D,UAAI,KAAKC,OAAL,KAAiB,KAAKL,OAA1B,EAAmC;AACjCI,QAAAA,KAAK,CAACE,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBC,IAAvB;;AACA,YAAI,KAAKN,IAAL,KAAc,CAAC,CAAnB,EAAsB;AACpB,eAAKA,IAAL;AACD;;AACD,aAAKC,IAAL;AACA,aAAKC,YAAL;AACA,aAAKH,KAAL,GAAaQ,KAAb;AACD,OARD,MAQO;AACL,cAAM,IAAIG,KAAJ,CAAU,yBAAV,CAAN;AACD;AACF,KAnB8B;;AAAA,SAqB/BC,OArB+B,GAqBrB,CAACN,KAAD,EAAgBC,IAAhB,EAA8BC,KAA9B,KAAwD;AAChE,UAAI,KAAKN,IAAL,GAAY,KAAKD,IAArB,EAA2B;AACzBO,QAAAA,KAAK,CAACE,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBC,IAAvB;AACA,aAAKN,IAAL;AACD,OAHD,MAGO,IAAI,KAAKC,IAAL,KAAc,KAAKD,IAAvB,EAA6B;AAClCO,QAAAA,KAAK,CAACE,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBC,IAAvB;AACA,aAAKM,KAAL;AACD;;AACD,WAAKb,KAAL,GAAaQ,KAAb;AACD,KA9B8B;;AAAA,SAgC/BK,KAhC+B,GAgCvB,MAAY;AAClB,WAAKb,KAAL,GAAa,EAAb;AACA,WAAKC,IAAL,GAAY,CAAC,CAAb;AACA,WAAKC,IAAL,GAAY,CAAC,CAAb;AACA,WAAKC,YAAL,GAAoB,CAApB;AACD,KArC8B;;AAAA,SAuC/BM,OAvC+B,GAuCrB,MAAM,KAAKT,KAAL,CAAWc,MAvCI;AAAA;;AAAA;;AA0CjC,OAAO,MAAMd,KAAK,GAAG,IAAID,KAAJ,EAAd","sourcesContent":["interface IQueue<T> {\n  enqueue: (index: number, item: T, array: T[]) => void;\n  dequeue: (index: number, item: T, array: T[]) => void;\n  getSize: () => number;\n  clear: () => void;\n}\n\nclass Queue implements IQueue<I> {\n  queue: any[] = [];\n  head = -1;\n  tail = -1;\n  currentIndex = 0;\n  private maxSize = 8;\n\n  enqueue = (index: number, item: string, array: string[]) => {\n    if (this.getSize() < this.maxSize) {\n      array.splice(index, 1, item);\n      if (this.head === -1) {\n        this.head++;\n      }\n      this.tail++;\n      this.currentIndex++;\n      this.queue = array;\n    } else {\n      throw new Error(\"Слишком много элементов\");\n    }\n  };\n\n  dequeue = (index: number, item: string, array: string[]): void => {\n    if (this.tail > this.head) {\n      array.splice(index, 1, item);\n      this.head++;\n    } else if (this.tail === this.head) {\n      array.splice(index, 1, item);\n      this.clear();\n    }\n    this.queue = array;\n  };\n\n  clear = (): void => {\n    this.queue = [];\n    this.head = -1;\n    this.tail = -1;\n    this.currentIndex = 0;\n  };\n\n  getSize = () => this.queue.length;\n}\n\nexport const queue = new Queue();\n"]},"metadata":{},"sourceType":"module"}