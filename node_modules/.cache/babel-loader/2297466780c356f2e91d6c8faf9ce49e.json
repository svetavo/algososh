{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/string/string.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { Button } from \"../ui/button/button\";\nimport styles from \"./string.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StringComponent = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [arr, setArr] = useState(null);\n\n  const expand = value => {\n    const newArr = Array.from(value);\n    quickSort(newArr); // setArr(Array.from(value));\n\n    setArr(newArr);\n    setIsOpen(true);\n  };\n\n  const delay = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const swap = (arr, a, b) => {\n    const temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n  };\n\n  const quickSort = arr => {\n    if (arr.length < 2) {\n      return;\n    }\n\n    const pivotIndex = Math.floor(arr.length / 2);\n    const pivot = a;\n    const less = [];\n    const more = [];\n\n    for (let i = 1; i < arr.length; i++) {\n      if (arr[i] <= pivot) {\n        less.push(arr[i]);\n      } else {\n        more.push(arr[i]);\n      }\n    }\n\n    console.log(less, pivot, more);\n    return [...quickSort(less), pivot, ...quickSort(more)];\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0440\\u043E\\u043A\\u0430\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\",\n          onClick: () => expand(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: arr === null || arr === void 0 ? void 0 : arr.map(item => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StringComponent, \"ZwsrpSMiL/mHEQ9RPuEq42gL2Rk=\");\n\n_c = StringComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StringComponent\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/string/string.tsx"],"names":["React","useState","SolutionLayout","Input","Circle","Button","styles","StringComponent","value","setValue","isOpen","setIsOpen","arr","setArr","expand","newArr","Array","from","quickSort","delay","ms","Promise","resolve","setTimeout","onChange","e","target","swap","a","b","temp","length","pivotIndex","Math","floor","pivot","less","more","i","push","console","log","container","input","result","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAe,IAAf,CAA9B;;AAEA,QAAMa,MAAM,GAAIN,KAAD,IAAmB;AAChC,UAAMO,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWT,KAAX,CAAf;AACAU,IAAAA,SAAS,CAACH,MAAD,CAAT,CAFgC,CAGhC;;AACAF,IAAAA,MAAM,CAACE,MAAD,CAAN;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAND;;AAQA,QAAMQ,KAAK,GAAIC,EAAD,IAAgB;AAC5B,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAP;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAIC,CAAD,IAAY;AAC3BhB,IAAAA,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASlB,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMmB,IAAI,GAAG,CAACf,GAAD,EAAagB,CAAb,EAAwBC,CAAxB,KAA4C;AACvD,UAAMC,IAAI,GAAGlB,GAAG,CAACgB,CAAD,CAAhB;AACAhB,IAAAA,GAAG,CAACgB,CAAD,CAAH,GAAShB,GAAG,CAACiB,CAAD,CAAZ;AACAjB,IAAAA,GAAG,CAACiB,CAAD,CAAH,GAASC,IAAT;AACD,GAJD;;AAMA,QAAMZ,SAAS,GAAIN,GAAD,IAAmB;AACnC,QAAIA,GAAG,CAACmB,MAAJ,GAAY,CAAhB,EAAmB;AACjB;AACD;;AAED,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWtB,GAAG,CAACmB,MAAJ,GAAY,CAAvB,CAAnB;AACA,UAAMI,KAAK,GAAEP,CAAb;AAEA,UAAMQ,IAAI,GAAE,EAAZ;AACA,UAAMC,IAAI,GAAG,EAAb;;AAEA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1B,GAAG,CAACmB,MAApB,EAA4BO,CAAC,EAA7B,EAAiC;AAC/B,UAAI1B,GAAG,CAAC0B,CAAD,CAAH,IAAUH,KAAd,EAAqB;AACnBC,QAAAA,IAAI,CAACG,IAAL,CAAU3B,GAAG,CAAC0B,CAAD,CAAb;AACD,OAFD,MAEO;AACLD,QAAAA,IAAI,CAACE,IAAL,CAAU3B,GAAG,CAAC0B,CAAD,CAAb;AACD;AACF;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkBD,KAAlB,EAAyBE,IAAzB;AACA,WAAO,CAAC,GAAGnB,SAAS,CAACkB,IAAD,CAAb,EAAqBD,KAArB,EAA4B,GAAGjB,SAAS,CAACmB,IAAD,CAAxC,CAAP;AACD,GArBD;;AAwBA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,sCAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAACoC,SAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEpC,MAAM,CAACqC,KAAvB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAEnB;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,8DAAb;AAA0B,UAAA,OAAO,EAAE,MAAMV,MAAM,CAACN,KAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBACGE,MAAM,gBACL;AAAK,UAAA,SAAS,EAAEJ,MAAM,CAACsC,MAAvB;AAAA,oBACGhC,GADH,aACGA,GADH,uBACGA,GAAG,CAAEiC,GAAL,CAAUC,IAAD,iBACR,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADK,GAMH;AAPN;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtEM;;GAAMvC,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { Button } from \"../ui/button/button\";\nimport styles from \"./string.module.css\";\nimport { ArrowUpIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nexport const StringComponent: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [arr, setArr] = useState<null | any[]>(null);\n\n  const expand = (value: string) => {\n    const newArr = Array.from(value)\n    quickSort(newArr)\n    // setArr(Array.from(value));\n    setArr(newArr);\n    setIsOpen(true);\n  };\n\n  const delay = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const onChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  const swap = (arr: any[], a: number, b: number): void => {\n    const temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n  };\n\n  const quickSort = (arr: any) : any=> {\n    if (arr.length <2) {\n      return\n    }\n\n    const pivotIndex = Math.floor(arr.length /2);\n    const pivot =a\n\n    const less =[]\n    const more = []\n\n    for(let i =1; i<arr.length; i++) {\n      if (arr[i] <= pivot) {\n        less.push(arr[i])\n      } else {\n        more.push(arr[i])\n      }\n    }\n\n    console.log(less, pivot, more)\n    return [...quickSort(less), pivot, ...quickSort(more)]\n  }\n\n\n  return (\n    <SolutionLayout title=\"Строка\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} />\n          <Button text=\"Развернуть\" onClick={() => expand(value)} />\n        </div>\n        <div>\n          {isOpen ? (\n            <div className={styles.result}>\n              {arr?.map((item: string) => (\n                <Circle letter={item} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}