{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/sorting-page/sorting-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"../ui/button/button\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./sorting.module.css\";\nimport { bubbleSort, selectionSort } from \"../../utils/sorting-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SortingPage = () => {\n  _s();\n\n  const UP = \"по возрастанию\";\n  const DOWN = \"по убыванию\";\n  const [method, setMethod] = useState(undefined);\n  const [randomArray, setRandomArray] = useState([]);\n  const [result, setResult] = useState([]); //random count\n\n  const getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }; //random array\n\n\n  const randomArr = () => {\n    const array = [];\n    const max = 100;\n    const count = getRandomInt(3, 17);\n\n    while (array.length < count) {\n      const r = Math.floor(Math.random() * max);\n\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n\n    setRandomArray(array);\n  };\n\n  const selection = array => {\n    selectionSort(array, UP);\n    setResult(array);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\\u0430\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.navigation,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.navigation,\n          children: [/*#__PURE__*/_jsxDEV(RadioInput, {\n            label: \"\\u0412\\u044B\\u0431\\u043E\\u0440\",\n            extraClass: styles.navigationItem,\n            onClick: () => setMethod(\"selection\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioInput, {\n            label: \"\\u041F\\u0443\\u0437\\u044B\\u0440\\u0451\\u043A\",\n            extraClass: styles.navigationItem,\n            onClick: () => setMethod(\"bubble\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u041F\\u043E \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430\\u043D\\u0438\\u044E\",\n            extraClass: styles.navigationItem,\n            onClick: method === \"selection\" ? () => selectionSort(randomArray, UP) : () => bubbleSort(randomArray, UP)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u041F\\u043E \\u0443\\u0431\\u044B\\u0432\\u0430\\u043D\\u0438\\u044E\",\n            extraClass: styles.navigationItem,\n            onClick: method === \"selection\" ? () => selectionSort(randomArray, DOWN) : () => bubbleSort(randomArray, DOWN)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\",\n          onClick: () => randomArr()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), result.length ? result.map((el, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SortingPage, \"tJxy7cR+i4MyBTqLecSkT0QLCZU=\");\n\n_c = SortingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/sorting-page/sorting-page.tsx"],"names":["React","useState","Button","RadioInput","SolutionLayout","styles","bubbleSort","selectionSort","SortingPage","UP","DOWN","method","setMethod","undefined","randomArray","setRandomArray","result","setResult","getRandomInt","min","max","Math","floor","random","randomArr","array","count","length","r","indexOf","push","selection","container","navigation","navigationItem","map","el","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"../ui/button/button\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./sorting.module.css\";\nimport { bubbleSort, selectionSort } from \"../../utils/sorting-utils\";\n\nexport const SortingPage: React.FC = (): JSX.Element => {\n  const UP = \"по возрастанию\";\n  const DOWN = \"по убыванию\";\n  const [method, setMethod] = useState<string | undefined>(undefined);\n  const [randomArray, setRandomArray] = useState<number[]>([]);\n  const [result, setResult] = useState([]);\n\n  //random count\n  const getRandomInt = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  //random array\n  const randomArr = (): void => {\n    const array = [];\n    const max = 100;\n    const count: number = getRandomInt(3, 17);\n    while (array.length < count) {\n      const r: number = Math.floor(Math.random() * max);\n      if (array.indexOf(r) === -1) {\n        array.push(r);\n      }\n    }\n    setRandomArray(array);\n  };\n\n  const selection = (array, ) =>{\n    selectionSort(array, UP)\n    setResult(array)\n  }\n\n  return (\n    <SolutionLayout title=\"Сортировка массива\">\n      <div className={styles.container}>\n        <div className={styles.navigation}>\n          <div className={styles.navigation}>\n            <RadioInput\n              label=\"Выбор\"\n              extraClass={styles.navigationItem}\n              onClick={() => setMethod(\"selection\")}\n            />\n            <RadioInput\n              label=\"Пузырёк\"\n              extraClass={styles.navigationItem}\n              onClick={() => setMethod(\"bubble\")}\n            />\n            <Button\n              text=\"По возрастанию\"\n              extraClass={styles.navigationItem}\n              onClick={\n                method === \"selection\"\n                  ? () => selectionSort(randomArray, UP)\n                  : () => bubbleSort(randomArray, UP)\n              }\n            />\n            <Button\n              text=\"По убыванию\"\n              extraClass={styles.navigationItem}\n              onClick={\n                method === \"selection\"\n                  ? () => selectionSort(randomArray, DOWN)\n                  : () => bubbleSort(randomArray, DOWN)\n              }\n            />\n          </div>\n          <Button text=\"Новый массив\" onClick={() => randomArr()} />\n        </div>\n        {result.length\n          ? result.map((el, index) => {\n              <div key={index}>\n                <div></div>\n                <p>{el}</p>\n              </div>;\n            })\n          : null}\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}