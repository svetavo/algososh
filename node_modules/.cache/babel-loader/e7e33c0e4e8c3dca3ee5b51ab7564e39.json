{"ast":null,"code":"import _objectSpread from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"placeholder\",\"extraClass\",\"type\",\"maxLength\",\"max\",\"isLimitText\",\"onChange\"];import React from\"react\";import styles from\"./input.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Input=function Input(_ref){var _ref$placeholder=_ref.placeholder,placeholder=_ref$placeholder===void 0?\"Введите текст\":_ref$placeholder,_ref$extraClass=_ref.extraClass,extraClass=_ref$extraClass===void 0?\"\":_ref$extraClass,_ref$type=_ref.type,type=_ref$type===void 0?\"text\":_ref$type,maxLength=_ref.maxLength,max=_ref.max,_ref$isLimitText=_ref.isLimitText,isLimitText=_ref$isLimitText===void 0?false:_ref$isLimitText,onChange=_ref.onChange,rest=_objectWithoutProperties(_ref,_excluded);var limitText=function limitText(_ref2){var maxLength=_ref2.maxLength,max=_ref2.max;if(type===\"text\"&&maxLength>=5){return\"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0443\\u043C \\u2014 \".concat(maxLength,\" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\");}else if(type===\"text\"&&maxLength<5){return\"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0443\\u043C \\u2014 \".concat(maxLength,\" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430\");}else{return\"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \\u2014 \".concat(max);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles.content,\" \").concat(extraClass),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"\".concat(styles.input,\" text text_type_input text_color_input\"),placeholder:placeholder,type:type,maxLength:maxLength,max:max,onChange:onChange},rest)),isLimitText&&/*#__PURE__*/_jsx(\"span\",{className:\"text text_type_input-lim text_color_input mt-2 ml-8 \".concat(styles.limit),children:limitText({maxLength:maxLength,max:max})})]});};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/ui/input/input.tsx"],"names":["React","styles","Input","placeholder","extraClass","type","maxLength","max","isLimitText","onChange","rest","limitText","content","input","limit"],"mappings":"kVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,C,wFAUA,MAAO,IAAMC,CAAAA,KAA2B,CAAG,QAA9BA,CAAAA,KAA8B,MASrC,2BARJC,WAQI,CARJA,WAQI,2BARU,eAQV,uCAPJC,UAOI,CAPJA,UAOI,0BAPS,EAOT,gCANJC,IAMI,CANJA,IAMI,oBANG,MAMH,WALJC,SAKI,MALJA,SAKI,CAJJC,GAII,MAJJA,GAII,uBAHJC,WAGI,CAHJA,WAGI,2BAHU,KAGV,kBAFJC,QAEI,MAFJA,QAEI,CADDC,IACC,0CACJ,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,OAAmC,IAAjCL,CAAAA,SAAiC,OAAjCA,SAAiC,CAAtBC,GAAsB,OAAtBA,GAAsB,CACnD,GAAIF,IAAI,GAAK,MAAT,EAAmBC,SAAS,EAAK,CAArC,CAAwC,CACtC,wEAAqBA,SAArB,sDACD,CAFD,IAEO,IAAID,IAAI,GAAK,MAAT,EAAmBC,SAAS,CAAI,CAApC,CAAuC,CAC5C,wEAAqBA,SAArB,gDACD,CAFM,IAEA,CACL,+HAA+BC,GAA/B,EACD,CACF,CARD,CASA,mBACE,aAAK,SAAS,WAAKN,MAAM,CAACW,OAAZ,aAAuBR,UAAvB,CAAd,wBACE,4BACE,SAAS,WAAKH,MAAM,CAACY,KAAZ,0CADX,CAEE,WAAW,CAAEV,WAFf,CAGE,IAAI,CAAEE,IAHR,CAIE,SAAS,CAAEC,SAJb,CAKE,GAAG,CAAEC,GALP,CAME,QAAQ,CAAEE,QANZ,EAOMC,IAPN,EADF,CAUGF,WAAW,eACV,aACE,SAAS,+DAAyDP,MAAM,CAACa,KAAhE,CADX,UAGGH,SAAS,CAAC,CAACL,SAAS,CAATA,SAAD,CAAYC,GAAG,CAAHA,GAAZ,CAAD,CAHZ,EAXJ,GADF,CAoBD,CAvCM","sourcesContent":["import React from \"react\";\nimport styles from \"./input.module.css\";\n\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\n  placeholder?: string;\n  extraClass?: string;\n  isLimitText?: boolean;\n  max?: number | undefined;\n  maxLength?: number | undefined;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  placeholder = \"Введите текст\",\n  extraClass = \"\",\n  type = \"text\",\n  maxLength,\n  max,\n  isLimitText = false,\n  onChange,\n  ...rest\n}) => {\n  const limitText = ({maxLength, max} : InputProps) => {\n    if (type === \"text\" && maxLength! >= 5) {\n      return `Максимум — ${maxLength} символов`;\n    } else if (type === \"text\" && maxLength! < 5) {\n      return `Максимум — ${maxLength} символа`;\n    } else {\n      return `Максимальное число — ${max}`;\n    }\n  };\n  return (\n    <div className={`${styles.content} ${extraClass}`}>\n      <input\n        className={`${styles.input} text text_type_input text_color_input`}\n        placeholder={placeholder}\n        type={type}\n        maxLength={maxLength}\n        max={max}\n        onChange={onChange}\n        {...rest}\n      />\n      {isLimitText && (\n        <span\n          className={`text text_type_input-lim text_color_input mt-2 ml-8 ${styles.limit}`}\n        >\n          {limitText({maxLength, max})}\n        </span>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}