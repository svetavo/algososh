{"ast":null,"code":"class Queue {\n  constructor() {\n    this.queue = [];\n    this.head = 0;\n    this.tail = 0;\n    this.currentIndex = 0;\n    this.maxSize = 7;\n\n    this.enqueue = (index, item, array) => {\n      if (this.getSize() < this.maxSize) {\n        array.splice(index, 1, item);\n        this.tail++;\n        this.currentIndex++;\n      } else {\n        throw new Error('Слишком много элементов');\n      }\n    };\n\n    this.dequeue = () => {\n      if (this.getSize()) {\n        this.queue.pop();\n      }\n    };\n\n    this.peak = () => {\n      if (this.getSize()) {\n        return this.queue[this.getSize() - 1];\n      }\n\n      return null;\n    };\n\n    this.clear = () => {\n      this.queue = [];\n    };\n\n    this.getSize = () => this.queue.length;\n\n    this.printStack = () => this.queue;\n\n    this.isFull = () => {\n      if (this.getSize() < this.maxSize) {\n        return false;\n      }\n\n      return true;\n    };\n  }\n\n}\n\nexport const queue = new Queue();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/queue_class.tsx"],"names":["Queue","queue","head","tail","currentIndex","maxSize","enqueue","index","item","array","getSize","splice","Error","dequeue","pop","peak","clear","length","printStack","isFull"],"mappings":"AAWE,MAAMA,KAAN,CAA8B;AAAA;AAAA,SAE5BC,KAF4B,GAEV,EAFU;AAAA,SAGpBC,IAHoB,GAGb,CAHa;AAAA,SAIpBC,IAJoB,GAIb,CAJa;AAAA,SAKpBC,YALoB,GAKL,CALK;AAAA,SAMpBC,OANoB,GAMV,CANU;;AAAA,SAQ5BC,OAR4B,GAQlB,CAACC,KAAD,EAAgBC,IAAhB,EAA8BC,KAA9B,KAAwC;AAChD,UAAI,KAAKC,OAAL,KAAiB,KAAKL,OAA1B,EAAmC;AACjCI,QAAAA,KAAK,CAACE,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBC,IAAvB;AACA,aAAKL,IAAL;AACA,aAAKC,YAAL;AACD,OAJD,MAIO;AACH,cAAM,IAAIQ,KAAJ,CAAU,yBAAV,CAAN;AACH;AACF,KAhB2B;;AAAA,SAkB5BC,OAlB4B,GAkBlB,MAAY;AACpB,UAAI,KAAKH,OAAL,EAAJ,EAAoB;AAClB,aAAKT,KAAL,CAAWa,GAAX;AACD;AACF,KAtB2B;;AAAA,SAwB5BC,IAxB4B,GAwBrB,MAAgB;AACrB,UAAI,KAAKL,OAAL,EAAJ,EAAoB;AAClB,eAAO,KAAKT,KAAL,CAAW,KAAKS,OAAL,KAAiB,CAA5B,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KA7B2B;;AAAA,SA+B5BM,KA/B4B,GA+BpB,MAAY;AAClB,WAAKf,KAAL,GAAa,EAAb;AACD,KAjC2B;;AAAA,SAmC5BS,OAnC4B,GAmClB,MAAM,KAAKT,KAAL,CAAWgB,MAnCC;;AAAA,SAqC5BC,UArC4B,GAqCf,MAAM,KAAKjB,KArCI;;AAAA,SAuC5BkB,MAvC4B,GAuCnB,MAAM;AACb,UAAI,KAAKT,OAAL,KAAiB,KAAKL,OAA1B,EAAmC;AACjC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KA5C2B;AAAA;;AAAA;;AA+C9B,OAAO,MAAMJ,KAAK,GAAG,IAAID,KAAJ,EAAd","sourcesContent":["\ninterface IQueue {\n    enqueue: (index: number, item: stringm) => void;\n    dequeue: () => void;\n    peak: () => number | null;\n    getSize: () => number;\n    printStack: () => number[];\n    clear: () => void;\n    isFull: () => boolean;\n  }\n  \n  class Queue implements IQueue {\n    \n    queue: string[] = [];\n    private head = 0;\n    private tail = 0;\n    private currentIndex = 0;\n    private maxSize = 7;\n  \n    enqueue = (index: number, item: string, array) => {\n      if (this.getSize() < this.maxSize) {\n        array.splice(index, 1, item);\n        this.tail++\n        this.currentIndex++\n      } else {\n          throw new Error('Слишком много элементов')\n      }\n    };\n  \n    dequeue = (): void => {\n      if (this.getSize()) {\n        this.queue.pop();\n      }\n    };\n  \n    peak = (): T | null => {\n      if (this.getSize()) {\n        return this.queue[this.getSize() - 1];\n      }\n      return null;\n    };\n  \n    clear = (): void => {\n      this.queue = [];\n    };\n  \n    getSize = () => this.queue.length;\n  \n    printStack = () => this.queue;\n  \n    isFull = () => {\n      if (this.getSize() < this.maxSize) {\n        return false;\n      }\n      return true;\n    };\n  }\n  \n  export const queue = new Queue<string>();\n  "]},"metadata":{},"sourceType":"module"}