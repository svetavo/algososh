{"ast":null,"code":"const swap = (arr, a, b) => {\n  const temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n}; // по возрастанию\n\n\nexport const bubbleSort = arr => {\n  for (let j = arr.length - 1; j > 0; j--) {\n    for (let i = 0; i < j; i++) {\n      if (arr[i] > arr[i + 1]) {\n        swap(arr, i, i + 1);\n      }\n    }\n  }\n\n  console.log(arr);\n  return arr;\n}; // по убыванию\n\nexport const selectionSort = arr => {\n  const {\n    length\n  } = arr;\n\n  for (let i = 0; i < length - 1; i++) {\n    let maxInd = i;\n\n    for (let j = i; j < length; j++) {\n      if (arr[maxInd] < arr[j]) {\n        maxInd = j;\n      }\n    }\n\n    if (i !== maxInd) {\n      swap(arr, i, maxInd);\n    }\n  }\n\n  console.log(arr);\n  return arr;\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/sorting-page/utils.tsx"],"names":["swap","arr","a","b","temp","bubbleSort","j","length","i","console","log","selectionSort","maxInd"],"mappings":"AAAA,MAAMA,IAAI,GAAG,CAACC,GAAD,EAAgBC,CAAhB,EAA2BC,CAA3B,KAA+C;AAC1D,QAAMC,IAAI,GAAGH,GAAG,CAACC,CAAD,CAAhB;AACAD,EAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACE,CAAD,CAAZ;AACAF,EAAAA,GAAG,CAACE,CAAD,CAAH,GAASC,IAAT;AACD,CAJD,C,CAMA;;;AACA,OAAO,MAAMC,UAAU,GAAIJ,GAAD,IAAqB;AAC7C,OAAK,IAAIK,CAAC,GAAGL,GAAG,CAACM,MAAJ,GAAa,CAA1B,EAA6BD,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACvC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AAC1B,UAAIP,GAAG,CAACO,CAAD,CAAH,GAASP,GAAG,CAACO,CAAC,GAAG,CAAL,CAAhB,EAAyB;AACvBR,QAAAA,IAAI,CAACC,GAAD,EAAMO,CAAN,EAASA,CAAC,GAAG,CAAb,CAAJ;AACD;AACF;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA,SAAOA,GAAP;AACD,CAVM,C,CAYP;;AACA,OAAO,MAAMU,aAAa,GAAIV,GAAD,IAAmB;AAC9C,QAAM;AAAEM,IAAAA;AAAF,MAAaN,GAAnB;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,GAAG,CAA7B,EAAgCC,CAAC,EAAjC,EAAqC;AACnC,QAAII,MAAM,GAAGJ,CAAb;;AACA,SAAK,IAAIF,CAAC,GAAGE,CAAb,EAAgBF,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC/B,UAAIL,GAAG,CAACW,MAAD,CAAH,GAAcX,GAAG,CAACK,CAAD,CAArB,EAA0B;AACxBM,QAAAA,MAAM,GAAGN,CAAT;AACD;AACF;;AACD,QAAIE,CAAC,KAAKI,MAAV,EAAkB;AAChBZ,MAAAA,IAAI,CAACC,GAAD,EAAMO,CAAN,EAASI,MAAT,CAAJ;AACD;AACF;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA,SAAOA,GAAP;AACD,CAfM","sourcesContent":["const swap = (arr: number[], a: number, b: number): void => {\n  const temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n};\n\n// по возрастанию\nexport const bubbleSort = (arr: number[], ) => {\n  for (let j = arr.length - 1; j > 0; j--) {\n    for (let i = 0; i < j; i++) {\n      if (arr[i] > arr[i + 1]) {\n        swap(arr, i, i + 1);\n      }\n    }\n  }\n  console.log(arr);\n  return arr;\n};\n\n// по убыванию\nexport const selectionSort = (arr: number[]) => {\n  const { length } = arr;\n  for (let i = 0; i < length - 1; i++) {\n    let maxInd = i;\n    for (let j = i; j < length; j++) {\n      if (arr[maxInd] < arr[j]) {\n        maxInd = j;\n      }\n    }\n    if (i !== maxInd) {\n      swap(arr, i, maxInd);\n    }\n  }\n  console.log(arr)\n  return arr;\n};\n"]},"metadata":{},"sourceType":"module"}