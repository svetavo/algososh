{"ast":null,"code":"export const addHead = _ref => {\n  let {\n    value,\n    setIsLoader,\n    setHead,\n    setIsChanging,\n    setTail\n  } = _ref;\n  setIsLoader(true);\n  setIsDisabled(true);\n  setHead(-1);\n  setIsChanging(true);\n  list.unshift(value);\n  setIsChanging(false);\n  setHead(0);\n  setTail(list.length - 1);\n  setIsLoader(false);\n};\nexport const addTail = _ref2 => {\n  let {\n    list,\n    value,\n    setIsLoader,\n    setTail\n  } = _ref2;\n\n  if (value) {\n    setIsLoader(true);\n    list.push(value);\n    setTail(list.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n\n  setIsLoader(false);\n};\nexport const removeHead = _ref3 => {\n  let {\n    list,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref3;\n  setIsLoader(true);\n  list.shift();\n  setHead(0);\n  setTail(list.length - 1);\n  setIsLoader(false);\n};\nexport const removeTail = _ref4 => {\n  let {\n    list,\n    setIsLoader,\n    setTail\n  } = _ref4;\n  setIsLoader(true);\n  list.pop();\n  setTail(list.length - 1);\n  setIsLoader(false);\n};\nexport const addIndex = _ref5 => {\n  let {\n    list,\n    value,\n    index,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref5;\n\n  if (value && index) {\n    list.splice(Number(index), 0, value);\n    setIsLoader(false);\n    setHead(0);\n    setTail(list.length - 1);\n  } else {\n    alert(\"Введите индекс и число\");\n  }\n};\nexport const removeIndex = _ref6 => {\n  let {\n    list,\n    index,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref6;\n\n  if (index) {\n    setIsLoader(true);\n    list.splice(Number(index), 1);\n    setIsLoader(false);\n    setHead(0);\n    setTail(list.length - 1);\n  } else {\n    alert(\"Введите индекс\");\n  }\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["addHead","value","setIsLoader","setHead","setIsChanging","setTail","setIsDisabled","list","unshift","length","addTail","push","alert","removeHead","shift","removeTail","pop","addIndex","index","splice","Number","removeIndex"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\n\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  list?: string[];\n  value?: string;\n  index?: string;\n  setHead?: Dispatcher<number>;\n  setIsLoader?: Dispatcher<boolean>;\n  setIsChanging?: Dispatcher<boolean>;\n  setTail?: Dispatcher<number>;\n}\n\nexport const addHead = ({\n  value,\n  setIsLoader,\n  setHead,\n  setIsChanging,\n  setTail,\n}: IProps) => {\n    setIsLoader!(true);\n    setIsDisabled(true);\n\n    setHead!(-1);\n    setIsChanging!(true);\n    list!.unshift(value);\n    setIsChanging!(false);\n    setHead!(0);\n    setTail!(list!.length - 1);\n  setIsLoader!(false);\n};\n\nexport const addTail = ({ list, value, setIsLoader, setTail }: IProps) => {\n  if (value) {\n    setIsLoader!(true);\n    list!.push(value);\n    setTail!(list!.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n  setIsLoader!(false);\n};\n\nexport const removeHead = ({ list, setIsLoader, setHead, setTail }: IProps) => {\n  setIsLoader!(true);\n  list!.shift();\n  setHead!(0);\n  setTail!(list!.length -1)\n  setIsLoader!(false);\n};\n\nexport const removeTail = ({ list, setIsLoader, setTail }: IProps) => {\n  setIsLoader!(true);\n  list!.pop();\n  setTail!(list!.length - 1);\n  setIsLoader!(false);\n};\n\nexport const addIndex = ({ list, value, index, setIsLoader, setHead, setTail }: IProps) => {\n  if (value && index) {\n    list!.splice(Number(index), 0, value);\n    setIsLoader!(false);\n    setHead!(0)\n    setTail!(list!.length-1)\n  } else {\n    alert(\"Введите индекс и число\");\n  }\n};\n\nexport const removeIndex = ({ list, index, setIsLoader, setHead, setTail }: IProps) => {\n  if (index) {\n    setIsLoader!(true);\n    list!.splice(Number(index), 1);\n    setIsLoader!(false);\n    setHead!(0)\n    setTail!(list!.length-1)\n  } else {\n    alert(\"Введите индекс\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}