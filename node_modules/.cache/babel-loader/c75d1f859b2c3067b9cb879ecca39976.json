{"ast":null,"code":"import _asyncToGenerator from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/svetavo/dev/algososh/node_modules/@babel/runtime/regenerator/index.js\";import{delay}from\"./utils\";export var fibonacci=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var value,setResult,setIsLoader,setValue,valueNum,arr,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:value=_ref.value,setResult=_ref.setResult,setIsLoader=_ref.setIsLoader,setValue=_ref.setValue;valueNum=Number(value);if(!(valueNum>=1&&valueNum<=19)){_context.next=26;break;}arr=[0];_context.next=6;return delay(500);case 6:setResult(arr);_context.next=9;return delay(500);case 9:arr.push(1);_context.next=12;return delay(500);case 12:setResult(arr);i=2;case 14:if(!(i<=valueNum)){_context.next=22;break;}_context.next=17;return delay(500);case 17:arr[i]=arr[i-2]+arr[i-1];setResult(arr.slice(0,i+1));case 19:i++;_context.next=14;break;case 22:setIsLoader(false);setValue(\"\");_context.next=28;break;case 26:setIsLoader(false);return _context.abrupt(\"return\",null);case 28:case\"end\":return _context.stop();}}},_callee);}));return function fibonacci(_x){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/fibonacci-utils.ts"],"names":["delay","fibonacci","value","setResult","setIsLoader","setValue","valueNum","Number","arr","push","i","slice"],"mappings":"qOAAA,OAASA,KAAT,KAAsB,SAAtB,CAYA,MAAO,IAAMC,CAAAA,SAAS,2FAAG,+LACvBC,KADuB,MACvBA,KADuB,CAEvBC,SAFuB,MAEvBA,SAFuB,CAGvBC,WAHuB,MAGvBA,WAHuB,CAIvBC,QAJuB,MAIvBA,QAJuB,CAMjBC,QANiB,CAMNC,MAAM,CAACL,KAAD,CANA,MAOnBI,QAAQ,EAAI,CAAZ,EAAiBA,QAAQ,EAAI,EAPV,2BAQjBE,GARiB,CAQD,CAAC,CAAD,CARC,uBASfR,CAAAA,KAAK,CAAC,GAAD,CATU,QAUrBG,SAAS,CAACK,GAAD,CAAT,CAVqB,sBAWfR,CAAAA,KAAK,CAAC,GAAD,CAXU,QAYrBQ,GAAG,CAACC,IAAJ,CAAS,CAAT,EAZqB,uBAafT,CAAAA,KAAK,CAAC,GAAD,CAbU,SAcrBG,SAAS,CAACK,GAAD,CAAT,CACSE,CAfY,CAeR,CAfQ,cAeLA,CAAC,EAAIJ,QAfA,kDAgBbN,CAAAA,KAAK,CAAC,GAAD,CAhBQ,SAiBnBQ,GAAG,CAACE,CAAD,CAAH,CAASF,GAAG,CAACE,CAAC,CAAG,CAAL,CAAH,CAAaF,GAAG,CAACE,CAAC,CAAG,CAAL,CAAzB,CACAP,SAAS,CAACK,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAaD,CAAC,CAAG,CAAjB,CAAD,CAAT,CAlBmB,QAeUA,CAAC,EAfX,gCAoBrBN,WAAW,CAAC,KAAD,CAAX,CACAC,QAAQ,CAAC,EAAD,CAAR,CArBqB,+BAuBrBD,WAAW,CAAC,KAAD,CAAX,CAvBqB,gCAwBd,IAxBc,yDAAH,kBAATH,CAAAA,SAAS,6CAAf","sourcesContent":["import { delay } from \"./utils\";\nimport { Dispatch, SetStateAction } from \"react\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  value: string;\n  setResult: Dispatcher<number[] | null>;\n  setIsLoader: Dispatcher<boolean>;\n  setValue: Dispatcher<string>;\n}\n\nexport const fibonacci = async ({\n  value,\n  setResult,\n  setIsLoader,\n  setValue,\n}: IProps) => {\n  const valueNum = Number(value);\n  if (valueNum >= 1 && valueNum <= 19) {\n    let arr: number[] = [0];\n    await delay(500);\n    setResult(arr);\n    await delay(500);\n    arr.push(1);\n    await delay(500);\n    setResult(arr);\n    for (let i = 2; i <= valueNum; i++) {\n      await delay(500);\n      arr[i] = arr[i - 2] + arr[i - 1];\n      setResult(arr.slice(0, i + 1));\n    }\n    setIsLoader(false);\n    setValue(\"\");\n  } else {\n    setIsLoader(false);\n    return null;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}