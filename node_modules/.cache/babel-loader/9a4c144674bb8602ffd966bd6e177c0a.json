{"ast":null,"code":"export const addHead = _ref => {\n  let {\n    array,\n    item,\n    setIsLoader,\n    setHead,\n    setIsChanging,\n    setTail\n  } = _ref;\n\n  if (item) {\n    setIsLoader(true);\n    setHead(-1);\n    setIsChanging(true);\n    array.unshift(item);\n    setIsChanging(false);\n    setHead(0);\n    setTail(array.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["addHead","array","item","setIsLoader","setHead","setIsChanging","setTail","unshift","length","alert"],"mappings":"AAaA,OAAO,MAAMA,OAAkC,GAAG,QAOpC;AAAA,MAPqC;AACjDC,IAAAA,KADiD;AAEjDC,IAAAA,IAFiD;AAGjDC,IAAAA,WAHiD;AAIjDC,IAAAA,OAJiD;AAKjDC,IAAAA,aALiD;AAMjDC,IAAAA;AANiD,GAOrC;;AACZ,MAAIJ,IAAJ,EAAU;AACRC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,IAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACAC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,IAAAA,KAAK,CAACM,OAAN,CAAcL,IAAd;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,IAAAA,OAAO,CAACL,KAAK,CAACO,MAAN,GAAe,CAAhB,CAAP;AACD,GARD,MAQO;AACLC,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AACDN,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CApBM","sourcesContent":["import { Dispatch, SetStateAction, FunctionComponent } from \"react\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  array: any[];\n  item: string;\n  setHead: Dispatcher<number | null>;\n  setIsLoader: Dispatcher<boolean>;\n  setIsChanging: Dispatcher<boolean>;\n  setTail: Dispatcher<number>;\n}\n\nexport const addHead: FunctionComponent<IProps> = ({\n  array,\n  item,\n  setIsLoader,\n  setHead,\n  setIsChanging,\n  setTail,\n}: IProps) => {\n  if (item) {\n    setIsLoader(true);\n    setHead(-1);\n    setIsChanging(true);\n    array.unshift(item);\n    setIsChanging(false);\n    setHead(0);\n    setTail(array.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n  setIsLoader(false);\n};\n"]},"metadata":{},"sourceType":"module"}