{"ast":null,"code":"import { list } from \"../components/list-page/List\";\nimport { ElementStates } from \"../types/element-states\";\nexport const addHead = _ref => {\n  let {\n    array,\n    value,\n    setIsLoader,\n    setIsDisabled,\n    setHead,\n    setIsChanging,\n    setTail,\n    setArray\n  } = _ref;\n  setIsLoader(true);\n  setIsDisabled(true);\n  setIsChanging(true);\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  list.unshift(newEl, array);\n  setArray(list.print());\n  setIsChanging(false);\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n};\nexport const addTail = _ref2 => {\n  let {\n    array,\n    value,\n    setIsLoader,\n    setArray,\n    setHead,\n    setIsChanging,\n    setTail,\n    setIsDisabled\n  } = _ref2;\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  list.push(newEl, array);\n  setArray(list.print());\n  setIsChanging(false);\n  setHead(list.head);\n  setTail(list.tail);\n  setIsLoader(false);\n  setIsDisabled(false);\n};\nexport const removeHead = _ref3 => {\n  let {\n    array,\n    setIsLoader,\n    setArray,\n    setIsDisabled,\n    setHead,\n    setTail\n  } = _ref3;\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.shift(array);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n};\nexport const removeTail = _ref4 => {\n  let {\n    array,\n    setIsLoader,\n    setArray,\n    setIsDisabled,\n    setHead,\n    setTail\n  } = _ref4;\n  setIsLoader(true);\n  setIsDisabled(true);\n  list.pop(array);\n  setArray(list.print());\n  setHead(list.head);\n  setTail(list.tail);\n  setIsDisabled(false);\n  setIsLoader(false);\n};\nexport const addIndex = _ref5 => {\n  let {\n    array,\n    value,\n    index,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref5;\n  setIsLoader(true);\n  setIsDisabled(true);\n  const newEl = {\n    number: value,\n    state: ElementStates.Default\n  };\n  list.splice(index, newEL, array);\n  setIsLoader(false);\n  setHead(0);\n  setTail(list.length - 1);\n};\nexport const removeIndex = _ref6 => {\n  let {\n    list,\n    index,\n    setIsLoader,\n    setHead,\n    setTail\n  } = _ref6;\n\n  if (index) {\n    setIsLoader(true);\n    list.splice(Number(index), 1);\n    setIsLoader(false);\n    setHead(0);\n    setTail(list.length - 1);\n  } else {\n    alert(\"Введите индекс\");\n  }\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["list","ElementStates","addHead","array","value","setIsLoader","setIsDisabled","setHead","setIsChanging","setTail","setArray","newEl","number","state","Default","unshift","print","head","tail","addTail","push","removeHead","shift","removeTail","pop","addIndex","index","splice","newEL","length","removeIndex","Number","alert"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { list } from \"../components/list-page/List\";\nimport { IArrEl } from \"../utils/utils\";\nimport { ElementStates } from \"../types/element-states\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps<T> {\n  array?: T[];\n  value?: number;\n  index?: number;\n  setArray?: Dispatcher<T[]>;\n  setHead?: Dispatcher<number>;\n  setIsLoader?: Dispatcher<boolean>;\n  setIsDisabled?: Dispatcher<boolean>;\n  setIsChanging?: Dispatcher<boolean>;\n  setTail?: Dispatcher<number>;\n}\n\nexport const addHead = ({\n  array,\n  value,\n  setIsLoader,\n  setIsDisabled,\n  setHead,\n  setIsChanging,\n  setTail,\n  setArray,\n}: IProps<IArrEl>) => {\n  setIsLoader!(true);\n  setIsDisabled!(true);\n  setIsChanging!(true);\n  const newEl = { number: value, state: ElementStates.Default };\n  list.unshift(newEl, array!);\n  setArray!(list.print());\n  setIsChanging!(false);\n  setHead!(list.head);\n  setTail!(list.tail);\n  setIsLoader!(false);\n  setIsDisabled!(false);\n};\n\nexport const addTail = ({ array, value, setIsLoader, setArray, setHead, setIsChanging, setTail, setIsDisabled }: IProps<IArrEl>) => {\n  setIsLoader!(true);\n  setIsDisabled!(true);\n  const newEl = { number: value, state: ElementStates.Default };\n  list.push(newEl, array!);\n  setArray!(list.print());\n  setIsChanging!(false);\n  setHead!(list.head);\n  setTail!(list.tail);\n  setIsLoader!(false);\n  setIsDisabled!(false);\n};\n\nexport const removeHead = ({ array, setIsLoader, setArray, setIsDisabled, setHead, setTail }: IProps<IArrEl>) => {\n  setIsLoader!(true);\n  setIsDisabled!(true);\n  list.shift(array!);\n  setArray!(list.print());\n  setHead!(list.head);\n  setTail!(list.tail);\n  setIsDisabled!(false);\n  setIsLoader!(false);\n};\n\nexport const removeTail = ({ array, setIsLoader, setArray, setIsDisabled, setHead, setTail }: IProps<IArrEl>) => {\n  setIsLoader!(true);\n  setIsDisabled!(true);\n  list.pop(array!);\n  setArray!(list.print());\n  setHead!(list.head);\n  setTail!(list.tail);\n  setIsDisabled!(false);\n  setIsLoader!(false);\n};\n\nexport const addIndex = ({\n  array,\n  value,\n  index,\n  setIsLoader,\n  setHead,\n  setTail,\n}: IProps<IArrEl>) => {\n  setIsLoader!(true);\n  setIsDisabled!(true);\n  const newEl = { number: value, state: ElementStates.Default };\n    list.splice(index!, newEL!, array!);\n    setIsLoader!(false);\n    setHead!(0);\n    setTail!(list!.length - 1);\n};\n\nexport const removeIndex = ({\n  list,\n  index,\n  setIsLoader,\n  setHead,\n  setTail,\n}: IProps) => {\n  if (index) {\n    setIsLoader!(true);\n    list!.splice(Number(index), 1);\n    setIsLoader!(false);\n    setHead!(0);\n    setTail!(list!.length - 1);\n  } else {\n    alert(\"Введите индекс\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}