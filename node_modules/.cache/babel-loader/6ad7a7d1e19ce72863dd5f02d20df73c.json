{"ast":null,"code":"class Queue {\n  constructor() {\n    this.container = [];\n    this.head = 0;\n    this.tail = 0;\n    this.curre = void 0;\n    this.maxSize = 7;\n\n    this.enqueue = (index, item) => {\n      if (this.getSize() < this.maxSize) {\n        this.container.splice(index, 1, item);\n        this.tail++;\n      }\n    };\n\n    this.dequeue = () => {\n      if (this.getSize()) {\n        this.container.pop();\n      }\n    };\n\n    this.peak = () => {\n      if (this.getSize()) {\n        return this.container[this.getSize() - 1];\n      }\n\n      return null;\n    };\n\n    this.clear = () => {\n      this.container = [];\n    };\n\n    this.getSize = () => this.container.length;\n\n    this.printStack = () => this.container;\n\n    this.isFull = () => {\n      if (this.getSize() < this.maxSize) {\n        return false;\n      }\n\n      return true;\n    };\n  }\n\n}\n\nexport const queue = new Queue();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/queue_class.tsx"],"names":["Queue","container","head","tail","curre","maxSize","enqueue","index","item","getSize","splice","dequeue","pop","peak","clear","length","printStack","isFull","queue"],"mappings":"AAWE,MAAMA,KAAN,CAA8B;AAAA;AAAA,SAEpBC,SAFoB,GAEE,EAFF;AAAA,SAGpBC,IAHoB,GAGb,CAHa;AAAA,SAIpBC,IAJoB,GAIb,CAJa;AAAA,SAKpBC,KALoB;AAAA,SAM5BC,OAN4B,GAMlB,CANkB;;AAAA,SAQ5BC,OAR4B,GAQlB,CAACC,KAAD,EAAgBC,IAAhB,KAAiC;AACzC,UAAI,KAAKC,OAAL,KAAiB,KAAKJ,OAA1B,EAAmC;AACjC,aAAKJ,SAAL,CAAeS,MAAf,CAAsBH,KAAtB,EAA6B,CAA7B,EAAgCC,IAAhC;AACA,aAAKL,IAAL;AACD;AACF,KAb2B;;AAAA,SAe5BQ,OAf4B,GAelB,MAAY;AACpB,UAAI,KAAKF,OAAL,EAAJ,EAAoB;AAClB,aAAKR,SAAL,CAAeW,GAAf;AACD;AACF,KAnB2B;;AAAA,SAqB5BC,IArB4B,GAqBrB,MAAgB;AACrB,UAAI,KAAKJ,OAAL,EAAJ,EAAoB;AAClB,eAAO,KAAKR,SAAL,CAAe,KAAKQ,OAAL,KAAiB,CAAhC,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KA1B2B;;AAAA,SA4B5BK,KA5B4B,GA4BpB,MAAY;AAClB,WAAKb,SAAL,GAAiB,EAAjB;AACD,KA9B2B;;AAAA,SAgC5BQ,OAhC4B,GAgClB,MAAM,KAAKR,SAAL,CAAec,MAhCH;;AAAA,SAkC5BC,UAlC4B,GAkCf,MAAM,KAAKf,SAlCI;;AAAA,SAoC5BgB,MApC4B,GAoCnB,MAAM;AACb,UAAI,KAAKR,OAAL,KAAiB,KAAKJ,OAA1B,EAAmC;AACjC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAzC2B;AAAA;;AAAA;;AA4C9B,OAAO,MAAMa,KAAK,GAAG,IAAIlB,KAAJ,EAAd","sourcesContent":["\ninterface IQueue {\n    enqueue: (index: number, item: number) => void;\n    dequeue: () => void;\n    peak: () => number | null;\n    getSize: () => number;\n    printStack: () => number[];\n    clear: () => void;\n    isFull: () => boolean;\n  }\n  \n  class Queue implements IQueue {\n    \n    private container: number[] = [];\n    private head = 0;\n    private tail = 0;\n    private curre\n    maxSize = 7;\n  \n    enqueue = (index: number, item: number) => {\n      if (this.getSize() < this.maxSize) {\n        this.container.splice(index, 1, item);\n        this.tail++\n      }\n    };\n  \n    dequeue = (): void => {\n      if (this.getSize()) {\n        this.container.pop();\n      }\n    };\n  \n    peak = (): T | null => {\n      if (this.getSize()) {\n        return this.container[this.getSize() - 1];\n      }\n      return null;\n    };\n  \n    clear = (): void => {\n      this.container = [];\n    };\n  \n    getSize = () => this.container.length;\n  \n    printStack = () => this.container;\n  \n    isFull = () => {\n      if (this.getSize() < this.maxSize) {\n        return false;\n      }\n      return true;\n    };\n  }\n  \n  export const queue = new Queue<string>();\n  "]},"metadata":{},"sourceType":"module"}