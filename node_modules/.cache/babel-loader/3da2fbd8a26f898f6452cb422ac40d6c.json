{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/fibonacci-page/fibonacci-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./fibonacci.module.css\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { delay } from \"../../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FibonacciPage = () => {\n  _s();\n\n  const [value, setValue] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  const [result, setResult] = useState(null);\n  const [isLoadin, setIsLoading] = useState(false);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onClick = value => {\n    setResult(null);\n    setIsLoading(true);\n    fibonacci(value);\n    setIsOpen(true);\n  };\n\n  const fibonacci = async n => {\n    if (n >= 1 && n <= 19) {\n      let arr = [0, 1];\n\n      for (let i = 2; i <= n; i++) {\n        arr[i] = arr[i - 2] + arr[i - 1];\n        await delay(1000);\n        setResult(arr.slice(0, i + 1));\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u0424\\u0438\\u0431\\u043E\\u043D\\u0430\\u0447\\u0447\\u0438\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: onChange,\n          type: \"number\",\n          min: \"1\",\n          max: \"19\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\",\n          onClick: () => onClick(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: result !== null && result !== void 0 && result.length ? result.map((item, index) => /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item,\n            extraClass: styles.item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FibonacciPage, \"uC9Beez6xaozplcj85C4EW4ayeo=\");\n\n_c = FibonacciPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FibonacciPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/fibonacci-page/fibonacci-page.tsx"],"names":["React","useState","SolutionLayout","styles","Input","Button","Circle","delay","FibonacciPage","value","setValue","isOpen","setIsOpen","result","setResult","isLoadin","setIsLoading","onChange","e","target","onClick","fibonacci","n","arr","i","slice","container","input","length","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./fibonacci.module.css\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { delay } from \"../../utils/utils\";\n\nexport const FibonacciPage: React.FC = () => {\n  const [value, setValue] = useState<any>();\n  const [isOpen, setIsOpen] = useState(false);\n  const [result, setResult] = useState<null | any[]>(null);\n  const [isLoadin, setIsLoading] = useState<boolean>(false);\n\n  const onChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  const onClick = (value: number) => {\n    setResult(null);\n    setIsLoading(true);\n    fibonacci(value);\n    setIsOpen(true);\n  };\n\n  const fibonacci = async (n: number) => {\n    if (n >= 1 && n <= 19) {\n      let arr = [0, 1];\n      for (let i = 2; i <= n; i++) {\n        arr[i] = arr[i - 2] + arr[i - 1];\n        await delay(1000);\n        setResult(arr.slice(0, i + 1));\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <SolutionLayout title=\"Последовательность Фибоначчи\">\n      <div className={styles.container}>\n        <div className={styles.input}>\n          <Input onChange={onChange} type=\"number\" min=\"1\" max=\"19\" step=\"1\" />\n          <Button text=\"Рассчитать\" onClick={() => onClick(value)} />\n        </div>\n        <div>\n          {isOpen ? (\n            <div className={styles.result}>\n              {result?.length\n                ? result.map((item, index) => (\n                    <Circle\n                      letter={item}\n                      key={index}\n                      extraClass={styles.item}\n                    />\n                  ))\n                : null}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}