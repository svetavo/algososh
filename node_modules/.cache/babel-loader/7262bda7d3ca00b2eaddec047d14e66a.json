{"ast":null,"code":"class List {\n  constructor() {\n    this.list = [];\n    this.head = -1;\n    this.tail = -1;\n    this.currentIndex = 0;\n\n    this.push = (item, array) => {\n      array.push(item);\n      this.tail = this.getSize() - 1;\n      this.list = array;\n    };\n\n    this.pop = array => {\n      array.pop();\n      this.list = array;\n      this.head = 0;\n      this.tail = this.getSize() - 1;\n    };\n\n    this.shift = array => {\n      array.shift();\n      this.list = array;\n      this.head = 0;\n      this.tail = this.getSize() - 1;\n    };\n\n    this.unshift = (item, array) => {\n      array.unshift(item);\n      this.list = array;\n      this.head = 0;\n      this.tail = this.getSize() - 1;\n    };\n\n    this.print = () => this.list;\n\n    this.addInd = (index, item, array) => {\n      array.splice(index, 0, item);\n      this.list = array;\n      this.head = 0;\n      this.tail = this.getSize() - 1;\n    };\n\n    this.removeInd = (index, array) => {\n      array.splice(index, 1);\n      this.list = array;\n      this.head = 0;\n      this.tail = this.getSize() - 1;\n    };\n\n    this.getSize = () => this.list.length;\n  }\n\n}\n\nexport const list = new List();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/list-page/List.tsx"],"names":["List","list","head","tail","currentIndex","push","item","array","getSize","pop","shift","unshift","print","addInd","index","splice","removeInd","length"],"mappings":"AAcA,MAAMA,IAAN,CAA4C;AAAA;AAAA,SAC1CC,IAD0C,GAC5B,EAD4B;AAAA,SAE1CC,IAF0C,GAEnC,CAAC,CAFkC;AAAA,SAG1CC,IAH0C,GAGnC,CAAC,CAHkC;AAAA,SAI1CC,YAJ0C,GAI3B,CAJ2B;;AAAA,SAM1CC,IAN0C,GAMnC,CAACC,IAAD,EAAeC,KAAf,KAAyC;AAC9CA,MAAAA,KAAK,CAACF,IAAN,CAAWC,IAAX;AACA,WAAKH,IAAL,GAAY,KAAKK,OAAL,KAAiB,CAA7B;AACA,WAAKP,IAAL,GAAYM,KAAZ;AACD,KAVyC;;AAAA,SAY1CE,GAZ0C,GAYnCF,KAAD,IAA2B;AAC/BA,MAAAA,KAAK,CAACE,GAAN;AACA,WAAKR,IAAL,GAAYM,KAAZ;AACA,WAAKL,IAAL,GAAY,CAAZ;AACA,WAAKC,IAAL,GAAY,KAAKK,OAAL,KAAiB,CAA7B;AACD,KAjByC;;AAAA,SAmB1CE,KAnB0C,GAmBjCH,KAAD,IAAqB;AAC3BA,MAAAA,KAAK,CAACG,KAAN;AACA,WAAKT,IAAL,GAAYM,KAAZ;AACA,WAAKL,IAAL,GAAY,CAAZ;AACA,WAAKC,IAAL,GAAY,KAAKK,OAAL,KAAiB,CAA7B;AACD,KAxByC;;AAAA,SA0B1CG,OA1B0C,GA0BhC,CAACL,IAAD,EAAeC,KAAf,KAAmC;AAC3CA,MAAAA,KAAK,CAACI,OAAN,CAAcL,IAAd;AACA,WAAKL,IAAL,GAAYM,KAAZ;AACA,WAAKL,IAAL,GAAY,CAAZ;AACA,WAAKC,IAAL,GAAY,KAAKK,OAAL,KAAiB,CAA7B;AACD,KA/ByC;;AAAA,SAiC1CI,KAjC0C,GAiClC,MAAM,KAAKX,IAjCuB;;AAAA,SAmC1CY,MAnC0C,GAmCjC,CAACC,KAAD,EAAgBR,IAAhB,EAA8BC,KAA9B,KAAkD;AACzDA,MAAAA,KAAK,CAACQ,MAAN,CAAaD,KAAb,EAAoB,CAApB,EAAuBR,IAAvB;AACA,WAAKL,IAAL,GAAYM,KAAZ;AACA,WAAKL,IAAL,GAAY,CAAZ;AACA,WAAKC,IAAL,GAAY,KAAKK,OAAL,KAAiB,CAA7B;AACD,KAxCyC;;AAAA,SA2C1CQ,SA3C0C,GA2C9B,CAACF,KAAD,EAAgBP,KAAhB,KAAoC;AAC9CA,MAAAA,KAAK,CAACQ,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACA,WAAKb,IAAL,GAAYM,KAAZ;AACA,WAAKL,IAAL,GAAY,CAAZ;AACA,WAAKC,IAAL,GAAY,KAAKK,OAAL,KAAiB,CAA7B;AACD,KAhDyC;;AAAA,SAkD1CA,OAlD0C,GAkDhC,MAAM,KAAKP,IAAL,CAAUgB,MAlDgB;AAAA;;AAAA;;AAqD5C,OAAO,MAAMhB,IAAI,GAAG,IAAID,IAAJ,EAAb","sourcesContent":["import { ElementStates } from \"../../types/element-states\";\nimport { IArrEl } from \"../../utils/utils\";\n\ninterface IList<T> {\n  list: T[];\n  push: (item: T, array: T[]) => void;\n  pop: (array: T[]) => void;\n  shift: (array: T[]) => void;\n  unshift: (item: T, array: T[]) => void;\n  addInd: (index: number, item: T, array: T[]) => void;\n  removeInd: (index: number, array: T[]) => void;\n  getSize: () => number;\n}\n\nclass List<IArrEl> implements IList<IArrEl> {\n  list: any[] = [];\n  head = -1;\n  tail = -1;\n  currentIndex = 0;\n\n  push = (item: IArrEl, array: IArrEl[]): void => {\n    array.push(item);\n    this.tail = this.getSize() - 1;\n    this.list = array;\n  };\n\n  pop = (array: IArrEl[]): void => {\n    array.pop();\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  shift = (array: IArrEl[]) => {\n    array.shift();\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  unshift = (item: IArrEl, array: IArrEl[]) => {\n    array.unshift(item);\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  print = () => this.list;\n\n  addInd = (index: number, item: IArrEl, array: IArrEl[]) => {\n    array.splice(index, 0, item);\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n  \n\n  removeInd = (index: number, array: IArrEl[]) => {\n    array.splice(index, 1);\n    this.list = array;\n    this.head = 0;\n    this.tail = this.getSize() - 1;\n  };\n\n  getSize = () => this.list.length;\n\n}\nexport const list = new List();\n"]},"metadata":{},"sourceType":"module"}