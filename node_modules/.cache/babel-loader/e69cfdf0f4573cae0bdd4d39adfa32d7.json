{"ast":null,"code":"class Queue {\n  constructor() {\n    this.queue = [];\n    this.head = 0;\n    this.tail = -1;\n    this.currentIndex = 0;\n    this.maxSize = 8;\n\n    this.enqueue = (index, item, array) => {\n      if (this.getSize() < this.maxSize) {\n        array.splice(index, 1, item);\n        this.tail++;\n        this.currentIndex++;\n        this.queue = array;\n      } else {\n        throw new Error(\"Слишком много элементов\");\n      }\n    };\n\n    this.dequeue = (index, item, array, empt) => {\n      if (this.tail > this.head) {\n        array.splice(index, 1, item);\n        this.head++;\n      } else {\n        this.head = 0;\n      }\n\n      this.queue = array;\n    };\n\n    this.peak = () => {\n      if (this.getSize()) {\n        return this.queue[this.getSize() - 1];\n      }\n\n      return null;\n    };\n\n    this.clear = () => {\n      this.queue = [];\n    };\n\n    this.getSize = () => this.queue.length;\n\n    this.printStack = () => this.queue;\n\n    this.isFull = () => {\n      if (this.getSize() < this.maxSize) {\n        return false;\n      }\n\n      return true;\n    };\n  }\n\n}\n\nexport const queue = new Queue();","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/queue-page/queue_class.tsx"],"names":["Queue","queue","head","tail","currentIndex","maxSize","enqueue","index","item","array","getSize","splice","Error","dequeue","empt","peak","clear","length","printStack","isFull"],"mappings":"AAUA,MAAMA,KAAN,CAA8B;AAAA;AAAA,SAC5BC,KAD4B,GACV,EADU;AAAA,SAE5BC,IAF4B,GAErB,CAFqB;AAAA,SAG5BC,IAH4B,GAGrB,CAAC,CAHoB;AAAA,SAI5BC,YAJ4B,GAIb,CAJa;AAAA,SAKpBC,OALoB,GAKV,CALU;;AAAA,SAO5BC,OAP4B,GAOlB,CAACC,KAAD,EAAgBC,IAAhB,EAA8BC,KAA9B,KAAkD;AAC1D,UAAI,KAAKC,OAAL,KAAiB,KAAKL,OAA1B,EAAmC;AACjCI,QAAAA,KAAK,CAACE,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBC,IAAvB;AACA,aAAKL,IAAL;AACA,aAAKC,YAAL;AACA,aAAKH,KAAL,GAAaQ,KAAb;AACD,OALD,MAKO;AACL,cAAM,IAAIG,KAAJ,CAAU,yBAAV,CAAN;AACD;AACF,KAhB2B;;AAAA,SAkB5BC,OAlB4B,GAkBlB,CAACN,KAAD,EAAgBC,IAAhB,EAA8BC,KAA9B,EAA+CK,IAA/C,KAA8D;AACtE,UAAI,KAAKX,IAAL,GAAY,KAAKD,IAArB,EAA2B;AACzBO,QAAAA,KAAK,CAACE,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBC,IAAvB;AACA,aAAKN,IAAL;AACD,OAHD,MAGQ;AACN,aAAKA,IAAL,GAAY,CAAZ;AACD;;AACD,WAAKD,KAAL,GAAaQ,KAAb;AACD,KA1B2B;;AAAA,SA4B5BM,IA5B4B,GA4BrB,MAAgB;AACrB,UAAI,KAAKL,OAAL,EAAJ,EAAoB;AAClB,eAAO,KAAKT,KAAL,CAAW,KAAKS,OAAL,KAAiB,CAA5B,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KAjC2B;;AAAA,SAmC5BM,KAnC4B,GAmCpB,MAAY;AAClB,WAAKf,KAAL,GAAa,EAAb;AACD,KArC2B;;AAAA,SAuC5BS,OAvC4B,GAuClB,MAAM,KAAKT,KAAL,CAAWgB,MAvCC;;AAAA,SAyC5BC,UAzC4B,GAyCf,MAAM,KAAKjB,KAzCI;;AAAA,SA2C5BkB,MA3C4B,GA2CnB,MAAM;AACb,UAAI,KAAKT,OAAL,KAAiB,KAAKL,OAA1B,EAAmC;AACjC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAhD2B;AAAA;;AAAA;;AAmD9B,OAAO,MAAMJ,KAAK,GAAG,IAAID,KAAJ,EAAd","sourcesContent":["interface IQueue {\n  enqueue: (index: number, item: string, array: string[]) => void;\n  dequeue: (index: number, item: string, array: string[]) => void;\n  peak: () => number | null;\n  getSize: () => number;\n  printStack: () => number[];\n  clear: () => void;\n  isFull: () => boolean;\n}\n\nclass Queue implements IQueue {\n  queue: string[] = [];\n  head = 0;\n  tail = -1;\n  currentIndex = 0;\n  private maxSize = 8;\n\n  enqueue = (index: number, item: string, array: string[]) => {\n    if (this.getSize() < this.maxSize) {\n      array.splice(index, 1, item);\n      this.tail++;\n      this.currentIndex++;\n      this.queue = array;\n    } else {\n      throw new Error(\"Слишком много элементов\");\n    }\n  };\n\n  dequeue = (index: number, item: string, array: string[], empt): void => {\n    if (this.tail > this.head) {\n      array.splice(index, 1, item);\n      this.head++;\n    } else  {\n      this.head = 0;\n    }\n    this.queue = array;\n  };\n\n  peak = (): T | null => {\n    if (this.getSize()) {\n      return this.queue[this.getSize() - 1];\n    }\n    return null;\n  };\n\n  clear = (): void => {\n    this.queue = [];\n  };\n\n  getSize = () => this.queue.length;\n\n  printStack = () => this.queue;\n\n  isFull = () => {\n    if (this.getSize() < this.maxSize) {\n      return false;\n    }\n    return true;\n  };\n}\n\nexport const queue = new Queue<string>();\n"]},"metadata":{},"sourceType":"module"}