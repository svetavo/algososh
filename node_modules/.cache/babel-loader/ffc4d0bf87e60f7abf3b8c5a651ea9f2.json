{"ast":null,"code":"var _jsxFileName = \"/Users/svetavo/dev/algososh/src/components/list-page/list-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./list.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { randomArr } from \"../../utils/utils\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport { addHead, addTail, removeHead, removeTail, addIndex, removeIndex } from \"../../utils/list-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListPage = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  const [isLoader, setIsLoader] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [list, setList] = useState([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n  useEffect(() => {\n    setList(randomArr());\n    setTail(list.length - 1);\n  }, [head, t]);\n\n  const onChangeValue = e => {\n    setValue(e.target.value);\n  };\n\n  const onChangeIndex = e => {\n    setIndex(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0432\\u044F\\u0437\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputs,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeValue,\n            value: value,\n            maxLength: 4,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 head\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: () => addHead({\n              list,\n              value,\n              setIsLoader,\n              setHead,\n              setIsChanging,\n              setTail\n            }),\n            disabled: list.length > 7 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 tail\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: () => addTail({\n              list,\n              value,\n              setIsLoader,\n              setTail\n            }),\n            disabled: list.length > 7 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 head\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: () => removeHead({\n              list,\n              setIsLoader,\n              setHead\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 tail\",\n            isLoader: isLoader,\n            onClick: () => removeTail({\n              list,\n              setIsLoader,\n              setTail\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeIndex,\n            value: index,\n            maxLength: 4,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n            isLoader: isLoader,\n            extraClass: \"mr-5\",\n            onClick: () => addIndex({\n              list,\n              value,\n              index,\n              setIsLoader\n            }),\n            disabled: list.length > 7 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n            isLoader: isLoader,\n            extraClass: \"mr-20\",\n            onClick: () => removeIndex({\n              list,\n              index,\n              setIsLoader\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.resultCell,\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              letter: item,\n              index: index,\n              extraClass: styles.item,\n              state: tail === index ? ElementStates.Changing : ElementStates.Default,\n              head: isChanging ? /*#__PURE__*/_jsxDEV(Circle, {\n                isSmall: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 23\n              }, this) : head === index ? \"head\" : null,\n              tail: tail === index ? \"tail\" : null\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), index === list.length - 1 ? null : /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 53\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPage, \"ciNbVK65aj3eENLetV6KnRnQJck=\");\n\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/components/list-page/list-page.tsx"],"names":["React","useState","useEffect","SolutionLayout","styles","Button","Input","Circle","ElementStates","randomArr","ArrowIcon","addHead","addTail","removeHead","removeTail","addIndex","removeIndex","ListPage","value","setValue","index","setIndex","isLoader","setIsLoader","currentIndex","setCurrentIndex","list","setList","tail","setTail","head","setHead","isChanging","setIsChanging","length","t","onChangeValue","e","target","onChangeIndex","container","inputs","input","result","map","item","resultCell","Changing","Default"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useEffect } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport styles from \"./list.module.css\";\nimport { Button } from \"../ui/button/button\";\nimport { Input } from \"../ui/input/input\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { randomArr } from \"../../utils/utils\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport {\n  addHead,\n  addTail,\n  removeHead,\n  removeTail,\n  addIndex,\n  removeIndex,\n} from \"../../utils/list-utils\";\n\nexport const ListPage: React.FC = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [index, setIndex] = useState<string>(\"\");\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [list, setList] = useState<string[]>([]);\n  const [tail, setTail] = useState(-1);\n  const [head, setHead] = useState<number>(0);\n  const [isChanging, setIsChanging] = useState(false);\n\n  useEffect(() => {\n    setList(randomArr());\n    setTail(list.length - 1);\n  }, [head, t]);\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onChangeIndex = (e: ChangeEvent<HTMLInputElement>) => {\n    setIndex(e.target.value);\n  };\n\n  return (\n    <SolutionLayout title=\"Связный список\">\n      <div className={styles.container}>\n        <div className={styles.inputs}>\n          <div className={styles.input}>\n            <Input\n              onChange={onChangeValue}\n              value={value}\n              maxLength={4}\n              placeholder=\"Введите значение\"\n            />\n            <Button\n              text=\"Добавить в head\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={() =>\n                addHead({\n                  list,\n                  value,\n                  setIsLoader,\n                  setHead,\n                  setIsChanging,\n                  setTail,\n                })\n              }\n              disabled={list.length > 7 ? true : false}\n            />\n            <Button\n              text=\"Добавить в tail\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={() => addTail({ list, value, setIsLoader, setTail })}\n              disabled={list.length > 7 ? true : false}\n            />\n            <Button\n              text=\"Удалить из head\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={() => removeHead({ list, setIsLoader, setHead })}\n            />\n            <Button\n              text=\"Удалить из tail\"\n              isLoader={isLoader}\n              onClick={() => removeTail({ list, setIsLoader, setTail })}\n            />\n          </div>\n          <div className={styles.input}>\n            <Input\n              onChange={onChangeIndex}\n              value={index}\n              maxLength={4}\n              placeholder=\"Введите индекс\"\n            />\n            <Button\n              text=\"Добавить по индексу\"\n              isLoader={isLoader}\n              extraClass=\"mr-5\"\n              onClick={() => addIndex({ list, value, index, setIsLoader })}\n              disabled={list.length > 7 ? true : false}\n            />\n\n            <Button\n              text=\"Удалить по индексу\"\n              isLoader={isLoader}\n              extraClass=\"mr-20\"\n              onClick={() => removeIndex({ list, index, setIsLoader })}\n            />\n          </div>\n        </div>\n        <div>\n          <div className={styles.result}>\n            {list.map((item, index) => (\n              <div className={styles.resultCell} key={index}>\n                <Circle\n                  letter={item}\n                  key={index}\n                  index={index}\n                  extraClass={styles.item}\n                  state={\n                    tail === index\n                      ? ElementStates.Changing\n                      : ElementStates.Default\n                  }\n                  head={\n                    isChanging ? (\n                      <Circle isSmall={true} />\n                    ) : head === index ? (\n                      \"head\"\n                    ) : null\n                  }\n                  tail={tail === index ? \"tail\" : null}\n                />\n                {index === list.length - 1 ? null : <ArrowIcon />}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}