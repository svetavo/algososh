{"ast":null,"code":"export const addHead = (array, item, setIsLoader, setHead, setIsChangi, tail) => {\n  if (item) {\n    setIsLoader(true);\n    setHead(-1);\n    setIsChanging(true);\n    array.unshift(item);\n    setIsChanging(false);\n    setHead(0);\n    setTail(array.length - 1);\n  } else {\n    alert(\"введите значение в инпут\");\n  }\n\n  setIsLoader(false);\n};","map":{"version":3,"sources":["/Users/svetavo/dev/algososh/src/utils/list-utils.ts"],"names":["addHead","array","item","setIsLoader","setHead","setIsChangi","tail","setIsChanging","unshift","setTail","length","alert"],"mappings":"AAaA,OAAO,MAAMA,OAAO,GAAG,CAAEC,KAAF,EAASC,IAAT,EAAuBC,WAAvB,EAAoCC,OAApC,EAA6CC,WAA7C,EAA0DC,IAA1D,KAAmE;AACtF,MAAIJ,IAAJ,EAAU;AACRC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,IAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACAG,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,IAAAA,KAAK,CAACO,OAAN,CAAcN,IAAd;AACAK,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAK,IAAAA,OAAO,CAACR,KAAK,CAACS,MAAN,GAAe,CAAhB,CAAP;AACD,GARD,MAQO;AACLC,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AACDR,EAAAA,WAAW,CAAC,KAAD,CAAX;AACD,CAbI","sourcesContent":["import { Dispatch, SetStateAction, FunctionComponent } from \"react\";\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ninterface IProps {\n  array: any[], \n  item: string;\n  setHead: Dispatcher<number | null>;\n  setIsLoader: Dispatcher<boolean>;\n  setIsChanging: Dispatcher<boolean>;\n  setTail: Dispatcher<number>\n}\n\nexport const addHead = ( array, item: string, setIsLoader, setHead, setIsChangi, tail) => {\n    if (item) {\n      setIsLoader(true);\n      setHead(-1);\n      setIsChanging(true);\n      array.unshift(item);\n      setIsChanging(false);\n      setHead(0);\n      setTail(array.length - 1);\n    } else {\n      alert(\"введите значение в инпут\");\n    }\n    setIsLoader(false);\n  };\n"]},"metadata":{},"sourceType":"module"}